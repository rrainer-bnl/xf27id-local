CLOSE

;####################################################
; PLC for putting PMAC into defined state at startup
; Original Author: Micromech
; Used variables: i5112, (P101..P132 reserved for CS mres)
; Macros (and values): 
; PLC2 = $(PLC2=DISABLE) ; Enable or disable PLC2
; ...
; PLC31 = $(PLC31=DISABLE) ; Enable or disable PLC31
; CMDS = $(CMDS=) ;Extra commands to run after PLCS are started
; This PLC will make sure a PMAC is in a known state at startup by resetting 
; UMACs, clearing macro ring faults, zeroing axis positions, defining some 
; lookahead buffers, and enabling/disabling PLCs. After first run, it will just 
; define the buffers and enable/disable PLCs
;
; NB Needs either PMAC_M_variables.pmc loaded
;####################################################


; To make timeout more readable
#define MilliSeconds               * 8388608/i10
#define timer                      i5112
; This m variable is zeroed at startup
#define runFlag                    M4900

OPEN PLC1
CLEAR

IF (runFlag = 0)
    ; Mark the PLC as having had its first run
    runFlag = 1
    
    ; Disable PLCs
    DISABLE PLC0    
    DISABLE PLC2..31    
    timer=1000 MilliSeconds
    WHILE(timer>0)
    ENDW  

    ;Wait for MACRO ring errors to clear
    WHILE ((i6840 & $f) != 0)
    	;100ms delay to prevent i6840 being read too frequently
    	timer=100 MilliSeconds
    	WHILE(timer>0)
    	ENDW
    ENDW

    ; Reset macro stations
    COMMAND"ms$$$0"
    timer=1000 MilliSeconds
    WHILE(timer>0)
    ENDW
    COMMAND"ms$$$32"
    timer=1000 MilliSeconds
    WHILE(timer>0)
    ENDW
    COMMAND"ms$$$60"
    timer=1000 MilliSeconds
    WHILE(timer>0)
    ENDW

    ;Clear any macro faults
    COMMAND"MSCLRF0"
    COMMAND"MSCLRF16"
    COMMAND"MSCLRF32"
    COMMAND"MSCLRF48"
    COMMAND"MSCLRF60"

    ; stop all motors
    COMMAND^A

    ;1000ms delay to make sure everything has stopped
    timer=1000 MilliSeconds
    WHILE(timer>0)
    ENDW

    ; kill all motors
    COMMAND^K

    ;100ms delay to process the kill
    timer=100 MilliSeconds
    WHILE(timer>0)
    ENDW

    ; For 32 axes:
    ; Set Mx61 = Commanded position = 0 on PMAC reset to make sure autosave works correctly.
    ; Set Mx62 = Actual position    = 0 on PMAC reset to make sure autosave works correctly.
    CMD"M161..162 = 0"
    CMD"M261..262 = 0"
    CMD"M361..362 = 0"
    CMD"M461..462 = 0"
    CMD"M561..562 = 0"
    CMD"M661..662 = 0"
    CMD"M761..762 = 0"
    CMD"M861..862 = 0"
    CMD"M961..962 = 0"
    CMD"M1061..1062 = 0"
    CMD"M1161..1162 = 0"
    CMD"M1261..1262 = 0"
    CMD"M1361..1362 = 0"
    CMD"M1461..1462 = 0"
    CMD"M1561..1562 = 0"
    CMD"M1661..1662 = 0"
    CMD"M1761..1762 = 0"
    CMD"M1861..1862 = 0"
    CMD"M1961..1962 = 0"
    CMD"M2061..2062 = 0"
    CMD"M2161..2162 = 0"
    CMD"M2261..2262 = 0"
    CMD"M2361..2362 = 0"
    CMD"M2461..2462 = 0"
    CMD"M2561..2562 = 0"
    CMD"M2661..2662 = 0"
    CMD"M2761..2762 = 0"
    CMD"M2861..2862 = 0"
    CMD"M2961..2962 = 0"
    CMD"M3061..3062 = 0"
    CMD"M3161..3162 = 0"
    CMD"M3261..3262 = 0"

    ;100ms delay to prevent motors going into following error
    timer=100 MilliSeconds
    WHILE(timer>0)
    ENDW

    ; stop all motors
    COMMAND^A
ENDIF

; define lookaheads for coordinate systems
ADDRESS&16
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&15
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&14
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&13
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&12
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&11
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&10
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&9
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&8
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&7
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&6
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&5
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&4
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&3
COMMAND"DEFINE LOOKAHEAD 50,10"
ADDRESS&2
COMMAND"DEFINE LOOKAHEAD 50,10"

; Enable or disable all PLCs
$(PLC0=DISABLE) PLC0
$(PLC2=DISABLE) PLC2
$(PLC3=DISABLE) PLC3
$(PLC4=DISABLE) PLC4
$(PLC5=DISABLE) PLC5
$(PLC6=DISABLE) PLC6
$(PLC7=DISABLE) PLC7
$(PLC8=DISABLE) PLC8
$(PLC9=DISABLE) PLC9
$(PLC10=DISABLE) PLC10
$(PLC11=DISABLE) PLC11
$(PLC12=DISABLE) PLC12
$(PLC13=DISABLE) PLC13
$(PLC14=DISABLE) PLC14
$(PLC15=DISABLE) PLC15
$(PLC16=DISABLE) PLC16
$(PLC17=DISABLE) PLC17
$(PLC18=DISABLE) PLC18
$(PLC19=DISABLE) PLC19
$(PLC20=DISABLE) PLC20
$(PLC21=DISABLE) PLC21
$(PLC22=DISABLE) PLC22
$(PLC23=DISABLE) PLC23
$(PLC24=DISABLE) PLC24
$(PLC25=DISABLE) PLC25
$(PLC26=DISABLE) PLC26
$(PLC27=DISABLE) PLC27
$(PLC28=DISABLE) PLC28
$(PLC29=DISABLE) PLC29
$(PLC30=DISABLE) PLC30
$(PLC31=DISABLE) PLC31

; Run any extra commands
$(CMDS=)

; Disable this PLC
DISABLE PLC1

CLOSE
