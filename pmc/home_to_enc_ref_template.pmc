; Homing PLC for Axis $(AXIS) (PLC $(PLC))

; This homing routine will move to a limit, and then search for the encoder
; reference mark.
; The axis home velocity sign sets the direction for the final "home to reference
; mark" move. The initial move to the limit will be in the opposite direction.
; 
; Wayne Lewis 20140108
; 
; Macros:
; - PLC: PLC number
; - AXIS: motion axis
; - TIMER: PMAC timer to use
; - SERVO: first three digits of axis gate array (I7mn)

; P variables
; P$(PLC)00 - homing state (homing, not homing)
; P$(PLC)01 - homing status (limit search, home search, post-home move)
; P$(PLC)02 - post-home move (0 = return to previous, 1 = stay at zero)

; Homing State P Variable
P$(PLC)00 = 0

; Homing Status P Variable
P$(PLC)01 = 0

DEL GAT
OPEN PLC$(PLC) CLEAR
P$(PLC)01 = 1

;---- Configuring State ----
P$(PLC)00=1
;Save high soft limits to P variable Pxx04
P$(PLC)04=I$(AXIS)13
;Save the low soft limits to P variable Pxx20
P$(PLC)20=I$(AXIS)14
;Save the home capture 2lags to P variable Pxx36
P$(PLC)36=I$(SERVO)2
;Save the limit flags to P variable Pxx68
P$(PLC)68=I$(AXIS)24
;Save the current position to P variable Pxx84
P$(PLC)84=M$(AXIS)62
;Clear the soft limits
I$(AXIS)13=0
I$(AXIS)14=0

if (P$(PLC)01 = 1)

  ;---- FastSearch State ----
  ; Move to the limit switch
	if (P$(PLC)01=1)
		P$(PLC)00=8
		; Execute the move commands
		M$(AXIS)72=100000000*(-I$(AXIS)23/ABS(I$(AXIS)23))
		cmd "#$(AXIS)J^*"
		; Wait for the move to complete
		I$(TIMER) = 20 * 8388608/I10 ; Small delay to start moving
		while (I$(TIMER) > 0)
		endw
		I$(TIMER) = 600000 * 8388608/I10 ; Now start checking the conditions
		while (M$(AXIS)40=0) ; At least one motor should not be In Position
		and (M$(AXIS)42=0) ; No following errors should be set for any motor
		and (I$(TIMER) > 0) ; Check for timeout
		and (P$(PLC)01 = 1) ; Check that we didn't abort
		endw

		; Check why we left the while loop
		if (M$(AXIS)42=1) ; If a motor hit a following error
			P$(PLC)01 = 4
		endif
		if (I$(TIMER)<0 or I$(TIMER)=0) ; If we timed out
			P$(PLC)01 = 3
		endif
	endif

	;---- Store the difference between current pos and start pos ----
	if (P$(PLC)01=1)
		P$(PLC)86=(P$(PLC)86-M$(AXIS)62)/(I$(AXIS)08*32)-(I$(AXIS)26/16)
	endif

	;---- Homing State ----
	if (P$(PLC)01=1)
		P$(PLC)00=4
    ; Set the capture flag 
    I$(SERVO)2=1
		; Execute the move commands
		cmd "#$(AXIS)hm"
		; Wait for the move to complete
		I$(TIMER) = 20 * 8388608/I10 ; Small delay to start moving
		while (I$(TIMER) > 0)
		endw
		I$(TIMER) = 600000 * 8388608/I10 ; Now start checking the conditions
		while (M$(AXIS)40=0) ; At least one motor should not be In Position
		and (M$(AXIS)42=0) ; No following errors should be set for any motor
		and (M$(AXIS)30=0) ; Should not stop on position limit for selected motors
		and (I$(TIMER) > 0) ; Check for timeout
		and (P$(PLC)01 = 1) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (M$(AXIS)42=1) ; If a motor hit a following error
			P$(PLC)01 = 4
		endif
		if (M$(AXIS)30=1) ; If a motor hit a limit
			P$(PLC)01 = 5
		endif
		if (I$(TIMER)<0 or I$(TIMER)=0) ; If we timed out
			P$(PLC)01 = 3
		endif
	endif

	;---- Check if all motors have homed ----
	if (P$(PLC)01=1)
	and (M$(AXIS)45=0)
		P$(PLC)01=6
	endif

	;---- PostHomeMove State ----
	if (P$(PLC)01=1)
    ; Check the type of post-home move
    if (P$(PLC)02 = 0)
      P$(PLC)00=5
      ; Execute the move commands
      M$(AXIS)72=P$(PLC)84/(I$(AXIS)08*32)
      cmd "#$(AXIS)J=*"
      ; Wait for the move to complete
      I$(TIMER) = 20 * 8388608/I10 ; Small delay to start moving
      while (I$(TIMER) > 0)
      endw
      I$(TIMER) = 600000 * 8388608/I10 ; Now start checking the conditions
      while (M$(AXIS)40=0) ; At least one motor should not be In Position
      and (M$(AXIS)42=0) ; No following errors should be set for any motor
      and (M$(AXIS)30=0) ; Should not stop on position limit for selected motors
      and (I$(TIMER) > 0) ; Check for timeout
      and (P$(PLC)01 = 1) ; Check that we didn't abort
      endw
      ; Check why we left the while loop
      if (M$(AXIS)42=1) ; If a motor hit a following error
        P$(PLC)01 = 4
      endif
      if (M$(AXIS)30=1) ; If a motor hit a limit
        P$(PLC)01 = 5
      endif
      if (I$(TIMER)<0 or I$(TIMER)=0) ; If we timed out
        P$(PLC)01 = 3
      endif
    endif
	endif

endif

;---- Done ----
if (P$(PLC)01 = 1)
	;If we've got this far without failing, set status and state done
	P$(PLC)01=0
	P$(PLC)00=7
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (M$(AXIS)42=0)
	cmd "#$(AXIS)J/"
endif
;Restore the high soft limits from P variables Pxx04..x19
I$(AXIS)13=P$(PLC)04
;Restore the low soft limits from P variables Pxx20..x35
I$(AXIS)14=P$(PLC)20
;Restore the home capture flags from P variables Pxx36..x51
I$(SERVO)2=P$(PLC)36
;Restore the limit flags to P variables Pxx68..x83
I$(AXIS)24=P$(PLC)68

DISABLE PLC$(PLC)
CLOSE


