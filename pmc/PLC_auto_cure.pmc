
;###########################################################
; PLC_auto_cure.pmc
;  This PLC runs PLC6 if the amplifier mode bit conflicts with the definition of the bit
;  as defined in this PLC. At time of writing (8/6/2010) sometimes the Geobrick sets the 
;  amp mode bit to servo for no reason, this PLC attempts to detect and fix the problem.
;  Delta Tau have promised a firmware update to fix this problem.
;  This PLC is only for use with Geobricks which have the new amplifier firmware
;  (look for a sticker saying flashed 09/09/09 or some other time in 09/09, if
;   you have firmware version 1.946 firmware or later you probably have the new 
;   amplifier firmware too). 
;  This PLC is derived from Trevors PLC7_Motion_Controls_Auto_Kill_or_Cure.pmc
; 
; NB Needs either BRICK_M_variables.pmc or PMAC_M_variables.pmc loaded (for M5006 defn.)
;
; Macros:
; PLC
;   PLC number
; NAXIS
;   The number of axis on the controller 1..16 (8 for a standard geobrick)
; SM1..SM16
;   Define which axis are steppers - set to 1 for a stepper, 0 for servo
;###########################################################

; Define which axis are in stepper mode - set to 1 for a stepper, 0 for servo
P$(PLC)01 = $(SM1)
P$(PLC)02 = $(SM2)
P$(PLC)03 = $(SM3)
P$(PLC)04 = $(SM4)
P$(PLC)05 = $(SM5)
P$(PLC)06 = $(SM6)
P$(PLC)07 = $(SM7)
P$(PLC)08 = $(SM8)
P$(PLC)09 = $(SM9)
P$(PLC)10 = $(SM10)
P$(PLC)11 = $(SM11)
P$(PLC)12 = $(SM12)
P$(PLC)13 = $(SM13)
P$(PLC)14 = $(SM14)
P$(PLC)15 = $(SM15)
P$(PLC)16 = $(SM16)

; used for storing current axis number
#define axis_number           P$(PLC)00

; define which axis are steppers - set bit to 1 for a stepper (bit 0 = axis 1... etc)
#define amplifier_mode        P(axis_number + $(PLC)00)

#define error_count           P(axis_number + $(PLC)16)

#define plc6_flag             M5006

; define amp mode fault counter (incremented each time PLC 6 is run - cleared manually)
#define fault_counter         P(axis_number + $(PLC)32)

; amplifier mode bit Mxx89
#define amp_mode_bit          M(axis_number*100 + 89)

#define kill_axis             &COMMAND"K"

; this is how many matching readings are needed for amplifier status
#define NREADINGS 5

OPEN PLC $(PLC)
CLEAR

axis_number = 1
WHILE(axis_number !> $(NAXIS))
	IF(plc6_flag=1) ;if plc6 is not running
		IF(amp_mode_bit=0)  ;this says it is a  Brushless or dc servo
		AND(amplifier_mode=1) ;if configured as stepper we have a problem...
			error_count=error_count+1 ;debounce
			IF (error_count !< NREADINGS)
				ADDRESS#axis_number
				kill_axis
				fault_counter=fault_counter+1
				ENABLE PLC6   ;reset Mode
				error_count=0
			ENDIF
		ELSE
			error_count=0
		END IF

		axis_number = axis_number+1
	END IF
ENDWHILE

CLOSE
