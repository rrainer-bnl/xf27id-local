menu(mcaREAD) {
    choice(mcaREAD_Done, "Done")
    choice(mcaREAD_Read, "Read")
}
menu(stringoutPOST) {
    choice(stringoutPOST_OnChange, "On Change")
    choice(stringoutPOST_Always, "Always")
}
menu(acalcoutOOPT) {
    choice(acalcoutOOPT_Every_Time, "Every Time")
    choice(acalcoutOOPT_On_Change, "On Change")
    choice(acalcoutOOPT_When_Zero, "When Zero")
    choice(acalcoutOOPT_When_Non_zero, "When Non-zero")
    choice(acalcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(acalcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(acalcoutOOPT_Never, "Never")
}
menu(asynEOMREASON) {
    choice(asynEOMREASONNone, "None")
    choice(asynEOMREASONCNT, "Count")
    choice(asynEOMREASONEOS, "Eos")
    choice(asynEOMREASONCNTEOS, "Count Eos")
    choice(asynEOMREASONEND, "End")
    choice(asynEOMREASONCNTEND, "Count End")
    choice(asynEOMREASONEOSEND, "Eos End")
    choice(asynEOMREASONCNTEOSEND, "Count Eos End")
}
menu(swaitDOPT) {
    choice(swaitDOPT_Use_VAL, "Use VAL")
    choice(swaitDOPT_Use_DOL, "Use DOL")
}
menu(serialBAUD) {
    choice(serialBAUD_unknown, "Unknown")
    choice(serialBAUD_300, "300")
    choice(serialBAUD_600, "600")
    choice(serialBAUD_1200, "1200")
    choice(serialBAUD_2400, "2400")
    choice(serialBAUD_4800, "4800")
    choice(serialBAUD_9600, "9600")
    choice(serialBAUD_19200, "19200")
    choice(serialBAUD_38400, "38400")
    choice(serialBAUD_57600, "57600")
    choice(serialBAUD_115200, "115200")
    choice(serialBAUD_230400, "230400")
    choice(serialBAUD_460800, "460800")
    choice(serialBAUD_576000, "576000")
    choice(serialBAUD_921600, "921600")
    choice(serialBAUD_1152000, "1152000")
}
menu(menuAlarmSevr) {
    choice(menuAlarmSevrNO_ALARM, "NO_ALARM")
    choice(menuAlarmSevrMINOR, "MINOR")
    choice(menuAlarmSevrMAJOR, "MAJOR")
    choice(menuAlarmSevrINVALID, "INVALID")
}
menu(asynENABLE) {
    choice(asynENABLE_Disable, "Disable")
    choice(asynENABLE_Enable, "Enable")
}
menu(aaoPOST) {
    choice(aaoPOST_Always, "Always")
    choice(aaoPOST_OnChange, "On Change")
}
menu(mcaCHAS) {
    choice(mcaCHAS_Internal, "Internal")
    choice(mcaCHAS_External, "External")
}
menu(calcoutDOPT) {
    choice(calcoutDOPT_Use_VAL, "Use CALC")
    choice(calcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(mcaSTRT) {
    choice(mcaSTRT_Done, "Done")
    choice(mcaSTRT_Acquire, "Acquire")
}
menu(scalcoutINAV) {
    choice(scalcoutINAV_EXT_NC, "Ext PV NC")
    choice(scalcoutINAV_EXT, "Ext PV OK")
    choice(scalcoutINAV_LOC, "Local PV")
    choice(scalcoutINAV_CON, "Constant")
}
menu(acalcoutDOPT) {
    choice(acalcoutDOPT_Use_VAL, "Use CALC")
    choice(acalcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(aoOIF) {
    choice(aoOIF_Full, "Full")
    choice(aoOIF_Incremental, "Incremental")
}
menu(menuPini) {
    choice(menuPiniNO, "NO")
    choice(menuPiniYES, "YES")
    choice(menuPiniRUN, "RUN")
    choice(menuPiniRUNNING, "RUNNING")
    choice(menuPiniPAUSE, "PAUSE")
    choice(menuPiniPAUSED, "PAUSED")
}
menu(calcoutINAV) {
    choice(calcoutINAV_EXT_NC, "Ext PV NC")
    choice(calcoutINAV_EXT, "Ext PV OK")
    choice(calcoutINAV_LOC, "Local PV")
    choice(calcoutINAV_CON, "Constant")
}
menu(mcaMODE) {
    choice(mcaMODE_PHA, "PHA")
    choice(mcaMODE_MCS, "MCS")
    choice(mcaMODE_List, "List")
}
menu(menuFtype) {
    choice(menuFtypeSTRING, "STRING")
    choice(menuFtypeCHAR, "CHAR")
    choice(menuFtypeUCHAR, "UCHAR")
    choice(menuFtypeSHORT, "SHORT")
    choice(menuFtypeUSHORT, "USHORT")
    choice(menuFtypeLONG, "LONG")
    choice(menuFtypeULONG, "ULONG")
    choice(menuFtypeINT64, "INT64")
    choice(menuFtypeUINT64, "UINT64")
    choice(menuFtypeFLOAT, "FLOAT")
    choice(menuFtypeDOUBLE, "DOUBLE")
    choice(menuFtypeENUM, "ENUM")
}
menu(compressALG) {
    choice(compressALG_N_to_1_Low_Value, "N to 1 Low Value")
    choice(compressALG_N_to_1_High_Value, "N to 1 High Value")
    choice(compressALG_N_to_1_Average, "N to 1 Average")
    choice(compressALG_Average, "Average")
    choice(compressALG_Circular_Buffer, "Circular Buffer")
    choice(compressALG_N_to_1_Median, "N to 1 Median")
}
menu(menuYesNo) {
    choice(menuYesNoNO, "NO")
    choice(menuYesNoYES, "YES")
}
menu(dfanoutSELM) {
    choice(dfanoutSELM_All, "All")
    choice(dfanoutSELM_Specified, "Specified")
    choice(dfanoutSELM_Mask, "Mask")
}
menu(acalcoutSIZE) {
    choice(acalcoutSIZE_NELM, "NELM")
    choice(acalcoutSIZE_NUSE, "NUSE")
}
menu(serialFCTL) {
    choice(serialFCTL_unknown, "Unknown")
    choice(serialFCTL_None, "None")
    choice(serialFCTL_Hardware, "Hardware")
}
menu(swaitOOPT) {
    choice(swaitOOPT_Every_Time, "Every Time")
    choice(swaitOOPT_On_Change, "On Change")
    choice(swaitOOPT_When_Zero, "When Zero")
    choice(swaitOOPT_When_Non_zero, "When Non-zero")
    choice(swaitOOPT_Transition_To_Zero, "Transition To Zero")
    choice(swaitOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(swaitOOPT_Never, "Never")
}
menu(swaitINAV) {
    choice(swaitINAV_PV_OK, "PV OK")
    choice(swaitINAV_PV_BAD, "PV BAD")
    choice(swaitINAV_No_PV, "No PV")
}
menu(serialPRTY) {
    choice(serialPRTY_unknown, "Unknown")
    choice(serialPRTY_None, "None")
    choice(serialPRTY_Even, "Even")
    choice(serialPRTY_Odd, "Odd")
}
menu(aSubEFLG) {
    choice(aSubEFLG_NEVER, "NEVER")
    choice(aSubEFLG_ON_CHANGE, "ON CHANGE")
    choice(aSubEFLG_ALWAYS, "ALWAYS")
}
menu(serialIX) {
    choice(serialIX_unknown, "Unknown")
    choice(serialIX_No, "No")
    choice(serialIX_Yes, "Yes")
}
menu(waveformPOST) {
    choice(waveformPOST_Always, "Always")
    choice(waveformPOST_OnChange, "On Change")
}
menu(aaiPOST) {
    choice(aaiPOST_Always, "Always")
    choice(aaiPOST_OnChange, "On Change")
}
menu(scalcoutDOPT) {
    choice(scalcoutDOPT_Use_VAL, "Use CALC")
    choice(scalcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(menuPriority) {
    choice(menuPriorityLOW, "LOW")
    choice(menuPriorityMEDIUM, "MEDIUM")
    choice(menuPriorityHIGH, "HIGH")
}
menu(transformIVLA) {
    choice(transformIVLA_IGNORE, "Ignore error")
    choice(transformIVLA_DO_NOTHING, "Do Nothing")
}
menu(scalcoutINAP) {
    choice(scalcoutINAP_No, "No PROC on Change")
    choice(scalcoutINAP_Yes, "PROC on Change")
}
menu(transformIAV) {
    choice(transformIAV_EXT_NC, "Ext PV NC")
    choice(transformIAV_EXT, "Ext PV OK")
    choice(transformIAV_LOC, "Local PV")
    choice(transformIAV_CON, "Constant")
}
menu(menuAlarmStat) {
    choice(menuAlarmStatNO_ALARM, "NO_ALARM")
    choice(menuAlarmStatREAD, "READ")
    choice(menuAlarmStatWRITE, "WRITE")
    choice(menuAlarmStatHIHI, "HIHI")
    choice(menuAlarmStatHIGH, "HIGH")
    choice(menuAlarmStatLOLO, "LOLO")
    choice(menuAlarmStatLOW, "LOW")
    choice(menuAlarmStatSTATE, "STATE")
    choice(menuAlarmStatCOS, "COS")
    choice(menuAlarmStatCOMM, "COMM")
    choice(menuAlarmStatTIMEOUT, "TIMEOUT")
    choice(menuAlarmStatHWLIMIT, "HWLIMIT")
    choice(menuAlarmStatCALC, "CALC")
    choice(menuAlarmStatSCAN, "SCAN")
    choice(menuAlarmStatLINK, "LINK")
    choice(menuAlarmStatSOFT, "SOFT")
    choice(menuAlarmStatBAD_SUB, "BAD_SUB")
    choice(menuAlarmStatUDF, "UDF")
    choice(menuAlarmStatDISABLE, "DISABLE")
    choice(menuAlarmStatSIMM, "SIMM")
    choice(menuAlarmStatREAD_ACCESS, "READ_ACCESS")
    choice(menuAlarmStatWRITE_ACCESS, "WRITE_ACCESS")
}
menu(swaitINAP) {
    choice(swaitINAP_No, "No")
    choice(swaitINAP_Yes, "Yes")
}
menu(asynTMOD) {
    choice(asynTMOD_Write_Read, "Write/Read")
    choice(asynTMOD_Write, "Write")
    choice(asynTMOD_Read, "Read")
    choice(asynTMOD_Flush, "Flush")
    choice(asynTMOD_NoIO, "NoI/O")
}
menu(selSELM) {
    choice(selSELM_Specified, "Specified")
    choice(selSELM_High_Signal, "High Signal")
    choice(selSELM_Low_Signal, "Low Signal")
    choice(selSELM_Median_Signal, "Median Signal")
}
menu(gpibUCMD) {
    choice(gpibUCMD_None, "None")
    choice(gpibUCMD_Device_Clear__DCL_, "Device Clear (DCL)")
    choice(gpibUCMD_Local_Lockout__LL0_, "Local Lockout (LL0)")
    choice(gpibUCMD_Serial_Poll_Disable__SPD_, "Serial Poll Disable (SPD)")
    choice(gpibUCMD_Serial_Poll_Enable__SPE_, "Serial Poll Enable (SPE)")
    choice(gpibUCMD_Unlisten__UNL_, "Unlisten (UNL)")
    choice(gpibUCMD_Untalk__UNT_, "Untalk (UNT)")
}
menu(serialDBIT) {
    choice(serialDBIT_unknown, "Unknown")
    choice(serialDBIT_5, "5")
    choice(serialDBIT_6, "6")
    choice(serialDBIT_7, "7")
    choice(serialDBIT_8, "8")
}
menu(acalcoutWAIT) {
    choice(acalcoutWAIT_NoWait, "NoWait")
    choice(acalcoutWAIT_Wait, "Wait")
}
menu(stringinPOST) {
    choice(stringinPOST_OnChange, "On Change")
    choice(stringinPOST_Always, "Always")
}
menu(menuIvoa) {
    choice(menuIvoaContinue_normally, "Continue normally")
    choice(menuIvoaDon_t_drive_outputs, "Don't drive outputs")
    choice(menuIvoaSet_output_to_IVOV, "Set output to IVOV")
}
menu(menuPost) {
    choice(menuPost_OnChange, "On Change")
    choice(menuPost_Always, "Always")
}
menu(transformCOPT) {
    choice(transformCOPT_CONDITIONAL, "Conditional")
    choice(transformCOPT_ALWAYS, "Always")
}
menu(aSubLFLG) {
    choice(aSubLFLG_IGNORE, "IGNORE")
    choice(aSubLFLG_READ, "READ")
}
menu(sseqWAIT) {
    choice(sseqWAIT_NoWait, "NoWait")
    choice(sseqWAIT_Wait, "Wait")
    choice(sseqWAIT_Wait1, "After1")
    choice(sseqWAIT_Wait2, "After2")
    choice(sseqWAIT_Wait3, "After3")
    choice(sseqWAIT_Wait4, "After4")
    choice(sseqWAIT_Wait5, "After5")
    choice(sseqWAIT_Wait6, "After6")
    choice(sseqWAIT_Wait7, "After7")
    choice(sseqWAIT_Wait8, "After8")
    choice(sseqWAIT_Wait9, "After9")
    choice(sseqWAIT_Wait10, "AfterA")
}
menu(scalcoutWAIT) {
    choice(scalcoutWAIT_NoWait, "NoWait")
    choice(scalcoutWAIT_Wait, "Wait")
}
menu(serialSBIT) {
    choice(serialSBIT_unknown, "Unknown")
    choice(serialSBIT_1, "1")
    choice(serialSBIT_2, "2")
}
menu(calcoutOOPT) {
    choice(calcoutOOPT_Every_Time, "Every Time")
    choice(calcoutOOPT_On_Change, "On Change")
    choice(calcoutOOPT_When_Zero, "When Zero")
    choice(calcoutOOPT_When_Non_zero, "When Non-zero")
    choice(calcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(calcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
}
menu(acalcoutINAP) {
    choice(acalcoutINAP_No, "No PROC on Change")
    choice(acalcoutINAP_Yes, "PROC on Change")
}
menu(sseqLNKV) {
    choice(sseqLNKV_EXT_NC, "Ext PV NC")
    choice(sseqLNKV_EXT, "Ext PV OK")
    choice(sseqLNKV_LOC, "Local PV")
    choice(sseqLNKV_CON, "Constant")
}
menu(asynFMT) {
    choice(asynFMT_ASCII, "ASCII")
    choice(asynFMT_Hybrid, "Hybrid")
    choice(asynFMT_Binary, "Binary")
}
menu(asynTRACE) {
    choice(asynTRACE_Off, "Off")
    choice(asynTRACE_On, "On")
}
menu(gpibACMD) {
    choice(gpibACMD_None, "None")
    choice(gpibACMD_Group_Execute_Trig___GET_, "Group Execute Trig. (GET)")
    choice(gpibACMD_Go_To_Local__GTL_, "Go To Local (GTL)")
    choice(gpibACMD_Selected_Dev__Clear__SDC_, "Selected Dev. Clear (SDC)")
    choice(gpibACMD_Take_Control__TCT_, "Take Control (TCT)")
    choice(gpibACMD_Serial_Poll, "Serial Poll")
}
menu(scalcoutOOPT) {
    choice(scalcoutOOPT_Every_Time, "Every Time")
    choice(scalcoutOOPT_On_Change, "On Change")
    choice(scalcoutOOPT_When_Zero, "When Zero")
    choice(scalcoutOOPT_When_Non_zero, "When Non-zero")
    choice(scalcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(scalcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(scalcoutOOPT_Never, "Never")
}
menu(mcaERAS) {
    choice(mcaERAS_Done, "Done")
    choice(mcaERAS_Erase, "Erase")
}
menu(menuSimm) {
    choice(menuSimmNO, "NO")
    choice(menuSimmYES, "YES")
    choice(menuSimmRAW, "RAW")
}
menu(fanoutSELM) {
    choice(fanoutSELM_All, "All")
    choice(fanoutSELM_Specified, "Specified")
    choice(fanoutSELM_Mask, "Mask")
}
menu(asynAUTOCONNECT) {
    choice(asynAUTOCONNECT_noAutoConnect, "noAutoConnect")
    choice(asynAUTOCONNECT_autoConnect, "autoConnect")
}
menu(menuOmsl) {
    choice(menuOmslsupervisory, "supervisory")
    choice(menuOmslclosed_loop, "closed_loop")
}
menu(acalcoutINAV) {
    choice(acalcoutINAV_EXT_NC, "Ext PV NC")
    choice(acalcoutINAV_EXT, "Ext PV OK")
    choice(acalcoutINAV_LOC, "Local PV")
    choice(acalcoutINAV_CON, "Constant")
}
menu(seqSELM) {
    choice(seqSELM_All, "All")
    choice(seqSELM_Specified, "Specified")
    choice(seqSELM_Mask, "Mask")
}
menu(serialMCTL) {
    choice(serialMCTL_unknown, "Unknown")
    choice(serialMCTL_CLOCAL, "CLOCAL")
    choice(serialMCTL_Yes, "YES")
}
menu(ipDRTO) {
    choice(ipDRTO_unknown, "Unknown")
    choice(ipDRTO_No, "No")
    choice(ipDRTO_Yes, "Yes")
}
menu(asynINTERFACE) {
    choice(asynINTERFACE_OCTET, "asynOctet")
    choice(asynINTERFACE_INT32, "asynInt32")
    choice(asynINTERFACE_UINT32, "asynUInt32Digital")
    choice(asynINTERFACE_FLOAT64, "asynFloat64")
}
menu(asynCONNECT) {
    choice(asynCONNECT_Disconnect, "Disconnect")
    choice(asynCONNECT_Connect, "Connect")
}
menu(menuScan) {
    choice(menuScanPassive, "Passive")
    choice(menuScanEvent, "Event")
    choice(menuScanI_O_Intr, "I/O Intr")
    choice(menuScan10_second, "10 second")
    choice(menuScan5_second, "5 second")
    choice(menuScan2_second, "2 second")
    choice(menuScan1_second, "1 second")
    choice(menuScan_5_second, ".5 second")
    choice(menuScan_2_second, ".2 second")
    choice(menuScan_1_second, ".1 second")
}
menu(mcaR0IP) {
    choice(mcaR0IP_N, "N")
    choice(mcaR0IP_Y, "Y")
}
menu(histogramCMD) {
    choice(histogramCMD_Read, "Read")
    choice(histogramCMD_Clear, "Clear")
    choice(histogramCMD_Start, "Start")
    choice(histogramCMD_Stop, "Stop")
}
menu(sseqSELM) {
    choice(sseqSELM_All, "All")
    choice(sseqSELM_Specified, "Specified")
    choice(sseqSELM_Mask, "Mask")
}
menu(menuConvert) {
    choice(menuConvertNO_CONVERSION, "NO CONVERSION")
    choice(menuConvertSLOPE, "SLOPE")
    choice(menuConvertLINEAR, "LINEAR")
    choice(menuConverttypeKdegF, "typeKdegF")
    choice(menuConverttypeKdegC, "typeKdegC")
    choice(menuConverttypeJdegF, "typeJdegF")
    choice(menuConverttypeJdegC, "typeJdegC")
    choice(menuConverttypeEdegF, "typeEdegF(ixe only)")
    choice(menuConverttypeEdegC, "typeEdegC(ixe only)")
    choice(menuConverttypeTdegF, "typeTdegF")
    choice(menuConverttypeTdegC, "typeTdegC")
    choice(menuConverttypeRdegF, "typeRdegF")
    choice(menuConverttypeRdegC, "typeRdegC")
    choice(menuConverttypeSdegF, "typeSdegF")
    choice(menuConverttypeSdegC, "typeSdegC")
}
menu(bufferingALG) {
    choice(bufferingALG_FIFO, "FIFO Buffer")
    choice(bufferingALG_LIFO, "LIFO Buffer")
}
recordtype(seq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        size(40)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        prompt("Used to trigger")
        asl(ASL0)
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        menu(seqSELM)
        promptgroup("30 - Action")
        interest(1)
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
        interest(1)
    }
    field(OFFS, DBF_SHORT) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Offset for Specified")
        initial("0")
    }
    field(SHFT, DBF_SHORT) {
        prompt("Shift for Mask mode")
        initial("-1")
        interest(1)
        promptgroup("30 - Action")
    }
    field(OLDN, DBF_USHORT) {
        prompt("Old Selection")
        interest(4)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
    }
    field(DLY0, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 0")
    }
    field(DOL0, DBF_INLINK) {
        prompt("Input link 0")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DO0, DBF_DOUBLE) {
        interest(1)
        prompt("Value 0")
    }
    field(LNK0, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 0")
    }
    field(DLY1, DBF_DOUBLE) {
        prompt("Delay 1")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL1, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Input link1")
    }
    field(DO1, DBF_DOUBLE) {
        prompt("Value 1")
        interest(1)
    }
    field(LNK1, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 1")
    }
    field(DLY2, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 2")
    }
    field(DOL2, DBF_INLINK) {
        prompt("Input link 2")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO2, DBF_DOUBLE) {
        interest(1)
        prompt("Value 2")
    }
    field(LNK2, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Output Link 2")
    }
    field(DLY3, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 3")
    }
    field(DOL3, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 3")
    }
    field(DO3, DBF_DOUBLE) {
        prompt("Value 3")
        interest(1)
    }
    field(LNK3, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 3")
    }
    field(DLY4, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 4")
    }
    field(DOL4, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 4")
    }
    field(DO4, DBF_DOUBLE) {
        prompt("Value 4")
        interest(1)
    }
    field(LNK4, DBF_OUTLINK) {
        prompt("Output Link 4")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY5, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 5")
    }
    field(DOL5, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 5")
    }
    field(DO5, DBF_DOUBLE) {
        interest(1)
        prompt("Value 5")
    }
    field(LNK5, DBF_OUTLINK) {
        prompt("Output Link 5")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY6, DBF_DOUBLE) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Delay 6")
    }
    field(DOL6, DBF_INLINK) {
        prompt("Input link 6")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DO6, DBF_DOUBLE) {
        prompt("Value 6")
        interest(1)
    }
    field(LNK6, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Output Link 6")
    }
    field(DLY7, DBF_DOUBLE) {
        prompt("Delay 7")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL7, DBF_INLINK) {
        prompt("Input link 7")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO7, DBF_DOUBLE) {
        interest(1)
        prompt("Value 7")
    }
    field(LNK7, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 7")
    }
    field(DLY8, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 8")
    }
    field(DOL8, DBF_INLINK) {
        prompt("Input link 8")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DO8, DBF_DOUBLE) {
        interest(1)
        prompt("Value 8")
    }
    field(LNK8, DBF_OUTLINK) {
        prompt("Output Link 8")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DLY9, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 9")
    }
    field(DOL9, DBF_INLINK) {
        prompt("Input link 9")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DO9, DBF_DOUBLE) {
        interest(1)
        prompt("Value 9")
    }
    field(LNK9, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 9")
    }
    field(DLYA, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 10")
    }
    field(DOLA, DBF_INLINK) {
        prompt("Input link 10")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOA, DBF_DOUBLE) {
        interest(1)
        prompt("Value 10")
    }
    field(LNKA, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 10")
    }
    field(DLYB, DBF_DOUBLE) {
        prompt("Delay 11")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLB, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Input link 11")
    }
    field(DOB, DBF_DOUBLE) {
        interest(1)
        prompt("Value 11")
    }
    field(LNKB, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 11")
    }
    field(DLYC, DBF_DOUBLE) {
        prompt("Delay 12")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOLC, DBF_INLINK) {
        prompt("Input link 12")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOC, DBF_DOUBLE) {
        interest(1)
        prompt("Value 12")
    }
    field(LNKC, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 12")
    }
    field(DLYD, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 13")
    }
    field(DOLD, DBF_INLINK) {
        prompt("Input link 13")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOD, DBF_DOUBLE) {
        prompt("Value 13")
        interest(1)
    }
    field(LNKD, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 13")
    }
    field(DLYE, DBF_DOUBLE) {
        prompt("Delay 14")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOLE, DBF_INLINK) {
        prompt("Input link 14")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOE, DBF_DOUBLE) {
        interest(1)
        prompt("Value 14")
    }
    field(LNKE, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 14")
    }
    field(DLYF, DBF_DOUBLE) {
        prompt("Delay 15")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLF, DBF_INLINK) {
        prompt("Input link 15")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOF, DBF_DOUBLE) {
        prompt("Value 15")
        interest(1)
    }
    field(LNKF, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 15")
    }
}
recordtype(event) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct eventRecord;
    %typedef struct eventdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_event)(struct eventRecord *prec); /*(0)=> success */
    %} eventdset;
    %#define HAS_eventdset
    %
    %#include "dbScan.h"
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        prompt("Event Name To Post")
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("40 - Input")
        size(40)
    }
    field(EPVT, DBF_NOACCESS) {
        prompt("Event private")
        extra("EVENTPVT epvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SVAL, DBF_STRING) {
        prompt("Simulation Value")
        size(40)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
        initial("65535")
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
    }
}
device(event, CONSTANT, devEventSoft, "Soft Channel")
recordtype(permissive) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_USHORT) {
        promptgroup("40 - Input")
        prompt("Status")
        asl(ASL0)
        pp(TRUE)
    }
    field(WFLG, DBF_USHORT) {
        pp(TRUE)
        prompt("Wait Flag")
    }
    field(LABL, DBF_STRING) {
        interest(1)
        size(20)
        promptgroup("80 - Display")
        prompt("Button Label")
        pp(TRUE)
    }
    field(OVAL, DBF_USHORT) {
        prompt("Old Status")
        special(SPC_NOMOD)
        interest(3)
    }
    field(OFLG, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Old Flag")
    }
}
recordtype(calc) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPriority)
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Result")
    }
    field(CALC, DBF_STRING) {
        pp(TRUE)
        prompt("Calculation")
        initial("0")
        special(SPC_CALC)
        promptgroup("30 - Action")
        size(80)
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPE, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        prompt("High Operating Rng")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        pp(TRUE)
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        prompt("High Severity")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of E")
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of G")
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of H")
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of L")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(RPCL, DBF_NOACCESS) {
        prompt("Reverse Polish Calc")
        interest(4)
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        special(SPC_NOMOD)
    }
}
recordtype(mbboDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbboDirectRecord;
    %typedef struct mbbodirectdset {
    %    dset common; /*init_record returns: (0, 2)=>(success, success no convert)*/
    %    long (*write_mbbo)(struct mbboDirectRecord *prec); /*returns: (0, 2)=>(success, success no convert)*/
    %} mbbodirectdset;
    %#define HAS_mbbodirectdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(2)
        menu(menuYesNo)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        prompt("Word")
        asl(ASL0)
        pp(TRUE)
        promptgroup("50 - Output")
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        pp(TRUE)
        menu(menuOmsl)
        special(SPC_RESET)
        interest(1)
        promptgroup("50 - Output")
    }
    field(NOBT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("50 - Output")
        prompt("Number of Bits")
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(RVAL, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Readback Value")
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Monitored")
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("50 - Output")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Mode Scan")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID outpt action")
    }
    field(IVOV, DBF_LONG) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
    field(B0, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
        pp(TRUE)
        prompt("Bit 0")
    }
    field(B1, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 1")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(B2, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 2")
        promptgroup("51 - Output 0-7")
        interest(1)
        special(SPC_MOD)
    }
    field(B3, DBF_UCHAR) {
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        prompt("Bit 3")
        pp(TRUE)
    }
    field(B4, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 4")
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(B5, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Bit 5")
        pp(TRUE)
    }
    field(B6, DBF_UCHAR) {
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        prompt("Bit 6")
        pp(TRUE)
    }
    field(B7, DBF_UCHAR) {
        prompt("Bit 7")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(B8, DBF_UCHAR) {
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 8")
        pp(TRUE)
    }
    field(B9, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 9")
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
    }
    field(BA, DBF_UCHAR) {
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 8-15")
        prompt("Bit 10")
        pp(TRUE)
    }
    field(BB, DBF_UCHAR) {
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 11")
    }
    field(BC, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
        pp(TRUE)
        prompt("Bit 12")
    }
    field(BD, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
        pp(TRUE)
        prompt("Bit 13")
    }
    field(BE, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
        pp(TRUE)
        prompt("Bit 14")
    }
    field(BF, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
        prompt("Bit 15")
        pp(TRUE)
    }
    field(B10, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 16")
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
    }
    field(B11, DBF_UCHAR) {
        prompt("Bit 17")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
    }
    field(B12, DBF_UCHAR) {
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
        prompt("Bit 18")
        pp(TRUE)
    }
    field(B13, DBF_UCHAR) {
        interest(1)
        promptgroup("53 - Output 16-23")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 19")
    }
    field(B14, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 20")
        interest(1)
        promptgroup("53 - Output 16-23")
        special(SPC_MOD)
    }
    field(B15, DBF_UCHAR) {
        prompt("Bit 21")
        pp(TRUE)
        promptgroup("53 - Output 16-23")
        interest(1)
        special(SPC_MOD)
    }
    field(B16, DBF_UCHAR) {
        promptgroup("53 - Output 16-23")
        interest(1)
        special(SPC_MOD)
        prompt("Bit 22")
        pp(TRUE)
    }
    field(B17, DBF_UCHAR) {
        prompt("Bit 23")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output 16-23")
    }
    field(B18, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        interest(1)
        prompt("Bit 24")
        pp(TRUE)
    }
    field(B19, DBF_UCHAR) {
        interest(1)
        promptgroup("54 - Output 24-31")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 25")
    }
    field(B1A, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        interest(1)
        prompt("Bit 26")
        pp(TRUE)
    }
    field(B1B, DBF_UCHAR) {
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        interest(1)
        pp(TRUE)
        prompt("Bit 27")
    }
    field(B1C, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 28")
        special(SPC_MOD)
        interest(1)
        promptgroup("54 - Output 24-31")
    }
    field(B1D, DBF_UCHAR) {
        special(SPC_MOD)
        interest(1)
        promptgroup("54 - Output 24-31")
        pp(TRUE)
        prompt("Bit 29")
    }
    field(B1E, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 30")
        interest(1)
        promptgroup("54 - Output 24-31")
        special(SPC_MOD)
    }
    field(B1F, DBF_UCHAR) {
        prompt("Bit 31")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("54 - Output 24-31")
        interest(1)
    }
}
device(mbboDirect, CONSTANT, devMbboDirectSoft, "Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftRaw, "Raw Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftCallback, "Async Soft Channel")
device(mbboDirect, INST_IO, asynMbboDirectUInt32Digital, "asynUInt32Digital")
recordtype(acalcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("unambiguous_dset    *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VERS, DBF_DOUBLE) {
        prompt("Code Version")
        initial("1")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        prompt("Record Private")
        special(SPC_NOMOD)
        size(4)
        extra("void *rpvt")
        interest(4)
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Result")
    }
    field(AVAL, DBF_NOACCESS) {
        extra("double *aval")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Array Value")
        asl(ASL0)
    }
    field(NELM, DBF_ULONG) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("Number of Elements")
    }
    field(NUSE, DBF_ULONG) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        initial("0")
        prompt("# elem's in use")
        pp(TRUE)
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(PAVL, DBF_NOACCESS) {
        extra("double *pavl")
        pp(TRUE)
        prompt("Prev. Array Value")
        asl(ASL0)
    }
    field(CALC, DBF_STRING) {
        pp(TRUE)
        prompt("Calculation")
        promptgroup("30 - Action")
        size(80)
        special(SPC_MOD)
    }
    field(CLCV, DBF_LONG) {
        prompt("CALC Valid")
        interest(1)
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INPB, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPI, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Input L")
    }
    field(INAA, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Array input AA")
    }
    field(INBB, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Array input BB")
    }
    field(INCC, DBF_INLINK) {
        prompt("Array input CC")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INDD, DBF_INLINK) {
        prompt("Array input DD")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INEE, DBF_INLINK) {
        prompt("Array input EE")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INFF, DBF_INLINK) {
        prompt("Array input FF")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INGG, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Array input GG")
    }
    field(INHH, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Array input HH")
    }
    field(INII, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Array input II")
    }
    field(INJJ, DBF_INLINK) {
        prompt("Array input JJ")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INKK, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("Array input KK")
    }
    field(INLL, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("Array input LL")
    }
    field(OUT, DBF_OUTLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Link")
    }
    field(INAV, DBF_MENU) {
        prompt("INPA PV Status")
        initial("1")
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
    }
    field(INBV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
        prompt("INPB PV Status")
        initial("1")
    }
    field(INCV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
        prompt("INPC PV Status")
        initial("1")
    }
    field(INDV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        initial("1")
        prompt("INPD PV Status")
    }
    field(INEV, DBF_MENU) {
        prompt("INPE PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INFV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        initial("1")
        prompt("INPF PV Status")
    }
    field(INGV, DBF_MENU) {
        prompt("INPG PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INHV, DBF_MENU) {
        prompt("INPH PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INIV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
        prompt("INPI PV Status")
        initial("1")
    }
    field(INJV, DBF_MENU) {
        interest(1)
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPJ PV Status")
    }
    field(INKV, DBF_MENU) {
        prompt("INPK PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INLV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
        prompt("INPL PV Status")
        initial("1")
    }
    field(IAAV, DBF_MENU) {
        interest(1)
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INAA PV Status")
    }
    field(IBBV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INBB PV Status")
        initial("1")
    }
    field(ICCV, DBF_MENU) {
        initial("1")
        prompt("INCC PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
    }
    field(IDDV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INDD PV Status")
        initial("1")
    }
    field(IEEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        interest(1)
        prompt("INEE PV Status")
        initial("1")
    }
    field(IFFV, DBF_MENU) {
        prompt("INFF PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IGGV, DBF_MENU) {
        prompt("INGG PV Status")
        initial("1")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IHHV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INHH PV Status")
        initial("1")
    }
    field(IIIV, DBF_MENU) {
        initial("1")
        prompt("INII PV Status")
        interest(1)
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IJJV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INJJ PV Status")
        initial("1")
    }
    field(IKKV, DBF_MENU) {
        initial("1")
        prompt("INKK PV Status")
        interest(1)
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(ILLV, DBF_MENU) {
        initial("1")
        prompt("INLL PV Status")
        interest(1)
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(OUTV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("OUT PV Status")
    }
    field(OOPT, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(acalcoutOOPT)
        prompt("Output Execute Opt")
    }
    field(ODLY, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        asl(ASL0)
        prompt("Output Execute Delay")
    }
    field(WAIT, DBF_MENU) {
        menu(acalcoutWAIT)
        interest(1)
        prompt("Wait for completion?")
    }
    field(DLYA, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Output Delay Active")
        asl(ASL0)
    }
    field(DOPT, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(acalcoutDOPT)
        prompt("Output Data Opt")
    }
    field(OCAL, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(80)
        pp(TRUE)
        prompt("Output Calculation")
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        prompt("Event To Issue")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        promptgroup("50 - Output")
        interest(2)
        menu(menuIvoa)
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        prompt("Units Name")
        interest(1)
        size(16)
        promptgroup("80 - Display")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prompt("High Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        prompt("High Severity")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(AA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *aa")
    }
    field(BB, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *bb")
    }
    field(CC, DBF_NOACCESS) {
        pp(TRUE)
        asl(ASL0)
        prompt("Value of array input")
        extra("double *cc")
        special(SPC_DBADDR)
    }
    field(DD, DBF_NOACCESS) {
        pp(TRUE)
        asl(ASL0)
        prompt("Value of array input")
        extra("double *dd")
        special(SPC_DBADDR)
    }
    field(EE, DBF_NOACCESS) {
        pp(TRUE)
        prompt("Value of array input")
        asl(ASL0)
        extra("double *ee")
        special(SPC_DBADDR)
    }
    field(FF, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *ff")
        prompt("Value of array input")
        asl(ASL0)
        pp(TRUE)
    }
    field(GG, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *gg")
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
    }
    field(HH, DBF_NOACCESS) {
        prompt("Value of array input")
        asl(ASL0)
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *hh")
    }
    field(II, DBF_NOACCESS) {
        extra("double *ii")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Value of array input")
        asl(ASL0)
    }
    field(JJ, DBF_NOACCESS) {
        extra("double *jj")
        special(SPC_DBADDR)
        prompt("Value of array input")
        asl(ASL0)
        pp(TRUE)
    }
    field(KK, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *kk")
        pp(TRUE)
        prompt("Value of array input")
        asl(ASL0)
    }
    field(LL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *ll")
    }
    field(PAA, DBF_NOACCESS) {
        extra("double *paa")
        prompt("Prev Val of array input")
        asl(ASL0)
    }
    field(NEWM, DBF_ULONG) {
        prompt("new array value mask")
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
        asl(ASL0)
    }
    field(OAV, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *oav")
        pp(TRUE)
        prompt("Output array value")
        asl(ASL0)
    }
    field(POAV, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output array value")
        pp(TRUE)
        extra("double *poav")
    }
    field(PA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(PB, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of B")
    }
    field(PC, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of C")
    }
    field(PD, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of D")
    }
    field(PE, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of E")
    }
    field(PF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(PG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        special(SPC_NOMOD)
        interest(3)
    }
    field(PH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of H")
    }
    field(PI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of I")
    }
    field(PJ, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of J")
    }
    field(PK, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of K")
    }
    field(PL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of L")
    }
    field(POVL, DBF_DOUBLE) {
        prompt("Prev Value of OVAL")
        asl(ASL0)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(RPCL, DBF_NOACCESS) {
        prompt("Reverse Polish Calc")
        special(SPC_NOMOD)
        extra("unsigned char rpcl[282]")
        interest(4)
    }
    field(ORPC, DBF_NOACCESS) {
        prompt("Reverse Polish OCalc")
        special(SPC_NOMOD)
        extra("unsigned char orpc[282]")
        interest(4)
    }
    field(CACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Calc active")
    }
    field(CSTAT, DBF_LONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Calc status")
    }
    field(AMASK, DBF_ULONG) {
        prompt("Array mod")
        special(SPC_NOMOD)
        interest(1)
    }
    field(SIZE, DBF_MENU) {
        prompt("Array size reported to clients")
        menu(acalcoutSIZE)
        interest(1)
    }
    field(AMEM, DBF_LONG) {
        prompt("Allocated array memory")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PMEM, DBF_LONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Prev array memory")
    }
}
device(acalcout, CONSTANT, devaCalcoutSoft, "Soft Channel")
recordtype(transform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VERS, DBF_FLOAT) {
        initial("1")
        prompt("Code Version")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        prompt("Record Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void *         rpvt")
        size(4)
    }
    field(IVLA, DBF_MENU) {
        interest(1)
        promptgroup("10 - Common")
        menu(transformIVLA)
        initial("0")
        prompt("Invalid link action")
    }
    field(COPT, DBF_MENU) {
        prompt("Calc option")
        initial("Conditional")
        menu(transformCOPT)
        promptgroup("10 - Common")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
    }
    field(CLCA, DBF_STRING) {
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
        prompt("Calculation A")
    }
    field(CLCB, DBF_STRING) {
        prompt("Calculation B")
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
    }
    field(CLCC, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
        prompt("Calculation C")
    }
    field(CLCD, DBF_STRING) {
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
        prompt("Calculation D")
    }
    field(CLCE, DBF_STRING) {
        promptgroup("10 - Common")
        size(120)
        special(SPC_MOD)
        prompt("Calculation E")
    }
    field(CLCF, DBF_STRING) {
        prompt("Calculation F")
        promptgroup("10 - Common")
        size(120)
        special(SPC_MOD)
    }
    field(CLCG, DBF_STRING) {
        prompt("Calculation G")
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
    }
    field(CLCH, DBF_STRING) {
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
        prompt("Calculation H")
    }
    field(CLCI, DBF_STRING) {
        promptgroup("10 - Common")
        size(120)
        special(SPC_MOD)
        prompt("Calculation I")
    }
    field(CLCJ, DBF_STRING) {
        prompt("Calculation J")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCK, DBF_STRING) {
        prompt("Calculation K")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCL, DBF_STRING) {
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
        prompt("Calculation L")
    }
    field(CLCM, DBF_STRING) {
        prompt("Calculation M")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCN, DBF_STRING) {
        special(SPC_MOD)
        size(120)
        promptgroup("10 - Common")
        prompt("Calculation N")
    }
    field(CLCO, DBF_STRING) {
        prompt("Calculation O")
        promptgroup("10 - Common")
        size(120)
        special(SPC_MOD)
    }
    field(CLCP, DBF_STRING) {
        promptgroup("10 - Common")
        size(120)
        special(SPC_MOD)
        prompt("Calculation P")
    }
    field(CAV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CBV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CCV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CDV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CEV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CFV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CGV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CHV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CIV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CJV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CKV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CLV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CMV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CNV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(COV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CPV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPD, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Input L")
    }
    field(INPM, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input M")
    }
    field(INPN, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input N")
    }
    field(INPO, DBF_INLINK) {
        prompt("Input O")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPP, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input P")
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output A")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(OUTB, DBF_OUTLINK) {
        prompt("Output B")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(OUTC, DBF_OUTLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        prompt("Output C")
    }
    field(OUTD, DBF_OUTLINK) {
        prompt("Output D")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(OUTE, DBF_OUTLINK) {
        prompt("Output E")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(OUTF, DBF_OUTLINK) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        prompt("Output F")
    }
    field(OUTG, DBF_OUTLINK) {
        prompt("Output G")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(OUTH, DBF_OUTLINK) {
        prompt("Output H")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(OUTI, DBF_OUTLINK) {
        prompt("Output I")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(OUTJ, DBF_OUTLINK) {
        prompt("Output J")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(OUTK, DBF_OUTLINK) {
        prompt("Output K")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(OUTL, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Output L")
    }
    field(OUTM, DBF_OUTLINK) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        prompt("Output M")
    }
    field(OUTN, DBF_OUTLINK) {
        prompt("Output N")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(OUTO, DBF_OUTLINK) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        prompt("Output O")
    }
    field(OUTP, DBF_OUTLINK) {
        prompt("Output P")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Units Name")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("10 - Common")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Value of A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of B")
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(C, DBF_DOUBLE) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Value of C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of D")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of E")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of F")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of G")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of H")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of I")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(J, DBF_DOUBLE) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Value of J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of K")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(L, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Value of L")
        pp(TRUE)
    }
    field(M, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Value of M")
        pp(TRUE)
    }
    field(N, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of N")
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(O, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of O")
    }
    field(P, DBF_DOUBLE) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Value of P")
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of E")
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of G")
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of L")
    }
    field(LM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of M")
    }
    field(LN, DBF_DOUBLE) {
        prompt("Prev Value of N")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LO, DBF_DOUBLE) {
        prompt("Prev Value of O")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of P")
    }
    field(RPCA, DBF_NOACCESS) {
        prompt("Postfix Calc A")
        interest(4)
        extra("unsigned char rpca[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
    }
    field(RPCB, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("unsigned char rpcb[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        prompt("Postfix Calc B")
    }
    field(RPCC, DBF_NOACCESS) {
        prompt("Postfix Calc C")
        special(SPC_NOMOD)
        interest(4)
        extra("unsigned char rpcc[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCD, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("unsigned char rpcd[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        prompt("Postfix Calc D")
    }
    field(RPCE, DBF_NOACCESS) {
        prompt("Postfix Calc E")
        extra("unsigned char rpce[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RPCF, DBF_NOACCESS) {
        prompt("Postfix Calc F")
        extra("unsigned char rpcf[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RPCG, DBF_NOACCESS) {
        extra("unsigned char rpcg[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
        prompt("Postfix Calc G")
    }
    field(RPCH, DBF_NOACCESS) {
        prompt("Postfix Calc H")
        special(SPC_NOMOD)
        interest(4)
        extra("unsigned char rpch[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCI, DBF_NOACCESS) {
        prompt("Postfix Calc I")
        special(SPC_NOMOD)
        extra("unsigned char rpci[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
    }
    field(RPCJ, DBF_NOACCESS) {
        prompt("Postfix Calc J")
        special(SPC_NOMOD)
        extra("unsigned char rpcj[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
    }
    field(RPCK, DBF_NOACCESS) {
        prompt("Postfix Calc K")
        interest(4)
        extra("unsigned char rpck[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
    }
    field(RPCL, DBF_NOACCESS) {
        interest(4)
        extra("unsigned char rpcl[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
        prompt("Postfix Calc L")
    }
    field(RPCM, DBF_NOACCESS) {
        extra("unsigned char rpcm[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
        prompt("Postfix Calc M")
    }
    field(RPCN, DBF_NOACCESS) {
        extra("unsigned char rpcn[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
        prompt("Postfix Calc N")
    }
    field(RPCO, DBF_NOACCESS) {
        prompt("Postfix Calc O")
        extra("unsigned char rpco[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RPCP, DBF_NOACCESS) {
        extra("unsigned char rpcp[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        special(SPC_NOMOD)
        prompt("Postfix Calc P")
    }
    field(CMTA, DBF_STRING) {
        prompt("Comment A")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTB, DBF_STRING) {
        prompt("Comment B")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTC, DBF_STRING) {
        prompt("Comment C")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTD, DBF_STRING) {
        prompt("Comment D")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTE, DBF_STRING) {
        prompt("Comment E")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTF, DBF_STRING) {
        prompt("Comment F")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTG, DBF_STRING) {
        prompt("Comment G")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTH, DBF_STRING) {
        prompt("Comment H")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTI, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment I")
    }
    field(CMTJ, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment J")
    }
    field(CMTK, DBF_STRING) {
        prompt("Comment K")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTL, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment L")
    }
    field(CMTM, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment M")
    }
    field(CMTN, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment N")
    }
    field(CMTO, DBF_STRING) {
        prompt("Comment O")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTP, DBF_STRING) {
        prompt("Comment P")
        promptgroup("10 - Common")
        size(39)
    }
    field(MAP, DBF_SHORT) {
        prompt("Input bitmap")
        interest(3)
        promptgroup("10 - Common")
    }
    field(IAV, DBF_MENU) {
        prompt("Input link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IBV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(ICV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IDV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
        initial("1")
        prompt("Input link valid")
    }
    field(IEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        interest(1)
        prompt("Input link valid")
        initial("1")
    }
    field(IFV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("Input link valid")
        initial("1")
    }
    field(IGV, DBF_MENU) {
        prompt("Input link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IHV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IIV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(IJV, DBF_MENU) {
        prompt("Input link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IKV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(ILV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(IMV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(INV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("Input link valid")
        initial("1")
    }
    field(IOV, DBF_MENU) {
        initial("1")
        prompt("Input link valid")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(IPV, DBF_MENU) {
        prompt("Input link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(OAV, DBF_MENU) {
        initial("1")
        prompt("Output link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OBV, DBF_MENU) {
        prompt("Output link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(OCV, DBF_MENU) {
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("Output link valid")
    }
    field(ODV, DBF_MENU) {
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("Output link valid")
    }
    field(OEV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
        initial("1")
        prompt("Output link valid")
    }
    field(OFV, DBF_MENU) {
        prompt("Output link valid")
        initial("1")
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(OGV, DBF_MENU) {
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("Output link valid")
    }
    field(OHV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
        initial("1")
        prompt("Output link valid")
    }
    field(OIV, DBF_MENU) {
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("Output link valid")
    }
    field(OJV, DBF_MENU) {
        initial("1")
        prompt("Output link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OKV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("Output link valid")
        initial("1")
    }
    field(OLV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("Output link valid")
        initial("1")
    }
    field(OMV, DBF_MENU) {
        initial("1")
        prompt("Output link valid")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(ONV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
        initial("1")
        prompt("Output link valid")
    }
    field(OOV, DBF_MENU) {
        initial("1")
        prompt("Output link valid")
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OPV, DBF_MENU) {
        interest(1)
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("Output link valid")
    }
}
recordtype(scalcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VERS, DBF_DOUBLE) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Code Version")
    }
    field(RPVT, DBF_NOACCESS) {
        extra("void *rpvt")
        size(4)
        interest(4)
        special(SPC_NOMOD)
        prompt("Record Private")
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Result")
    }
    field(SVAL, DBF_STRING) {
        asl(ASL0)
        prompt("String result")
        size(40)
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(PSVL, DBF_STRING) {
        special(SPC_NOMOD)
        size(40)
        prompt("Previous string result")
    }
    field(CALC, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(80)
        pp(TRUE)
        prompt("Calculation")
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(INPA, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INPD, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPH, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INAA, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("String input AA")
    }
    field(INBB, DBF_INLINK) {
        prompt("String input BB")
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
    }
    field(INCC, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("String input CC")
    }
    field(INDD, DBF_INLINK) {
        prompt("String input DD")
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
    }
    field(INEE, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("String input EE")
    }
    field(INFF, DBF_INLINK) {
        prompt("String input FF")
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INGG, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("String input GG")
    }
    field(INHH, DBF_INLINK) {
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
        prompt("String input HH")
    }
    field(INII, DBF_INLINK) {
        prompt("String input II")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INJJ, DBF_INLINK) {
        prompt("String input JJ")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INKK, DBF_INLINK) {
        prompt("String input KK")
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(INLL, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("String input LL")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Link")
        interest(1)
        promptgroup("50 - Output")
        special(SPC_MOD)
    }
    field(INAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        interest(1)
        prompt("INPA PV Status")
        initial("1")
    }
    field(INBV, DBF_MENU) {
        initial("1")
        prompt("INPB PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INCV, DBF_MENU) {
        initial("1")
        prompt("INPC PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INDV, DBF_MENU) {
        initial("1")
        prompt("INPD PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INEV, DBF_MENU) {
        prompt("INPE PV Status")
        initial("1")
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        interest(1)
    }
    field(INFV, DBF_MENU) {
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPF PV Status")
    }
    field(INGV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPG PV Status")
        initial("1")
    }
    field(INHV, DBF_MENU) {
        initial("1")
        prompt("INPH PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(INIV, DBF_MENU) {
        prompt("INPI PV Status")
        initial("1")
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        interest(1)
    }
    field(INJV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        initial("1")
        prompt("INPJ PV Status")
    }
    field(INKV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPK PV Status")
        initial("1")
    }
    field(INLV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        interest(1)
        prompt("INPL PV Status")
        initial("1")
    }
    field(IAAV, DBF_MENU) {
        initial("1")
        prompt("INAA PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IBBV, DBF_MENU) {
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INBB PV Status")
    }
    field(ICCV, DBF_MENU) {
        initial("1")
        prompt("INCC PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IDDV, DBF_MENU) {
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INDD PV Status")
    }
    field(IEEV, DBF_MENU) {
        initial("1")
        prompt("INEE PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IFFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        interest(1)
        prompt("INFF PV Status")
        initial("1")
    }
    field(IGGV, DBF_MENU) {
        initial("1")
        prompt("INGG PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IHHV, DBF_MENU) {
        initial("1")
        prompt("INHH PV Status")
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IIIV, DBF_MENU) {
        prompt("INII PV Status")
        initial("1")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(IJJV, DBF_MENU) {
        initial("1")
        prompt("INJJ PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IKKV, DBF_MENU) {
        interest(1)
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INKK PV Status")
    }
    field(ILLV, DBF_MENU) {
        initial("1")
        prompt("INLL PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(OUTV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("OUT PV Status")
    }
    field(OOPT, DBF_MENU) {
        prompt("Output Execute Opt")
        promptgroup("30 - Action")
        interest(1)
        menu(scalcoutOOPT)
    }
    field(ODLY, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        asl(ASL0)
        prompt("Output Execute Delay")
    }
    field(WAIT, DBF_MENU) {
        prompt("Wait for completion?")
        menu(scalcoutWAIT)
        interest(1)
    }
    field(DLYA, DBF_USHORT) {
        asl(ASL0)
        prompt("Output Delay Active")
        special(SPC_NOMOD)
    }
    field(DOPT, DBF_MENU) {
        prompt("Output Data Opt")
        menu(scalcoutDOPT)
        promptgroup("30 - Action")
        interest(1)
    }
    field(OCAL, DBF_STRING) {
        special(SPC_MOD)
        size(80)
        promptgroup("30 - Action")
        prompt("Output Calculation")
        pp(TRUE)
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        prompt("Event To Issue")
        asl(ASL0)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output action")
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
    field(EGU, DBF_STRING) {
        interest(1)
        size(16)
        promptgroup("80 - Display")
        prompt("Units Name")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Low Severity")
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(D, DBF_DOUBLE) {
        promptgroup("10 - Common")
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
        promptgroup("10 - Common")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(H, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(STRS, DBF_NOACCESS) {
        size(4)
        extra("char **strs")
        interest(4)
        prompt("Array of string pointers")
    }
    field(AA, DBF_STRING) {
        interest(4)
        size(40)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of string input AA")
    }
    field(BB, DBF_STRING) {
        size(40)
        promptgroup("10 - Common")
        interest(4)
        prompt("Value of string input BB")
        pp(TRUE)
    }
    field(CC, DBF_STRING) {
        interest(4)
        size(40)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of string input CC")
    }
    field(DD, DBF_STRING) {
        size(40)
        promptgroup("10 - Common")
        interest(4)
        prompt("Value of string input DD")
        pp(TRUE)
    }
    field(EE, DBF_STRING) {
        size(40)
        interest(4)
        promptgroup("10 - Common")
        prompt("Value of string input EE")
        pp(TRUE)
    }
    field(FF, DBF_STRING) {
        size(40)
        promptgroup("10 - Common")
        interest(4)
        prompt("Value of string input FF")
        pp(TRUE)
    }
    field(GG, DBF_STRING) {
        pp(TRUE)
        prompt("Value of string input GG")
        size(40)
        promptgroup("10 - Common")
        interest(4)
    }
    field(HH, DBF_STRING) {
        interest(4)
        size(40)
        promptgroup("10 - Common")
        prompt("Value of string input HH")
        pp(TRUE)
    }
    field(II, DBF_STRING) {
        prompt("Value of string input II")
        pp(TRUE)
        size(40)
        interest(4)
        promptgroup("10 - Common")
    }
    field(JJ, DBF_STRING) {
        prompt("Value of string input JJ")
        pp(TRUE)
        size(40)
        promptgroup("10 - Common")
        interest(4)
    }
    field(KK, DBF_STRING) {
        pp(TRUE)
        prompt("Value of string input KK")
        promptgroup("10 - Common")
        size(40)
        interest(4)
    }
    field(LL, DBF_STRING) {
        prompt("Value of string input LL")
        pp(TRUE)
        promptgroup("10 - Common")
        size(40)
        interest(4)
    }
    field(PAA, DBF_NOACCESS) {
        prompt("Prev Value of AA")
        extra("char *paa")
        interest(4)
        size(4)
        special(SPC_DBADDR)
    }
    field(PBB, DBF_NOACCESS) {
        size(4)
        extra("char *pbb")
        interest(4)
        special(SPC_DBADDR)
        prompt("Prev Value of BB")
    }
    field(PCC, DBF_NOACCESS) {
        prompt("Prev Value of CC")
        size(4)
        extra("char *pcc")
        interest(4)
        special(SPC_DBADDR)
    }
    field(PDD, DBF_NOACCESS) {
        prompt("Prev Value of DD")
        extra("char *pdd")
        interest(4)
        size(4)
        special(SPC_DBADDR)
    }
    field(PEE, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *pee")
        size(4)
        interest(4)
        prompt("Prev Value of EE")
    }
    field(PFF, DBF_NOACCESS) {
        prompt("Prev Value of FF")
        special(SPC_DBADDR)
        extra("char *pff")
        size(4)
        interest(4)
    }
    field(PGG, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *pgg")
        size(4)
        interest(4)
        prompt("Prev Value of GG")
    }
    field(PHH, DBF_NOACCESS) {
        interest(4)
        extra("char *phh")
        size(4)
        special(SPC_DBADDR)
        prompt("Prev Value of HH")
    }
    field(PII, DBF_NOACCESS) {
        extra("char *pii")
        size(4)
        interest(4)
        special(SPC_DBADDR)
        prompt("Prev Value of II")
    }
    field(PJJ, DBF_NOACCESS) {
        extra("char *pjj")
        interest(4)
        size(4)
        special(SPC_DBADDR)
        prompt("Prev Value of JJ")
    }
    field(PKK, DBF_NOACCESS) {
        prompt("Prev Value of KK")
        special(SPC_DBADDR)
        extra("char *pkk")
        size(4)
        interest(4)
    }
    field(PLL, DBF_NOACCESS) {
        extra("char *pll")
        size(4)
        interest(4)
        special(SPC_DBADDR)
        prompt("Prev Value of LL")
    }
    field(OVAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Output Value")
    }
    field(OSV, DBF_STRING) {
        prompt("Output string value")
        asl(ASL0)
        size(40)
    }
    field(POSV, DBF_STRING) {
        prompt("Previous output string value")
        special(SPC_NOMOD)
        size(40)
    }
    field(PA, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of A")
    }
    field(PB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        special(SPC_NOMOD)
        interest(3)
    }
    field(PC, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of C")
    }
    field(PD, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of D")
    }
    field(PE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of E")
    }
    field(PF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(PG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of G")
    }
    field(PH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        special(SPC_NOMOD)
        interest(3)
    }
    field(PJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PL, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of L")
    }
    field(POVL, DBF_DOUBLE) {
        prompt("Prev Value of OVAL")
        asl(ASL0)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        prompt("Postfix Calc")
        special(SPC_NOMOD)
        interest(4)
        extra("unsigned char rpcl[282]")
    }
    field(ORPC, DBF_NOACCESS) {
        prompt("Postfix OCalc")
        special(SPC_NOMOD)
        extra("unsigned char orpc[282]")
        interest(4)
    }
}
device(scalcout, CONSTANT, devsCalcoutSoft, "Soft Channel")
recordtype(waveform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct waveformRecord;
    %typedef struct wfdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_wf)(struct waveformRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} wfdset;
    %#define HAS_wfdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        pp(TRUE)
        extra("void *		val")
        special(SPC_DBADDR)
    }
    field(RARM, DBF_SHORT) {
        prompt("Rearm the waveform")
        pp(TRUE)
        interest(1)
        promptgroup("30 - Action")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
    }
    field(NELM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        initial("1")
        prompt("Number of Elements")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
    }
    field(BUSY, DBF_SHORT) {
        prompt("Busy Indicator")
        special(SPC_NOMOD)
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *		bptr")
        interest(4)
        prompt("Buffer Pointer")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
        initial("65535")
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        promptgroup("90 - Simulate")
        interest(2)
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
        prompt("Sim. Mode Private")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        menu(waveformPOST)
        promptgroup("80 - Display")
        interest(1)
    }
    field(APST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        menu(waveformPOST)
        prompt("Post Archive Monitors")
    }
    field(HASH, DBF_ULONG) {
        interest(3)
        prompt("Hash of OnChange data.")
    }
}
device(waveform, CONSTANT, devWfSoft, "Soft Channel")
device(waveform, INST_IO, asynWfOctetCmdResponse, "asynOctetCmdResponse")
device(waveform, INST_IO, asynWfOctetWriteRead, "asynOctetWriteRead")
device(waveform, INST_IO, asynWfOctetRead, "asynOctetRead")
device(waveform, INST_IO, asynWfOctetWrite, "asynOctetWrite")
device(waveform, INST_IO, asynWfOctetWriteBinary, "asynOctetWriteBinary")
device(waveform, INST_IO, asynInt8ArrayWfIn, "asynInt8ArrayIn")
device(waveform, INST_IO, asynInt8ArrayWfOut, "asynInt8ArrayOut")
device(waveform, INST_IO, asynInt16ArrayWfIn, "asynInt16ArrayIn")
device(waveform, INST_IO, asynInt16ArrayWfOut, "asynInt16ArrayOut")
device(waveform, INST_IO, asynInt32ArrayWfIn, "asynInt32ArrayIn")
device(waveform, INST_IO, asynInt32ArrayWfOut, "asynInt32ArrayOut")
device(waveform, INST_IO, asynInt32TimeSeries, "asynInt32TimeSeries")
device(waveform, INST_IO, asynFloat32ArrayWfIn, "asynFloat32ArrayIn")
device(waveform, INST_IO, asynFloat32ArrayWfOut, "asynFloat32ArrayOut")
device(waveform, INST_IO, asynFloat64ArrayWfIn, "asynFloat64ArrayIn")
device(waveform, INST_IO, asynFloat64ArrayWfOut, "asynFloat64ArrayOut")
device(waveform, INST_IO, asynFloat64TimeSeries, "asynFloat64TimeSeries")
device(waveform, INST_IO, asynInt64ArrayWfIn, "asynInt64ArrayIn")
device(waveform, INST_IO, asynInt64ArrayWfOut, "asynInt64ArrayOut")
device(waveform, INST_IO, asynInt64TimeSeries, "asynInt64TimeSeries")
recordtype(calcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct calcoutRecord;
    %typedef struct calcoutdset {
    %    dset common;
    %    long (*write)(struct calcoutRecord *prec);
    %} calcoutdset;
    %#define HAS_calcoutdset
    %
    %#include "dbScan.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rpvtStruct *rpvt")
        prompt("Record Private")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Result")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(CALC, DBF_STRING) {
        size(80)
        promptgroup("30 - Action")
        special(SPC_CALC)
        initial("0")
        pp(TRUE)
        prompt("Calculation")
    }
    field(CLCV, DBF_LONG) {
        prompt("CALC Valid")
        interest(1)
    }
    field(INPA, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        special(SPC_MOD)
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
        prompt("Input L")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        special(SPC_MOD)
        interest(1)
        promptgroup("50 - Output")
    }
    field(INAV, DBF_MENU) {
        interest(1)
        menu(calcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPA PV Status")
    }
    field(INBV, DBF_MENU) {
        initial("1")
        prompt("INPB PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(INCV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
        initial("1")
        prompt("INPC PV Status")
    }
    field(INDV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
        initial("1")
        prompt("INPD PV Status")
    }
    field(INEV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
        initial("1")
        prompt("INPE PV Status")
    }
    field(INFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        prompt("INPF PV Status")
        initial("1")
    }
    field(INGV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        prompt("INPG PV Status")
        initial("1")
    }
    field(INHV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        prompt("INPH PV Status")
        initial("1")
    }
    field(INIV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPI PV Status")
        initial("1")
    }
    field(INJV, DBF_MENU) {
        prompt("INPJ PV Status")
        initial("1")
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
    }
    field(INKV, DBF_MENU) {
        initial("1")
        prompt("INPK PV Status")
        interest(1)
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INLV, DBF_MENU) {
        initial("1")
        prompt("INPL PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(OUTV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        prompt("OUT PV Status")
    }
    field(OOPT, DBF_MENU) {
        menu(calcoutOOPT)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Execute Opt")
    }
    field(ODLY, DBF_DOUBLE) {
        promptgroup("50 - Output")
        interest(1)
        asl(ASL0)
        prompt("Output Execute Delay")
    }
    field(DLYA, DBF_USHORT) {
        asl(ASL0)
        prompt("Output Delay Active")
        special(SPC_NOMOD)
    }
    field(DOPT, DBF_MENU) {
        prompt("Output Data Opt")
        promptgroup("30 - Action")
        interest(1)
        menu(calcoutDOPT)
    }
    field(OCAL, DBF_STRING) {
        special(SPC_CALC)
        promptgroup("30 - Action")
        size(80)
        prompt("Output Calculation")
        pp(TRUE)
        initial("0")
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        asl(ASL0)
        prompt("Event To Issue")
    }
    field(EPVT, DBF_NOACCESS) {
        extra("EVENTPVT epvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Event private")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Display Precision")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
        asl(ASL0)
    }
    field(LA, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of G")
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of I")
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(POVL, DBF_DOUBLE) {
        prompt("Prev Value of OVAL")
        asl(ASL0)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(RPCL, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        interest(4)
        prompt("Reverse Polish Calc")
    }
    field(ORPC, DBF_NOACCESS) {
        prompt("Reverse Polish OCalc")
        extra("char	orpc[INFIX_TO_POSTFIX_SIZE(80)]")
        interest(4)
        special(SPC_NOMOD)
    }
}
device(calcout, CONSTANT, devCalcoutSoft, "Soft Channel")
device(calcout, CONSTANT, devCalcoutSoftCallback, "Async Soft Channel")
recordtype(aai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aaiRecord;
    %typedef struct aaidset {
    %    dset common; /*init_record returns: (-1,0,AAI_DEVINIT_PASS1)=>(failure,success,callback)*/
    %    long (*read_aai)(struct aaiRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} aaidset;
    %#define HAS_aaidset
    %#define AAI_DEVINIT_PASS1 2
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        prompt("Value")
        asl(ASL0)
        pp(TRUE)
        extra("void *		val")
        special(SPC_DBADDR)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(NELM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        initial("1")
        prompt("Number of Elements")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        interest(1)
        promptgroup("30 - Action")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(NORD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        extra("void *		bptr")
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
        prompt("Sim. Mode Private")
    }
    field(MPST, DBF_MENU) {
        menu(aaiPOST)
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        menu(aaiPOST)
        prompt("Post Archive Monitors")
    }
    field(HASH, DBF_ULONG) {
        interest(3)
        prompt("Hash of OnChange data.")
    }
}
device(aai, CONSTANT, devAaiSoft, "Soft Channel")
recordtype(mbbi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbbiRecord;
    %typedef struct mbbidset {
    %    dset common; /* init_record returns: (-1,0) => (failure, success)*/
    %    long (*read_mbbi)(struct mbbiRecord *prec); /* (0, 2) => (success, success no convert)*/
    %} mbbidset;
    %#define HAS_mbbidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_ENUM) {
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
    }
    field(NOBT, DBF_USHORT) {
        prompt("Number of Bits")
        interest(1)
        promptgroup("40 - Input")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(ZRVL, DBF_ULONG) {
        promptgroup("41 - Input 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        prompt("Zero Value")
        pp(TRUE)
    }
    field(ONVL, DBF_ULONG) {
        interest(1)
        promptgroup("41 - Input 0-7")
        base(HEX)
        special(SPC_MOD)
        prompt("One Value")
        pp(TRUE)
    }
    field(TWVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Two Value")
        special(SPC_MOD)
        base(HEX)
        interest(1)
        promptgroup("41 - Input 0-7")
    }
    field(THVL, DBF_ULONG) {
        prompt("Three Value")
        pp(TRUE)
        interest(1)
        promptgroup("41 - Input 0-7")
        base(HEX)
        special(SPC_MOD)
    }
    field(FRVL, DBF_ULONG) {
        base(HEX)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
        interest(1)
        prompt("Four Value")
        pp(TRUE)
    }
    field(FVVL, DBF_ULONG) {
        prompt("Five Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input 0-7")
    }
    field(SXVL, DBF_ULONG) {
        prompt("Six Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input 0-7")
    }
    field(SVVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Seven Value")
        interest(1)
        promptgroup("41 - Input 0-7")
        special(SPC_MOD)
        base(HEX)
    }
    field(EIVL, DBF_ULONG) {
        base(HEX)
        special(SPC_MOD)
        interest(1)
        promptgroup("42 - Input 8-15")
        prompt("Eight Value")
        pp(TRUE)
    }
    field(NIVL, DBF_ULONG) {
        promptgroup("42 - Input 8-15")
        interest(1)
        special(SPC_MOD)
        base(HEX)
        pp(TRUE)
        prompt("Nine Value")
    }
    field(TEVL, DBF_ULONG) {
        prompt("Ten Value")
        pp(TRUE)
        promptgroup("42 - Input 8-15")
        interest(1)
        base(HEX)
        special(SPC_MOD)
    }
    field(ELVL, DBF_ULONG) {
        prompt("Eleven Value")
        pp(TRUE)
        interest(1)
        promptgroup("42 - Input 8-15")
        base(HEX)
        special(SPC_MOD)
    }
    field(TVVL, DBF_ULONG) {
        prompt("Twelve Value")
        pp(TRUE)
        interest(1)
        promptgroup("42 - Input 8-15")
        base(HEX)
        special(SPC_MOD)
    }
    field(TTVL, DBF_ULONG) {
        interest(1)
        promptgroup("42 - Input 8-15")
        base(HEX)
        special(SPC_MOD)
        prompt("Thirteen Value")
        pp(TRUE)
    }
    field(FTVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Fourteen Value")
        interest(1)
        promptgroup("42 - Input 8-15")
        special(SPC_MOD)
        base(HEX)
    }
    field(FFVL, DBF_ULONG) {
        base(HEX)
        special(SPC_MOD)
        interest(1)
        promptgroup("42 - Input 8-15")
        prompt("Fifteen Value")
        pp(TRUE)
    }
    field(ZRST, DBF_STRING) {
        prompt("Zero String")
        pp(TRUE)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(ONST, DBF_STRING) {
        special(SPC_MOD)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        prompt("One String")
        pp(TRUE)
    }
    field(TWST, DBF_STRING) {
        pp(TRUE)
        prompt("Two String")
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
    }
    field(THST, DBF_STRING) {
        prompt("Three String")
        pp(TRUE)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(FRST, DBF_STRING) {
        prompt("Four String")
        pp(TRUE)
        special(SPC_MOD)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
    }
    field(FVST, DBF_STRING) {
        pp(TRUE)
        prompt("Five String")
        special(SPC_MOD)
        size(26)
        promptgroup("81 - Display 0-7")
        interest(1)
    }
    field(SXST, DBF_STRING) {
        special(SPC_MOD)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        prompt("Six String")
    }
    field(SVST, DBF_STRING) {
        size(26)
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
        prompt("Seven String")
        pp(TRUE)
    }
    field(EIST, DBF_STRING) {
        prompt("Eight String")
        pp(TRUE)
        size(26)
        promptgroup("82 - Display 8-15")
        interest(1)
        special(SPC_MOD)
    }
    field(NIST, DBF_STRING) {
        prompt("Nine String")
        pp(TRUE)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
    }
    field(TEST, DBF_STRING) {
        prompt("Ten String")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
    }
    field(ELST, DBF_STRING) {
        size(26)
        promptgroup("82 - Display 8-15")
        interest(1)
        special(SPC_MOD)
        prompt("Eleven String")
        pp(TRUE)
    }
    field(TVST, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        pp(TRUE)
        prompt("Twelve String")
    }
    field(TTST, DBF_STRING) {
        prompt("Thirteen String")
        pp(TRUE)
        special(SPC_MOD)
        size(26)
        interest(1)
        promptgroup("82 - Display 8-15")
    }
    field(FTST, DBF_STRING) {
        size(26)
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Fourteen String")
    }
    field(FFST, DBF_STRING) {
        size(26)
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Fifteen String")
    }
    field(ZRSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Zero Severity")
    }
    field(ONSV, DBF_MENU) {
        pp(TRUE)
        prompt("State One Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
    }
    field(TWSV, DBF_MENU) {
        prompt("State Two Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(THSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Three Severity")
        pp(TRUE)
    }
    field(FRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        prompt("State Four Severity")
    }
    field(FVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        prompt("State Five Severity")
    }
    field(SXSV, DBF_MENU) {
        prompt("State Six Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
    }
    field(SVSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Seven Severity")
    }
    field(EISV, DBF_MENU) {
        prompt("State Eight Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("72 - Alarm 8-15")
    }
    field(NISV, DBF_MENU) {
        interest(1)
        promptgroup("72 - Alarm 8-15")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Nine Severity")
    }
    field(TESV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Ten Severity")
        pp(TRUE)
    }
    field(ELSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Eleven Severity")
        pp(TRUE)
    }
    field(TVSV, DBF_MENU) {
        prompt("State Twelve Severity")
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TTSV, DBF_MENU) {
        prompt("State Thirteen Sevr")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(FTSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Fourteen Sevr")
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(FFSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Fifteen Severity")
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(UNSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prompt("Unknown State Severity")
    }
    field(COSV, DBF_MENU) {
        prompt("Change of State Svr")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Monitored")
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(SDEF, DBF_SHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("States Defined")
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        interest(1)
        promptgroup("40 - Input")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        menu(menuSimm)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        special(SPC_NOMOD)
        menu(menuSimm)
        interest(4)
    }
    field(SSCN, DBF_MENU) {
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
        initial("65535")
        prompt("Sim. Mode Scan")
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
}
device(mbbi, CONSTANT, devMbbiSoft, "Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftRaw, "Raw Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftCallback, "Async Soft Channel")
device(mbbi, INST_IO, asynMbbiInt32, "asynInt32")
device(mbbi, INST_IO, asynMbbiUInt32Digital, "asynUInt32Digital")
recordtype(compress) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        extra("void *		val")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Value")
        asl(ASL0)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(RES, DBF_SHORT) {
        special(SPC_RESET)
        interest(3)
        prompt("Reset")
        asl(ASL0)
    }
    field(ALG, DBF_MENU) {
        menu(compressALG)
        special(SPC_RESET)
        interest(1)
        promptgroup("30 - Action")
        prompt("Compression Algorithm")
    }
    field(BALG, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(bufferingALG)
        special(SPC_RESET)
        prompt("Buffering Algorithm")
    }
    field(NSAM, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Number of Values")
        initial("1")
    }
    field(N, DBF_ULONG) {
        initial("1")
        prompt("N to 1 Compression")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_RESET)
    }
    field(IHIL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Init High Interest Lim")
    }
    field(ILIL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Init Low Interest Lim")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        prompt("Display Precision")
    }
    field(EGU, DBF_STRING) {
        interest(1)
        size(16)
        promptgroup("80 - Display")
        prop(YES)
        prompt("Engineering Units")
    }
    field(OFF, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Offset")
    }
    field(NUSE, DBF_ULONG) {
        prompt("Number Used")
        special(SPC_NOMOD)
    }
    field(OUSE, DBF_ULONG) {
        prompt("Old Number Used")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        extra("double		*bptr")
        interest(4)
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
    }
    field(SPTR, DBF_NOACCESS) {
        interest(4)
        extra("double		*sptr")
        special(SPC_NOMOD)
        prompt("Summing Buffer Ptr")
    }
    field(WPTR, DBF_NOACCESS) {
        prompt("Working Buffer Ptr")
        extra("double		*wptr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INPN, DBF_LONG) {
        prompt("Number of elements in Working Buffer")
        interest(4)
        special(SPC_NOMOD)
    }
    field(CVB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Compress Value Buffer")
    }
    field(INX, DBF_ULONG) {
        prompt("Compressed Array Inx")
        special(SPC_NOMOD)
        interest(3)
    }
}
recordtype(sseq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Used to trigger")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        promptgroup("40 - Input")
        interest(1)
        menu(sseqSELM)
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(DLY1, DBF_DOUBLE) {
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Delay 1")
    }
    field(DOL1, DBF_INLINK) {
        promptgroup("51 - Output (1)")
        interest(1)
        special(SPC_MOD)
        prompt("Input link1")
    }
    field(DO1, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        interest(1)
        special(SPC_MOD)
        prompt("Constant input 1")
    }
    field(LNK1, DBF_OUTLINK) {
        prompt("Output Link 1")
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
    }
    field(STR1, DBF_STRING) {
        prompt("String value 1")
        size(40)
        interest(4)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(DT1, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("DOL link type")
    }
    field(LT1, DBF_SHORT) {
        prompt("LNK link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WAIT1, DBF_MENU) {
        menu(sseqWAIT)
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output (1)")
        prompt("Wait for completion?")
    }
    field(WERR1, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG1, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX1, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(2)
        initial("0")
    }
    field(DOL1V, DBF_MENU) {
        prompt("DOL LINK Status")
        initial("1")
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(LNK1V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
    }
    field(DLY2, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Delay 2")
    }
    field(DOL2, DBF_INLINK) {
        prompt("Input link 2")
        promptgroup("51 - Output (1)")
        interest(1)
        special(SPC_MOD)
    }
    field(DO2, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output (1)")
        prompt("Constant input 2")
    }
    field(LNK2, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Output Link 2")
    }
    field(STR2, DBF_STRING) {
        prompt("String value 2")
        size(40)
        promptgroup("51 - Output (1)")
        interest(4)
        special(SPC_MOD)
    }
    field(DT2, DBF_SHORT) {
        prompt("DOL link type")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LT2, DBF_SHORT) {
        prompt("LNK link type")
        special(SPC_NOMOD)
        interest(4)
    }
    field(WAIT2, DBF_MENU) {
        menu(sseqWAIT)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR2, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG2, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX2, DBF_SHORT) {
        initial("1")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DOL2V, DBF_MENU) {
        initial("1")
        prompt("DOL LINK Status")
        interest(1)
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(LNK2V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(DLY3, DBF_DOUBLE) {
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Delay 3")
    }
    field(DOL3, DBF_INLINK) {
        prompt("Input link 3")
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output (1)")
    }
    field(DO3, DBF_DOUBLE) {
        prompt("Constant input 3")
        promptgroup("51 - Output (1)")
        interest(1)
        special(SPC_MOD)
    }
    field(LNK3, DBF_OUTLINK) {
        prompt("Output Link 3")
        special(SPC_MOD)
        interest(1)
        promptgroup("51 - Output (1)")
    }
    field(STR3, DBF_STRING) {
        prompt("String value 3")
        size(40)
        interest(4)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(DT3, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT3, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("LNK link type")
    }
    field(WAIT3, DBF_MENU) {
        menu(sseqWAIT)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR3, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG3, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX3, DBF_SHORT) {
        initial("2")
        special(SPC_NOMOD)
        interest(2)
    }
    field(DOL3V, DBF_MENU) {
        interest(1)
        menu(sseqLNKV)
        special(SPC_NOMOD)
        initial("1")
        prompt("DOL LINK Status")
    }
    field(LNK3V, DBF_MENU) {
        initial("1")
        prompt("LNK LINK Status")
        interest(1)
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(DLY4, DBF_DOUBLE) {
        prompt("Delay 4")
        interest(1)
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(DOL4, DBF_INLINK) {
        prompt("Input link 4")
        interest(1)
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(DO4, DBF_DOUBLE) {
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Constant input 4")
    }
    field(LNK4, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        interest(1)
        prompt("Output Link 4")
    }
    field(STR4, DBF_STRING) {
        prompt("String value 4")
        special(SPC_MOD)
        size(40)
        interest(4)
        promptgroup("51 - Output (1)")
    }
    field(DT4, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT4, DBF_SHORT) {
        prompt("LNK link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WAIT4, DBF_MENU) {
        special(SPC_MOD)
        menu(sseqWAIT)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR4, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG4, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX4, DBF_SHORT) {
        initial("3")
        special(SPC_NOMOD)
        interest(2)
    }
    field(DOL4V, DBF_MENU) {
        prompt("DOL LINK Status")
        initial("1")
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(LNK4V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(DLY5, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        interest(1)
        prompt("Delay 5")
    }
    field(DOL5, DBF_INLINK) {
        prompt("Input link 5")
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output (2)")
    }
    field(DO5, DBF_DOUBLE) {
        prompt("Constant input 5")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(LNK5, DBF_OUTLINK) {
        promptgroup("52 - Output (2)")
        interest(1)
        special(SPC_MOD)
        prompt("Output Link 5")
    }
    field(STR5, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("51 - Output (1)")
        interest(4)
        prompt("String value 5")
    }
    field(DT5, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT5, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("LNK link type")
    }
    field(WAIT5, DBF_MENU) {
        prompt("Wait for completion?")
        special(SPC_MOD)
        menu(sseqWAIT)
        promptgroup("51 - Output (1)")
        interest(1)
    }
    field(WERR5, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG5, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX5, DBF_SHORT) {
        interest(2)
        special(SPC_NOMOD)
        initial("4")
    }
    field(DOL5V, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(sseqLNKV)
        initial("1")
        prompt("DOL LINK Status")
    }
    field(LNK5V, DBF_MENU) {
        initial("1")
        prompt("LNK LINK Status")
        interest(1)
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(DLY6, DBF_DOUBLE) {
        prompt("Delay 6")
        interest(1)
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(DOL6, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        interest(1)
        prompt("Input link 6")
    }
    field(DO6, DBF_DOUBLE) {
        prompt("Constant input 6")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(LNK6, DBF_OUTLINK) {
        prompt("Output Link 6")
        interest(1)
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(STR6, DBF_STRING) {
        prompt("String value 6")
        promptgroup("51 - Output (1)")
        size(40)
        interest(4)
        special(SPC_MOD)
    }
    field(DT6, DBF_SHORT) {
        prompt("DOL link type")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LT6, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("LNK link type")
    }
    field(WAIT6, DBF_MENU) {
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        menu(sseqWAIT)
        prompt("Wait for completion?")
    }
    field(WERR6, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG6, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX6, DBF_SHORT) {
        interest(2)
        special(SPC_NOMOD)
        initial("5")
    }
    field(DOL6V, DBF_MENU) {
        prompt("DOL LINK Status")
        initial("1")
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(LNK6V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
    }
    field(DLY7, DBF_DOUBLE) {
        prompt("Delay 7")
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output (3)")
    }
    field(DOL7, DBF_INLINK) {
        promptgroup("53 - Output (3)")
        interest(1)
        special(SPC_MOD)
        prompt("Input link 7")
    }
    field(DO7, DBF_DOUBLE) {
        prompt("Constant input 7")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(LNK7, DBF_OUTLINK) {
        prompt("Output Link 7")
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(STR7, DBF_STRING) {
        prompt("String value 7")
        special(SPC_MOD)
        interest(4)
        size(40)
        promptgroup("51 - Output (1)")
    }
    field(DT7, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("DOL link type")
    }
    field(LT7, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT7, DBF_MENU) {
        prompt("Wait for completion?")
        menu(sseqWAIT)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
    }
    field(WERR7, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG7, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX7, DBF_SHORT) {
        initial("6")
        special(SPC_NOMOD)
        interest(2)
    }
    field(DOL7V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
        prompt("DOL LINK Status")
        initial("1")
    }
    field(LNK7V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
    }
    field(DLY8, DBF_DOUBLE) {
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Delay 8")
    }
    field(DOL8, DBF_INLINK) {
        prompt("Input link 8")
        promptgroup("53 - Output (3)")
        interest(1)
        special(SPC_MOD)
    }
    field(DO8, DBF_DOUBLE) {
        prompt("Constant input 8")
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
    }
    field(LNK8, DBF_OUTLINK) {
        prompt("Output Link 8")
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(STR8, DBF_STRING) {
        prompt("String value 8")
        size(40)
        promptgroup("51 - Output (1)")
        interest(4)
        special(SPC_MOD)
    }
    field(DT8, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("DOL link type")
    }
    field(LT8, DBF_SHORT) {
        prompt("LNK link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WAIT8, DBF_MENU) {
        special(SPC_MOD)
        menu(sseqWAIT)
        interest(1)
        promptgroup("51 - Output (1)")
        prompt("Wait for completion?")
    }
    field(WERR8, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTG8, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX8, DBF_SHORT) {
        initial("7")
        special(SPC_NOMOD)
        interest(2)
    }
    field(DOL8V, DBF_MENU) {
        initial("1")
        prompt("DOL LINK Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNK8V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
    }
    field(DLY9, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        promptgroup("53 - Output (3)")
        prompt("Delay 9")
    }
    field(DOL9, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
        interest(1)
        prompt("Input link 9")
    }
    field(DO9, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Constant input 9")
    }
    field(LNK9, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Output Link 9")
    }
    field(STR9, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        interest(4)
        promptgroup("51 - Output (1)")
        prompt("String value 9")
    }
    field(DT9, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT9, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("LNK link type")
    }
    field(WAIT9, DBF_MENU) {
        prompt("Wait for completion?")
        special(SPC_MOD)
        menu(sseqWAIT)
        promptgroup("51 - Output (1)")
        interest(1)
    }
    field(WERR9, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG9, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX9, DBF_SHORT) {
        initial("8")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DOL9V, DBF_MENU) {
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
        prompt("DOL LINK Status")
        initial("1")
    }
    field(LNK9V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
    }
    field(DLYA, DBF_DOUBLE) {
        prompt("Delay 10")
        promptgroup("53 - Output (3)")
        interest(1)
        special(SPC_MOD)
    }
    field(DOLA, DBF_INLINK) {
        prompt("Input link 10")
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
        interest(1)
    }
    field(DOA, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Constant input 10")
    }
    field(LNKA, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Output Link 10")
    }
    field(STRA, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        size(40)
        interest(4)
        prompt("String value A")
    }
    field(DTA, DBF_SHORT) {
        prompt("DOL link type")
        special(SPC_NOMOD)
        interest(4)
    }
    field(LTA, DBF_SHORT) {
        interest(4)
        special(SPC_NOMOD)
        prompt("LNK link type")
    }
    field(WAITA, DBF_MENU) {
        special(SPC_MOD)
        menu(sseqWAIT)
        interest(1)
        promptgroup("51 - Output (1)")
        prompt("Wait for completion?")
    }
    field(WERRA, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTGA, DBF_SHORT) {
        interest(1)
    }
    field(IXA, DBF_SHORT) {
        interest(2)
        initial("9")
    }
    field(DOLAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        interest(1)
        prompt("DOL LINK Status")
        initial("1")
    }
    field(LNKAV, DBF_MENU) {
        initial("1")
        prompt("LNK LINK Status")
        interest(1)
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(ABORT, DBF_SHORT) {
        prompt("Abort sequence")
        special(SPC_MOD)
        interest(1)
    }
    field(ABORTING, DBF_SHORT) {
        prompt("Aborting")
        special(SPC_MOD)
        interest(1)
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Sequence active")
    }
}
recordtype(lsi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct lsiRecord;
    %typedef struct lsidset {
    %    dset common;
    %    long (*read_string)(struct lsiRecord *prec);
    %} lsidset;
    %#define HAS_lsidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        prompt("Current Value")
        asl(ASL0)
        extra("char *val")
        special(SPC_DBADDR)
    }
    field(OVAL, DBF_NOACCESS) {
        prompt("Old Value")
        special(SPC_DBADDR)
        extra("char *oval")
        interest(3)
    }
    field(SIZV, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("40 - Input")
        prompt("Size of buffers")
        initial("41")
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OLEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of OVAL")
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(menuPost)
    }
    field(APST, DBF_MENU) {
        prompt("Post Archive Monitors")
        menu(menuPost)
        interest(1)
        promptgroup("80 - Display")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        special(SPC_MOD)
        menu(menuYesNo)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Scan")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
    }
}
device(lsi, CONSTANT, devLsiSoft, "Soft Channel")
device(lsi, INST_IO, devLsiEnviron, "getenv")
device(lsi, INST_IO, asynLsiOctetCmdResponse, "asynOctetCmdResponse")
device(lsi, INST_IO, asynLsiOctetWriteRead, "asynOctetWriteRead")
device(lsi, INST_IO, asynLsiOctetRead, "asynOctetRead")
recordtype(state) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        pp(TRUE)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_STRING) {
        promptgroup("40 - Input")
        size(20)
        asl(ASL0)
        prompt("Value")
        pp(TRUE)
    }
    field(OVAL, DBF_STRING) {
        interest(3)
        size(20)
        special(SPC_NOMOD)
        prompt("Prev Value")
    }
}
recordtype(fanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        asl(ASL0)
        prompt("Used to trigger")
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        menu(fanoutSELM)
        interest(1)
        promptgroup("30 - Action")
    }
    field(SELN, DBF_USHORT) {
        interest(1)
        prompt("Link Selection")
        initial("1")
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
        interest(1)
    }
    field(OFFS, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Offset for Specified")
        initial("0")
    }
    field(SHFT, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Shift for Mask mode")
        initial("-1")
    }
    field(LNK0, DBF_FWDLINK) {
        prompt("Forward Link 0")
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(LNK1, DBF_FWDLINK) {
        prompt("Forward Link 1")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK2, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 2")
    }
    field(LNK3, DBF_FWDLINK) {
        interest(1)
        promptgroup("51 - Output 0-7")
        prompt("Forward Link 3")
    }
    field(LNK4, DBF_FWDLINK) {
        prompt("Forward Link 4")
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(LNK5, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 5")
    }
    field(LNK6, DBF_FWDLINK) {
        prompt("Forward Link 6")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK7, DBF_FWDLINK) {
        prompt("Forward Link 7")
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(LNK8, DBF_FWDLINK) {
        interest(1)
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 8")
    }
    field(LNK9, DBF_FWDLINK) {
        prompt("Forward Link 9")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
    field(LNKA, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        interest(1)
        prompt("Forward Link 10")
    }
    field(LNKB, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        interest(1)
        prompt("Forward Link 11")
    }
    field(LNKC, DBF_FWDLINK) {
        prompt("Forward Link 12")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNKD, DBF_FWDLINK) {
        prompt("Forward Link 13")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
    field(LNKE, DBF_FWDLINK) {
        interest(1)
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 14")
    }
    field(LNKF, DBF_FWDLINK) {
        prompt("Forward Link 15")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
}
recordtype(stringin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct stringinRecord;
    %typedef struct stringindset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_stringin)(struct stringinRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} stringindset;
    %#define HAS_stringindset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("unambiguous_dset    *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_STRING) {
        promptgroup("40 - Input")
        size(40)
        prompt("Current Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(OVAL, DBF_STRING) {
        special(SPC_NOMOD)
        interest(3)
        size(40)
        prompt("Previous Value")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        menu(stringinPOST)
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        menu(stringinPOST)
        prompt("Post Archive Monitors")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_STRING) {
        size(40)
        pp(TRUE)
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        menu(menuYesNo)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Scan")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
    }
}
device(stringin, CONSTANT, devSiSoft, "Soft Channel")
device(stringin, CONSTANT, devSiSoftCallback, "Async Soft Channel")
device(stringin, INST_IO, devTimestampSI, "Soft Timestamp")
device(stringin, INST_IO, devSiGeneralTime, "General Time")
device(stringin, INST_IO, devSiEnviron, "getenv")
device(stringin, INST_IO, asynSiOctetCmdResponse, "asynOctetCmdResponse")
device(stringin, INST_IO, asynSiOctetWriteRead, "asynOctetWriteRead")
device(stringin, INST_IO, asynSiOctetRead, "asynOctetRead")
recordtype(busy) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        promptgroup("50 - Output")
        pp(TRUE)
        asl(ASL0)
        prompt("Current Value")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Desired Output Loc")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("Seconds to Hold High")
        promptgroup("50 - Output")
        interest(1)
    }
    field(ZNAM, DBF_STRING) {
        promptgroup("80 - Display")
        size(26)
        interest(1)
        prompt("Zero Name")
        pp(TRUE)
        initial("Done")
    }
    field(ONAM, DBF_STRING) {
        initial("Busy")
        pp(TRUE)
        prompt("One Name")
        interest(1)
        size(26)
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("prev Raw Value")
    }
    field(OVAL, DBF_ULONG) {
        prompt("prev Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        promptgroup("50 - Output")
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *  rpvt")
        prompt("Record Private")
    }
    field(WDPT, DBF_NOACCESS) {
        extra("void *	wdpt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Watch Dog Timer ID")
    }
    field(ZSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Zero Error Severity")
    }
    field(OSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("One Error Severity")
    }
    field(COSV, DBF_MENU) {
        pp(TRUE)
        prompt("Change of State Sevr")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(RBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("40 - Input")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        menu(menuYesNo)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("40 - Input")
        menu(menuAlarmSevr)
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID outpt action")
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
    }
    field(IVOV, DBF_USHORT) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
}
device(busy, CONSTANT, devBusySoft, "Soft Channel")
device(busy, CONSTANT, devBusySoftRaw, "Raw Soft Channel")
device(busy, INST_IO, asynBusyInt32, "asynInt32")
recordtype(sel) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Result")
        special(SPC_NOMOD)
        promptgroup("40 - Input")
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        menu(selSELM)
        promptgroup("30 - Action")
    }
    field(SELN, DBF_USHORT) {
        prompt("Index value")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(NVL, DBF_INLINK) {
        prompt("Index Value Location")
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPA, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        prop(YES)
        interest(1)
        size(16)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOW, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of D")
    }
    field(LE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of E")
    }
    field(LF, DBF_DOUBLE) {
        prompt("Prev Value of F")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of I")
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of L")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NLST, DBF_USHORT) {
        prompt("Last Index Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
}
recordtype(mbbo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbboRecord;
    %typedef struct mbbodset {
    %    dset common; /*init_record returns: (0, 2) => (success, success no convert)*/
    %    long (*write_mbbo)(struct mbboRecord *prec); /*returns: (0, 2) => (success, success no convert)*/
    %} mbbodset;
    %#define HAS_mbbodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        pp(TRUE)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        asl(ASL0)
        prompt("Desired Value")
        pp(TRUE)
        special(SPC_DBADDR)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        interest(1)
        menu(menuOmsl)
        prompt("Output Mode Select")
    }
    field(NOBT, DBF_USHORT) {
        prompt("Number of Bits")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
    }
    field(ZRVL, DBF_ULONG) {
        promptgroup("51 - Output 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        prompt("Zero Value")
        pp(TRUE)
    }
    field(ONVL, DBF_ULONG) {
        pp(TRUE)
        prompt("One Value")
        special(SPC_MOD)
        base(HEX)
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(TWVL, DBF_ULONG) {
        base(HEX)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Two Value")
        pp(TRUE)
    }
    field(THVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Three Value")
        promptgroup("51 - Output 0-7")
        interest(1)
        special(SPC_MOD)
        base(HEX)
    }
    field(FRVL, DBF_ULONG) {
        prompt("Four Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(FVVL, DBF_ULONG) {
        promptgroup("51 - Output 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        prompt("Five Value")
        pp(TRUE)
    }
    field(SXVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Six Value")
        special(SPC_MOD)
        base(HEX)
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(SVVL, DBF_ULONG) {
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        base(HEX)
        pp(TRUE)
        prompt("Seven Value")
    }
    field(EIVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Eight Value")
        interest(1)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
        base(HEX)
    }
    field(NIVL, DBF_ULONG) {
        special(SPC_MOD)
        base(HEX)
        interest(1)
        promptgroup("52 - Output 8-15")
        pp(TRUE)
        prompt("Nine Value")
    }
    field(TEVL, DBF_ULONG) {
        prompt("Ten Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
    }
    field(ELVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Eleven Value")
        special(SPC_MOD)
        base(HEX)
        promptgroup("52 - Output 8-15")
        interest(1)
    }
    field(TVVL, DBF_ULONG) {
        prompt("Twelve Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
    }
    field(TTVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Thirteen Value")
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        base(HEX)
    }
    field(FTVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Fourteen Value")
        promptgroup("52 - Output 8-15")
        interest(1)
        special(SPC_MOD)
        base(HEX)
    }
    field(FFVL, DBF_ULONG) {
        pp(TRUE)
        prompt("Fifteen Value")
        interest(1)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
        base(HEX)
    }
    field(ZRST, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        prompt("Zero String")
    }
    field(ONST, DBF_STRING) {
        pp(TRUE)
        prompt("One String")
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(TWST, DBF_STRING) {
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        prompt("Two String")
        pp(TRUE)
    }
    field(THST, DBF_STRING) {
        prompt("Three String")
        pp(TRUE)
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
        special(SPC_MOD)
    }
    field(FRST, DBF_STRING) {
        special(SPC_MOD)
        size(26)
        interest(1)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        prompt("Four String")
    }
    field(FVST, DBF_STRING) {
        pp(TRUE)
        prompt("Five String")
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
    }
    field(SXST, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
        prompt("Six String")
        pp(TRUE)
    }
    field(SVST, DBF_STRING) {
        pp(TRUE)
        prompt("Seven String")
        size(26)
        promptgroup("81 - Display 0-7")
        interest(1)
        special(SPC_MOD)
    }
    field(EIST, DBF_STRING) {
        pp(TRUE)
        prompt("Eight String")
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
    }
    field(NIST, DBF_STRING) {
        size(26)
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        prompt("Nine String")
        pp(TRUE)
    }
    field(TEST, DBF_STRING) {
        pp(TRUE)
        prompt("Ten String")
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
    }
    field(ELST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        special(SPC_MOD)
        prompt("Eleven String")
        pp(TRUE)
    }
    field(TVST, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
        prompt("Twelve String")
        pp(TRUE)
    }
    field(TTST, DBF_STRING) {
        prompt("Thirteen String")
        pp(TRUE)
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        special(SPC_MOD)
    }
    field(FTST, DBF_STRING) {
        pp(TRUE)
        prompt("Fourteen String")
        size(26)
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
    }
    field(FFST, DBF_STRING) {
        pp(TRUE)
        prompt("Fifteen String")
        special(SPC_MOD)
        size(26)
        promptgroup("82 - Display 8-15")
        interest(1)
    }
    field(ZRSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Zero Severity")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
    }
    field(ONSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State One Severity")
        pp(TRUE)
    }
    field(TWSV, DBF_MENU) {
        prompt("State Two Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
    }
    field(THSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        prompt("State Three Severity")
    }
    field(FRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Four Severity")
        pp(TRUE)
    }
    field(FVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Five Severity")
        pp(TRUE)
    }
    field(SXSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Six Severity")
    }
    field(SVSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Seven Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
    }
    field(EISV, DBF_MENU) {
        pp(TRUE)
        prompt("State Eight Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(NISV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Nine Severity")
        pp(TRUE)
    }
    field(TESV, DBF_MENU) {
        pp(TRUE)
        prompt("State Ten Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        menu(menuAlarmSevr)
    }
    field(ELSV, DBF_MENU) {
        prompt("State Eleven Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(TVSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Twelve Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        menu(menuAlarmSevr)
    }
    field(TTSV, DBF_MENU) {
        pp(TRUE)
        prompt("State Thirteen Sevr")
        promptgroup("72 - Alarm 8-15")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(FTSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fourteen Sevr")
        pp(TRUE)
    }
    field(FFSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fifteen Sevr")
        pp(TRUE)
    }
    field(UNSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Unknown State Sevr")
        pp(TRUE)
    }
    field(COSV, DBF_MENU) {
        prompt("Change of State Sevr")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        prompt("Prev Raw Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SDEF, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("States Defined")
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("50 - Output")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID outpt action")
    }
    field(IVOV, DBF_USHORT) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
}
device(mbbo, CONSTANT, devMbboSoft, "Soft Channel")
device(mbbo, CONSTANT, devMbboSoftRaw, "Raw Soft Channel")
device(mbbo, CONSTANT, devMbboSoftCallback, "Async Soft Channel")
device(mbbo, INST_IO, asynMbboInt32, "asynInt32")
device(mbbo, INST_IO, asynMbboUInt32Digital, "asynUInt32Digital")
recordtype(histogram) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct histogramRecord;
    %typedef struct histogramdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_histogram)(struct histogramRecord *prec); /*(0,2)=> success and add_count, don't add_count); if add_count then sgnl added to array*/
    %    long (*special_linconv)(struct histogramRecord *prec, int after);
    %} histogramdset;
    %#define HAS_histogramdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        special(SPC_DBADDR)
        extra("void *	val")
    }
    field(NELM, DBF_USHORT) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Num of Array Elements")
        initial("1")
    }
    field(CSTA, DBF_SHORT) {
        initial("1")
        prompt("Collection Status")
        interest(1)
        special(SPC_NOMOD)
    }
    field(CMD, DBF_MENU) {
        asl(ASL0)
        prompt("Collection Control")
        interest(1)
        menu(histogramCMD)
        special(SPC_CALC)
    }
    field(ULIM, DBF_DOUBLE) {
        prompt("Upper Signal Limit")
        prop(YES)
        promptgroup("30 - Action")
        interest(1)
        special(SPC_RESET)
    }
    field(LLIM, DBF_DOUBLE) {
        prompt("Lower Signal Limit ")
        special(SPC_RESET)
        prop(YES)
        promptgroup("30 - Action")
        interest(1)
    }
    field(WDTH, DBF_DOUBLE) {
        prompt("Element Width")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SGNL, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Signal Value")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Display Precision")
    }
    field(SVL, DBF_INLINK) {
        prompt("Signal Value Location")
        interest(1)
        promptgroup("40 - Input")
    }
    field(BPTR, DBF_NOACCESS) {
        prompt("Buffer Pointer")
        interest(4)
        extra("epicsUInt32 *bptr")
        special(SPC_NOMOD)
    }
    field(WDOG, DBF_NOACCESS) {
        prompt("Watchdog callback")
        special(SPC_NOMOD)
        extra("void *  wdog")
        interest(4)
    }
    field(MDEL, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Count Deadband")
    }
    field(MCNT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Counts Since Monitor")
    }
    field(SDEL, DBF_DOUBLE) {
        prompt("Monitor Seconds Dband")
        interest(1)
        promptgroup("80 - Display")
        special(SPC_RESET)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        menu(menuYesNo)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(HOPR, DBF_ULONG) {
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(LOPR, DBF_ULONG) {
        prompt("Low Operating Range")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
}
device(histogram, CONSTANT, devHistogramSoft, "Soft Channel")
recordtype(asyn) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        pp(TRUE)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        interest(4)
        prompt("Value field (unused)")
        asl(ASL0)
    }
    field(PORT, DBF_STRING) {
        size(40)
        promptgroup("40 - Input")
        interest(1)
        special(SPC_MOD)
        initial("")
        prompt("asyn port")
    }
    field(ADDR, DBF_LONG) {
        initial("0")
        prompt("asyn address")
        promptgroup("40 - Input")
        interest(1)
        special(SPC_MOD)
    }
    field(PCNCT, DBF_MENU) {
        special(SPC_MOD)
        menu(asynCONNECT)
        interest(2)
        prompt("Port Connect/Disconnect")
    }
    field(DRVINFO, DBF_STRING) {
        prompt("Driver info string")
        initial("")
        special(SPC_MOD)
        interest(2)
        size(40)
        promptgroup("40 - Input")
    }
    field(REASON, DBF_LONG) {
        prompt("asynUser->reason")
        special(SPC_MOD)
        interest(2)
    }
    field(TMOD, DBF_MENU) {
        prompt("Transaction mode")
        interest(1)
        promptgroup("40 - Input")
        menu(asynTMOD)
    }
    field(TMOT, DBF_DOUBLE) {
        promptgroup("40 - Input")
        interest(1)
        initial("1.0")
        prompt("Timeout (sec)")
    }
    field(IFACE, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        special(SPC_MOD)
        menu(asynINTERFACE)
        prompt("Interface")
    }
    field(OCTETIV, DBF_LONG) {
        prompt("asynOctet is valid")
        interest(2)
    }
    field(OPTIONIV, DBF_LONG) {
        prompt("asynOption is valid")
        interest(2)
    }
    field(GPIBIV, DBF_LONG) {
        prompt("asynGPIB is valid")
        interest(2)
    }
    field(I32IV, DBF_LONG) {
        prompt("asynInt32 is valid")
        interest(2)
    }
    field(UI32IV, DBF_LONG) {
        interest(2)
        prompt("asynUInt32Digital is valid")
    }
    field(F64IV, DBF_LONG) {
        interest(2)
        prompt("asynFloat64 is valid")
    }
    field(AOUT, DBF_STRING) {
        promptgroup("50 - Output")
        size(40)
        interest(1)
        prompt("Output (command) string")
        pp(TRUE)
    }
    field(OEOS, DBF_STRING) {
        prompt("Output delimiter")
        special(SPC_MOD)
        size(40)
        interest(1)
        promptgroup("50 - Output")
    }
    field(BOUT, DBF_CHAR) {
        prompt("Output binary data")
        pp(TRUE)
        special(SPC_DBADDR)
        interest(1)
    }
    field(OPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *optr")
        prompt("Output buffer pointer")
    }
    field(OMAX, DBF_LONG) {
        initial("80")
        prompt("Max. size of output array")
        interest(1)
        promptgroup("50 - Output")
        special(SPC_NOMOD)
    }
    field(NOWT, DBF_LONG) {
        initial("80")
        prompt("Number of bytes to write")
        interest(1)
        promptgroup("50 - Output")
    }
    field(NAWT, DBF_LONG) {
        interest(1)
        prompt("Number of bytes actually written")
    }
    field(OFMT, DBF_MENU) {
        prompt("Output format")
        menu(asynFMT)
        promptgroup("50 - Output")
        interest(1)
    }
    field(AINP, DBF_STRING) {
        special(SPC_NOMOD)
        interest(1)
        size(40)
        prompt("Input (response) string")
    }
    field(TINP, DBF_STRING) {
        prompt("Translated input string")
        asl(ASL0)
        size(40)
        interest(1)
        special(SPC_NOMOD)
    }
    field(IEOS, DBF_STRING) {
        prompt("Input Delimiter")
        size(40)
        promptgroup("40 - Input")
        interest(1)
        special(SPC_MOD)
    }
    field(BINP, DBF_CHAR) {
        asl(ASL0)
        prompt("Input binary data")
        special(SPC_DBADDR)
    }
    field(IPTR, DBF_NOACCESS) {
        size(4)
        extra("void *iptr")
        interest(4)
        special(SPC_NOMOD)
        prompt("Input buffer pointer")
    }
    field(IMAX, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("40 - Input")
        prompt("Max. size of input array")
        initial("80")
    }
    field(NRRD, DBF_LONG) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Number of bytes to read")
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Number of bytes read")
    }
    field(IFMT, DBF_MENU) {
        interest(1)
        promptgroup("40 - Input")
        menu(asynFMT)
        prompt("Input format")
    }
    field(EOMR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(asynEOMREASON)
        interest(1)
        prompt("EOM reason")
    }
    field(I32INP, DBF_LONG) {
        special(SPC_NOMOD)
        interest(2)
        prompt("asynInt32 input")
    }
    field(I32OUT, DBF_LONG) {
        promptgroup("50 - Output")
        interest(2)
        prompt("asynInt32 output")
        pp(TRUE)
    }
    field(UI32INP, DBF_ULONG) {
        prompt("asynUInt32Digital input")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UI32OUT, DBF_ULONG) {
        prompt("asynUInt32Digital output")
        pp(TRUE)
        promptgroup("50 - Output")
        interest(2)
    }
    field(UI32MASK, DBF_ULONG) {
        initial("0xffffffff")
        prompt("asynUInt32Digital mask")
        interest(2)
        promptgroup("50 - Output")
        special(SPC_MOD)
    }
    field(F64INP, DBF_DOUBLE) {
        prompt("asynFloat64 input")
        interest(2)
        special(SPC_NOMOD)
    }
    field(F64OUT, DBF_DOUBLE) {
        prompt("asynFloat64 output")
        pp(TRUE)
        interest(2)
        promptgroup("50 - Output")
    }
    field(BAUD, DBF_MENU) {
        promptgroup("40 - Input")
        interest(2)
        menu(serialBAUD)
        special(SPC_MOD)
        prompt("Baud rate")
    }
    field(LBAUD, DBF_LONG) {
        interest(2)
        promptgroup("40 - Input")
        special(SPC_MOD)
        prompt("Baud rate")
    }
    field(PRTY, DBF_MENU) {
        prompt("Parity")
        menu(serialPRTY)
        special(SPC_MOD)
        interest(2)
        promptgroup("40 - Input")
    }
    field(DBIT, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        menu(serialDBIT)
        special(SPC_MOD)
        prompt("Data bits")
    }
    field(SBIT, DBF_MENU) {
        special(SPC_MOD)
        menu(serialSBIT)
        promptgroup("40 - Input")
        interest(2)
        prompt("Stop bits")
    }
    field(MCTL, DBF_MENU) {
        promptgroup("40 - Input")
        interest(2)
        special(SPC_MOD)
        menu(serialMCTL)
        prompt("Modem control")
    }
    field(FCTL, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        special(SPC_MOD)
        menu(serialFCTL)
        prompt("Flow control")
    }
    field(IXON, DBF_MENU) {
        promptgroup("40 - Input")
        interest(2)
        menu(serialIX)
        special(SPC_MOD)
        prompt("Output XON/XOFF")
    }
    field(IXOFF, DBF_MENU) {
        special(SPC_MOD)
        menu(serialIX)
        interest(2)
        promptgroup("40 - Input")
        prompt("Input XON/XOFF")
    }
    field(IXANY, DBF_MENU) {
        special(SPC_MOD)
        menu(serialIX)
        interest(2)
        promptgroup("40 - Input")
        prompt("XON=any character")
    }
    field(HOSTINFO, DBF_STRING) {
        size(40)
        interest(1)
        promptgroup("40 - Input")
        special(SPC_MOD)
        initial("")
        prompt("host info")
    }
    field(DRTO, DBF_MENU) {
        prompt("Disconnect on timeout")
        special(SPC_MOD)
        menu(ipDRTO)
        promptgroup("40 - Input")
        interest(2)
    }
    field(UCMD, DBF_MENU) {
        prompt("Universal command")
        pp(TRUE)
        menu(gpibUCMD)
        promptgroup("50 - Output")
        interest(2)
    }
    field(ACMD, DBF_MENU) {
        promptgroup("50 - Output")
        interest(2)
        menu(gpibACMD)
        pp(TRUE)
        prompt("Addressed command")
    }
    field(SPR, DBF_UCHAR) {
        prompt("Serial poll response")
        special(SPC_NOMOD)
        interest(2)
    }
    field(TMSK, DBF_LONG) {
        promptgroup("80 - Display")
        interest(1)
        special(SPC_MOD)
        prompt("Trace mask")
    }
    field(TB0, DBF_MENU) {
        prompt("Trace error")
        special(SPC_MOD)
        menu(asynTRACE)
        promptgroup("80 - Display")
        interest(1)
    }
    field(TB1, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        special(SPC_MOD)
        menu(asynTRACE)
        prompt("Trace IO device")
    }
    field(TB2, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        menu(asynTRACE)
        special(SPC_MOD)
        prompt("Trace IO filter")
    }
    field(TB3, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
        menu(asynTRACE)
        prompt("Trace IO driver")
    }
    field(TB4, DBF_MENU) {
        prompt("Trace flow")
        special(SPC_MOD)
        menu(asynTRACE)
        interest(1)
        promptgroup("80 - Display")
    }
    field(TB5, DBF_MENU) {
        prompt("Trace warning")
        interest(1)
        promptgroup("80 - Display")
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TIOM, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace I/O mask")
    }
    field(TIB0, DBF_MENU) {
        prompt("Trace IO ASCII")
        special(SPC_MOD)
        menu(asynTRACE)
        promptgroup("80 - Display")
        interest(1)
    }
    field(TIB1, DBF_MENU) {
        prompt("Trace IO escape")
        special(SPC_MOD)
        menu(asynTRACE)
        promptgroup("80 - Display")
        interest(1)
    }
    field(TIB2, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
        interest(1)
        prompt("Trace IO hex")
    }
    field(TINM, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
        prompt("Trace Info mask")
    }
    field(TINB0, DBF_MENU) {
        prompt("Trace Info Time")
        special(SPC_MOD)
        menu(asynTRACE)
        promptgroup("80 - Display")
        interest(1)
    }
    field(TINB1, DBF_MENU) {
        prompt("Trace Info Port")
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
    }
    field(TINB2, DBF_MENU) {
        promptgroup("80 - Display")
        interest(1)
        menu(asynTRACE)
        special(SPC_MOD)
        prompt("Trace Info Source")
    }
    field(TINB3, DBF_MENU) {
        prompt("Trace Info Thread")
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
    }
    field(TSIZ, DBF_LONG) {
        promptgroup("80 - Display")
        interest(1)
        special(SPC_MOD)
        prompt("Trace IO truncate size")
    }
    field(TFIL, DBF_STRING) {
        prompt("Trace IO file")
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("80 - Display")
    }
    field(AUCT, DBF_MENU) {
        prompt("Autoconnect")
        menu(asynAUTOCONNECT)
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(1)
    }
    field(CNCT, DBF_MENU) {
        prompt("Connect/Disconnect")
        promptgroup("40 - Input")
        interest(1)
        special(SPC_MOD)
        menu(asynCONNECT)
    }
    field(ENBL, DBF_MENU) {
        special(SPC_MOD)
        menu(asynENABLE)
        promptgroup("40 - Input")
        interest(1)
        prompt("Enable/Disable")
    }
    field(ERRS, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(4)
        extra("char *errs")
        prompt("Error string")
    }
    field(AQR, DBF_UCHAR) {
        interest(4)
        special(SPC_MOD)
        prompt("Abort queueRequest")
    }
}
device(asyn, INST_IO, asynRecordDevice, "asynRecordDevice")
recordtype(printf) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct printfRecord;
    %typedef struct printfdset {
    %    dset common;
    %    long (*write_string)(struct printfRecord *prec);
    %} printfdset;
    %#define HAS_printfdset
    %
    %/* Number of INPx fields defined */
    %#define PRINTF_NLINKS 10
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        interest(4)
        extra("unambiguous_dset    *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        prompt("Result")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("char *val")
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of VAL buffer")
        initial("41")
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(FMT, DBF_STRING) {
        promptgroup("30 - Action")
        size(81)
        prompt("Format String")
        pp(TRUE)
    }
    field(IVLS, DBF_STRING) {
        initial("LNK")
        prompt("Invalid Link String")
        promptgroup("30 - Action")
        size(16)
    }
    field(INP0, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 0")
    }
    field(INP1, DBF_INLINK) {
        prompt("Input 1")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP2, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 2")
    }
    field(INP3, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 3")
    }
    field(INP4, DBF_INLINK) {
        prompt("Input 4")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP5, DBF_INLINK) {
        prompt("Input 5")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP6, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 6")
    }
    field(INP7, DBF_INLINK) {
        prompt("Input 7")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP8, DBF_INLINK) {
        prompt("Input 8")
        promptgroup("40 - Input")
        interest(1)
    }
    field(INP9, DBF_INLINK) {
        prompt("Input 9")
        interest(1)
        promptgroup("40 - Input")
    }
}
device(printf, CONSTANT, devPrintfSoft, "Soft Channel")
device(printf, CONSTANT, devPrintfSoftCallback, "Async Soft Channel")
device(printf, INST_IO, devPrintfStdio, "stdio")
device(printf, INST_IO, asynPfOctetWrite, "asynOctetWrite")
recordtype(subArray) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct subArrayRecord;
    %typedef struct sadset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_sa)(struct subArrayRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} sadset;
    %#define HAS_sadset
    %
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
    }
    field(BKLNK, DBF_NOACCESS) {
        extra("ELLLIST             bklnk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        pp(TRUE)
        initial("1")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        pp(TRUE)
        extra("void *		val")
        special(SPC_DBADDR)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        promptgroup("30 - Action")
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
    field(MALM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        initial("1")
        prompt("Maximum Elements")
    }
    field(NELM, DBF_ULONG) {
        initial("1")
        pp(TRUE)
        prompt("Number of Elements")
        promptgroup("30 - Action")
    }
    field(INDX, DBF_ULONG) {
        promptgroup("30 - Action")
        prompt("Substring Index")
        pp(TRUE)
    }
    field(BUSY, DBF_SHORT) {
        prompt("Busy Indicator")
        special(SPC_NOMOD)
    }
    field(NORD, DBF_LONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        extra("void *		bptr")
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
    }
}
device(subArray, CONSTANT, devSASoft, "Soft Channel")
recordtype(stringout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct stringoutRecord;
    %typedef struct stringoutdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_stringout)(struct stringoutRecord *prec); /*(-1,0)=>(failure,success)*/
    %} stringoutdset;
    %#define HAS_stringoutdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        pp(TRUE)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_STRING) {
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
        size(40)
        promptgroup("50 - Output")
    }
    field(OVAL, DBF_STRING) {
        prompt("Previous Value")
        special(SPC_NOMOD)
        interest(3)
        size(40)
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
        menu(menuOmsl)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(stringoutPOST)
    }
    field(APST, DBF_MENU) {
        prompt("Post Archive Monitors")
        menu(stringoutPOST)
        promptgroup("80 - Display")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        special(SPC_MOD)
        menu(menuYesNo)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
    }
    field(IVOV, DBF_STRING) {
        interest(2)
        size(40)
        promptgroup("50 - Output")
        prompt("INVALID output value")
    }
}
device(stringout, CONSTANT, devSoSoft, "Soft Channel")
device(stringout, CONSTANT, devSoSoftCallback, "Async Soft Channel")
device(stringout, INST_IO, devSoStdio, "stdio")
device(stringout, INST_IO, asynSoOctetWrite, "asynOctetWrite")
recordtype(swait) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VERS, DBF_FLOAT) {
        prompt("Code Version")
        initial("1")
        special(SPC_NOMOD)
    }
    field(HOPR, DBF_FLOAT) {
        asl(ASL0)
        prompt("High Operating Range")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOPR, DBF_FLOAT) {
        asl(ASL0)
        prompt("Low Operating Range")
        interest(1)
        promptgroup("41 - Bits (1)")
    }
    field(INIT, DBF_SHORT) {
        prompt("Initialized?")
        interest(3)
        special(SPC_NOMOD)
    }
    field(CBST, DBF_NOACCESS) {
        prompt("Pointer to cbStruct")
        size(4)
        extra("void *         cbst")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INAN, DBF_STRING) {
        prompt("INPA PV Name")
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        interest(1)
    }
    field(INBN, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("INPB PV Name")
    }
    field(INCN, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        interest(1)
        prompt("INPC PV Name")
        asl(ASL0)
    }
    field(INDN, DBF_STRING) {
        prompt("INPD PV Name")
        asl(ASL0)
        promptgroup("30 - Action")
        size(40)
        interest(1)
        special(SPC_MOD)
    }
    field(INEN, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("INPE PV Name")
        asl(ASL0)
    }
    field(INFN, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("30 - Action")
        prompt("INPF PV Name")
        asl(ASL0)
    }
    field(INGN, DBF_STRING) {
        size(40)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("INPG PV Name")
        asl(ASL0)
    }
    field(INHN, DBF_STRING) {
        size(40)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        prompt("INPH PV Name")
    }
    field(ININ, DBF_STRING) {
        prompt("INPI PV Name")
        asl(ASL0)
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        interest(1)
    }
    field(INJN, DBF_STRING) {
        prompt("INPJ PV Name")
        asl(ASL0)
        interest(1)
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INKN, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        interest(1)
        prompt("INPK PV Name")
        asl(ASL0)
    }
    field(INLN, DBF_STRING) {
        asl(ASL0)
        prompt("INPL PV Name")
        special(SPC_MOD)
        size(40)
        interest(1)
        promptgroup("30 - Action")
    }
    field(DOLN, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        prompt("DOL  PV Name")
    }
    field(OUTN, DBF_STRING) {
        asl(ASL0)
        prompt("OUT  PV Name")
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("30 - Action")
    }
    field(INAV, DBF_MENU) {
        prompt("INPA PV Status")
        special(SPC_NOMOD)
        menu(swaitINAV)
        interest(1)
    }
    field(INBV, DBF_MENU) {
        interest(1)
        menu(swaitINAV)
        special(SPC_NOMOD)
        prompt("INPB PV Status")
    }
    field(INCV, DBF_MENU) {
        prompt("INPC PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INDV, DBF_MENU) {
        prompt("INPD PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INEV, DBF_MENU) {
        prompt("INPE PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INFV, DBF_MENU) {
        prompt("INPF PV Status")
        menu(swaitINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INGV, DBF_MENU) {
        menu(swaitINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPG PV Status")
    }
    field(INHV, DBF_MENU) {
        menu(swaitINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPH PV Status")
    }
    field(INIV, DBF_MENU) {
        prompt("INPI PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INJV, DBF_MENU) {
        prompt("INPJ PV Status")
        menu(swaitINAV)
        special(SPC_NOMOD)
        interest(1)
    }
    field(INKV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPK PV Status")
    }
    field(INLV, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPL PV Status")
    }
    field(DOLV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        interest(1)
        prompt("DOL  PV Status")
    }
    field(OUTV, DBF_MENU) {
        prompt("OUT  PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        prompt("Last Val of Input A")
    }
    field(LB, DBF_DOUBLE) {
        prompt("Last Val of Input B")
    }
    field(LC, DBF_DOUBLE) {
        prompt("Last Val of Input C")
    }
    field(LD, DBF_DOUBLE) {
        prompt("Last Val of Input D")
    }
    field(LE, DBF_DOUBLE) {
        prompt("Last Val of Input E")
    }
    field(LF, DBF_DOUBLE) {
        prompt("Last Val of Input F")
    }
    field(LG, DBF_DOUBLE) {
        prompt("Last Val of Input G")
    }
    field(LH, DBF_DOUBLE) {
        prompt("Last Val of Input H")
    }
    field(LI, DBF_DOUBLE) {
        prompt("Last Val of Input I")
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Last Val of Input J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Last Val of Input K")
    }
    field(LL, DBF_DOUBLE) {
        prompt("Last Val of Input L")
    }
    field(INAP, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
        initial("Yes")
        prompt("INPA causes I/O INTR")
    }
    field(INBP, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
        initial("Yes")
        prompt("INPB causes I/O INTR")
    }
    field(INCP, DBF_MENU) {
        initial("Yes")
        prompt("INPC causes I/O INTR")
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
    }
    field(INDP, DBF_MENU) {
        menu(swaitINAP)
        interest(1)
        promptgroup("30 - Action")
        prompt("INPD causes I/O INTR")
        initial("Yes")
    }
    field(INEP, DBF_MENU) {
        initial("Yes")
        prompt("INPE causes I/O INTR")
        interest(1)
        promptgroup("30 - Action")
        menu(swaitINAP)
    }
    field(INFP, DBF_MENU) {
        menu(swaitINAP)
        interest(1)
        promptgroup("30 - Action")
        prompt("INPF causes I/O INTR")
        initial("Yes")
    }
    field(INGP, DBF_MENU) {
        menu(swaitINAP)
        interest(1)
        promptgroup("30 - Action")
        prompt("INPG causes I/O INTR")
        initial("Yes")
    }
    field(INHP, DBF_MENU) {
        initial("Yes")
        prompt("INPH causes I/O INTR")
        interest(1)
        promptgroup("30 - Action")
        menu(swaitINAP)
    }
    field(INIP, DBF_MENU) {
        prompt("INPI causes I/O INTR")
        initial("Yes")
        menu(swaitINAP)
        promptgroup("30 - Action")
        interest(1)
    }
    field(INJP, DBF_MENU) {
        initial("Yes")
        prompt("INPJ causes I/O INTR")
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
    }
    field(INKP, DBF_MENU) {
        initial("Yes")
        prompt("INPK causes I/O INTR")
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
    }
    field(INLP, DBF_MENU) {
        initial("Yes")
        prompt("INPL causes I/O INTR")
        promptgroup("30 - Action")
        interest(1)
        menu(swaitINAP)
    }
    field(CALC, DBF_STRING) {
        asl(ASL0)
        prompt("Calculation")
        initial("0")
        special(SPC_CALC)
        promptgroup("30 - Action")
        size(36)
    }
    field(RPCL, DBF_NOACCESS) {
        prompt("Reverse Polish Calc")
        extra("char    rpcl[184]")
        size(184)
        interest(4)
        special(SPC_NOMOD)
    }
    field(CLCV, DBF_LONG) {
        prompt("CALC Valid")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Value Field")
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Old Value")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Display Precision")
    }
    field(OOPT, DBF_MENU) {
        prompt("Output Execute Opt")
        menu(swaitOOPT)
        interest(1)
        promptgroup("30 - Action")
    }
    field(ODLY, DBF_FLOAT) {
        asl(ASL0)
        prompt("Output Execute Delay")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(DOPT, DBF_MENU) {
        promptgroup("30 - Action")
        interest(1)
        menu(swaitDOPT)
        prompt("Output Data Option")
    }
    field(DOLD, DBF_DOUBLE) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Desired Output Data")
        asl(ASL0)
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        prompt("Event To Issue")
        asl(ASL0)
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("30 - Action")
        interest(1)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        promptgroup("30 - Action")
        interest(1)
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("40 - Input")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
    }
}
device(swait, CONSTANT, devSWaitIoEvent, "Soft Channel")
recordtype(dfanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        prompt("Desired Output")
        asl(ASL0)
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        promptgroup("30 - Action")
        interest(1)
        menu(dfanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        initial("1")
        prompt("Link Selection")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
        interest(1)
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Spec A")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTB, DBF_OUTLINK) {
        prompt("Output Spec B")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTC, DBF_OUTLINK) {
        prompt("Output Spec C")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTD, DBF_OUTLINK) {
        prompt("Output Spec D")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTE, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Spec E")
    }
    field(OUTF, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Spec F")
    }
    field(OUTG, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Spec G")
    }
    field(OUTH, DBF_OUTLINK) {
        prompt("Output Spec H")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Engineering Units")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        prompt("High Operating Range")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        prompt("Hihi Severity")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
}
recordtype(bi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct biRecord;
    %typedef struct bidset {
    %    dset common;
    %    long (*read_bi)(struct biRecord *prec);
    %} bidset;
    %#define HAS_bidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(VAL, DBF_ENUM) {
        promptgroup("40 - Input")
        prompt("Current Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(ZSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Zero Error Severity")
        pp(TRUE)
    }
    field(OSV, DBF_MENU) {
        pp(TRUE)
        prompt("One Error Severity")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Change of State Svr")
        pp(TRUE)
    }
    field(ZNAM, DBF_STRING) {
        prop(YES)
        promptgroup("80 - Display")
        size(26)
        interest(1)
        prompt("Zero Name")
        pp(TRUE)
    }
    field(ONAM, DBF_STRING) {
        prompt("One Name")
        pp(TRUE)
        prop(YES)
        interest(1)
        size(26)
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        special(SPC_NOMOD)
        interest(1)
    }
    field(LALM, DBF_USHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Monitored")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Input Link")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        menu(menuSimm)
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Scan")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        interest(4)
        extra("epicsCallback            *simpvt")
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
}
device(bi, CONSTANT, devBiSoft, "Soft Channel")
device(bi, CONSTANT, devBiSoftRaw, "Raw Soft Channel")
device(bi, CONSTANT, devBiSoftCallback, "Async Soft Channel")
device(bi, INST_IO, devBiDbState, "Db State")
device(bi, INST_IO, asynBiInt32, "asynInt32")
device(bi, INST_IO, asynBiUInt32Digital, "asynUInt32Digital")
recordtype(lso) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct lsoRecord;
    %typedef struct lsodset {
    %    dset common;
    %    long (*write_string)(struct lsoRecord *prec);
    %} lsodset;
    %#define HAS_lsodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        pp(TRUE)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("char *val")
    }
    field(OVAL, DBF_NOACCESS) {
        interest(3)
        extra("char *oval")
        special(SPC_DBADDR)
        prompt("Previous Value")
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of buffers")
        initial("41")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("50 - Output")
    }
    field(LEN, DBF_ULONG) {
        prompt("Length of VAL")
        special(SPC_NOMOD)
    }
    field(OLEN, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Length of OVAL")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Link")
        interest(1)
        promptgroup("40 - Input")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID Output Action")
    }
    field(IVOV, DBF_STRING) {
        prompt("INVALID Output Value")
        promptgroup("50 - Output")
        size(40)
        interest(2)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        interest(1)
        menu(menuPost)
    }
    field(APST, DBF_MENU) {
        menu(menuPost)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Output Link")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
    }
    field(SSCN, DBF_MENU) {
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Scan")
        initial("65535")
    }
    field(SDLY, DBF_DOUBLE) {
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
}
device(lso, CONSTANT, devLsoSoft, "Soft Channel")
device(lso, CONSTANT, devLsoSoftCallback, "Async Soft Channel")
device(lso, INST_IO, devLsoStdio, "stdio")
device(lso, INST_IO, asynLsoOctetWrite, "asynOctetWrite")
recordtype(mca) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        interest(4)
        extra("unambiguous_dset    *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VERS, DBF_DOUBLE) {
        prompt("Code Version")
        initial("1")
        special(SPC_NOMOD)
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        size(4)
        extra("void *val")
        pp(TRUE)
        prompt("Value")
    }
    field(BPTR, DBF_NOACCESS) {
        prompt("Buffer Pointer")
        extra("void *bptr")
        size(4)
        interest(4)
        special(SPC_NOMOD)
    }
    field(BG, DBF_NOACCESS) {
        prompt("Background")
        pp(TRUE)
        special(SPC_DBADDR)
        size(4)
        extra("void *bg")
    }
    field(PBG, DBF_NOACCESS) {
        interest(4)
        extra("void *pbg")
        size(4)
        special(SPC_NOMOD)
        prompt("Background buffer")
    }
    field(PSTATUS, DBF_NOACCESS) {
        extra("void *pstatus")
        interest(4)
        size(4)
        special(SPC_NOMOD)
        prompt("Status buffer")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
    }
    field(NMAX, DBF_LONG) {
        initial("1")
        prompt("Max number of channels")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NORD, DBF_LONG) {
        prompt("Number of channels read")
        special(SPC_NOMOD)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        initial("5")
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        promptgroup("10 - Common")
    }
    field(STRT, DBF_MENU) {
        pp(TRUE)
        prompt("Start Acquire")
        interest(1)
        promptgroup("10 - Common")
        menu(mcaSTRT)
    }
    field(ERST, DBF_MENU) {
        pp(TRUE)
        prompt("Erase & Start Acquire")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        menu(mcaSTRT)
    }
    field(STOP, DBF_MENU) {
        promptgroup("10 - Common")
        interest(1)
        menu(mcaSTRT)
        prompt("Stop Acquire")
        pp(TRUE)
    }
    field(ACQG, DBF_MENU) {
        interest(1)
        special(SPC_NOMOD)
        menu(mcaSTRT)
        prompt("Acquiring")
    }
    field(READ, DBF_MENU) {
        menu(mcaREAD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Read array")
        pp(TRUE)
    }
    field(RDNG, DBF_MENU) {
        interest(1)
        menu(mcaREAD)
        special(SPC_NOMOD)
        prompt("Reading array")
    }
    field(RDNS, DBF_MENU) {
        prompt("Reading status")
        special(SPC_NOMOD)
        menu(mcaREAD)
        interest(1)
    }
    field(ERAS, DBF_MENU) {
        pp(TRUE)
        prompt("Erase array")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        menu(mcaERAS)
    }
    field(CHAS, DBF_MENU) {
        pp(TRUE)
        prompt("Channel-advance source")
        menu(mcaCHAS)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(NUSE, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt(" # of channels to use")
        pp(TRUE)
    }
    field(SEQ, DBF_LONG) {
        prompt("Time sequence #")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(DWEL, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Dwell time per channel")
        initial("1.0")
    }
    field(PSCL, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Channel advance prescale")
        initial("1")
    }
    field(PRTM, DBF_DOUBLE) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        prompt("Preset real time")
        pp(TRUE)
    }
    field(PLTM, DBF_DOUBLE) {
        prompt("Preset live time")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(PCT, DBF_DOUBLE) {
        prompt("Preset counts")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(PCTL, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Preset count low channe")
    }
    field(PCTH, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Preset count high chann")
    }
    field(PSWP, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Preset number of sweeps")
        initial("1")
    }
    field(MODE, DBF_MENU) {
        prompt("Mode PHA/MCS/LIST")
        pp(TRUE)
        promptgroup("10 - Common")
        menu(mcaMODE)
        special(SPC_MOD)
    }
    field(CALO, DBF_DOUBLE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Calibration offset")
    }
    field(CALS, DBF_DOUBLE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Calibration slope")
        initial("1")
    }
    field(CALQ, DBF_DOUBLE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Calibration quadratic")
    }
    field(EGU, DBF_STRING) {
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prompt("Calibration Units Name")
    }
    field(TTH, DBF_DOUBLE) {
        prompt("Two-theta")
        initial("10")
        promptgroup("10 - Common")
        interest(1)
    }
    field(ERTM, DBF_DOUBLE) {
        prompt("Elapsed real time")
        interest(1)
    }
    field(ELTM, DBF_DOUBLE) {
        prompt("Elapsed live time")
        interest(1)
    }
    field(DTIM, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Average % dead time")
    }
    field(IDTIM, DBF_DOUBLE) {
        prompt("Instantaneous % dead time")
        special(SPC_NOMOD)
        interest(1)
    }
    field(STIM, DBF_STRING) {
        prompt("Acquisition stop time")
        special(SPC_NOMOD)
        promptgroup("80 - Display")
        size(40)
        interest(1)
    }
    field(RTIM, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Last read time")
    }
    field(ACT, DBF_LONG) {
        prompt("Actual counts in pregio")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NACK, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Message not acknowledge")
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
        special(SPC_NOMOD)
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Deviation Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Deviation Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Deviation Limit")
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Deviation Limit")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        special(SPC_NOMOD)
        promptgroup("40 - Input")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
    }
    field(MMAP, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor map")
    }
    field(RMAP, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        prompt("ROI monitor map")
    }
    field(NEWV, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        prompt("New Value map")
    }
    field(NEWR, DBF_ULONG) {
        prompt("New ROI Value map")
        interest(4)
        special(SPC_NOMOD)
    }
    field(R0LO, DBF_LONG) {
        pp(TRUE)
        prompt("Region 0 low channel")
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R0HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 0 high channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R0BG, DBF_SHORT) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 0 bkgrnd chans")
        pp(TRUE)
    }
    field(R0IP, DBF_MENU) {
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 0 is preset")
    }
    field(R1LO, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 1 low channel")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R1HI, DBF_LONG) {
        pp(TRUE)
        prompt("Region 1 high channel")
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R1BG, DBF_SHORT) {
        prompt("Region 1 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R1IP, DBF_MENU) {
        pp(TRUE)
        prompt("Region 1 is preset")
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
    }
    field(R2LO, DBF_LONG) {
        prompt("Region 2 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R2HI, DBF_LONG) {
        prompt("Region 2 high channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R2BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 2 bkgrnd chans")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R2IP, DBF_MENU) {
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
        prompt("Region 2 is preset")
        pp(TRUE)
    }
    field(R3LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 3 low channel")
    }
    field(R3HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 3 high channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R3BG, DBF_SHORT) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 3 bkgrnd chans")
    }
    field(R3IP, DBF_MENU) {
        pp(TRUE)
        prompt("Region 3 is preset")
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R4LO, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 4 low channel")
        initial("-1")
    }
    field(R4HI, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        prompt("Region 4 high channel")
        pp(TRUE)
    }
    field(R4BG, DBF_SHORT) {
        prompt("Region 4 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R4IP, DBF_MENU) {
        prompt("Region 4 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R5LO, DBF_LONG) {
        prompt("Region 5 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R5HI, DBF_LONG) {
        prompt("Region 5 high channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R5BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 5 bkgrnd chans")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R5IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 5 is preset")
    }
    field(R6LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        prompt("Region 6 low channel")
        pp(TRUE)
    }
    field(R6HI, DBF_LONG) {
        initial("-1")
        prompt("Region 6 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R6BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 6 bkgrnd chans")
    }
    field(R6IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        prompt("Region 6 is preset")
        pp(TRUE)
    }
    field(R7LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        prompt("Region 7 low channel")
        pp(TRUE)
    }
    field(R7HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 7 high channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R7BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 7 bkgrnd chans")
    }
    field(R7IP, DBF_MENU) {
        prompt("Region 7 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
    }
    field(R8LO, DBF_LONG) {
        prompt("Region 8 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R8HI, DBF_LONG) {
        initial("-1")
        prompt("Region 8 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R8BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 8 bkgrnd chans")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R8IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        prompt("Region 8 is preset")
        pp(TRUE)
    }
    field(R9LO, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 9 low channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R9HI, DBF_LONG) {
        initial("-1")
        prompt("Region 9 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R9BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 9 bkgrnd chans")
    }
    field(R9IP, DBF_MENU) {
        pp(TRUE)
        prompt("Region 9 is preset")
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
    }
    field(R10LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 10 low channel")
    }
    field(R10HI, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 10 high channel")
    }
    field(R10BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 10 bkgrnd chans")
    }
    field(R10IP, DBF_MENU) {
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 10 is preset")
    }
    field(R11LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 11 low channel")
    }
    field(R11HI, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 11 high channel")
    }
    field(R11BG, DBF_SHORT) {
        prompt("Region 11 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R11IP, DBF_MENU) {
        prompt("Region 11 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
    }
    field(R12LO, DBF_LONG) {
        pp(TRUE)
        prompt("Region 12 low channel")
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R12HI, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 12 high channel")
    }
    field(R12BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Region 12 bkgrnd chans")
    }
    field(R12IP, DBF_MENU) {
        pp(TRUE)
        prompt("Region 12 is preset")
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R13LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 13 low channel")
    }
    field(R13HI, DBF_LONG) {
        prompt("Region 13 high channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R13BG, DBF_SHORT) {
        prompt("Region 13 bkgrnd chans")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R13IP, DBF_MENU) {
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 13 is preset")
        pp(TRUE)
    }
    field(R14LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 14 low channel")
    }
    field(R14HI, DBF_LONG) {
        pp(TRUE)
        prompt("Region 14 high channel")
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R14BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 14 bkgrnd chans")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R14IP, DBF_MENU) {
        prompt("Region 14 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
    }
    field(R15LO, DBF_LONG) {
        prompt("Region 15 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R15HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 15 high channel")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R15BG, DBF_SHORT) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 15 bkgrnd chans")
    }
    field(R15IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        prompt("Region 15 is preset")
        pp(TRUE)
    }
    field(R16LO, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 16 low channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R16HI, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 16 high channel")
    }
    field(R16BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 16 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R16IP, DBF_MENU) {
        prompt("Region 16 is preset")
        pp(TRUE)
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
    }
    field(R17LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        prompt("Region 17 low channel")
        pp(TRUE)
    }
    field(R17HI, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 17 high channel")
        initial("-1")
    }
    field(R17BG, DBF_SHORT) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 17 bkgrnd chans")
        pp(TRUE)
    }
    field(R17IP, DBF_MENU) {
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 17 is preset")
        pp(TRUE)
    }
    field(R18LO, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 18 low channel")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R18HI, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 18 high channel")
        initial("-1")
    }
    field(R18BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 18 bkgrnd chans")
        pp(TRUE)
    }
    field(R18IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 18 is preset")
    }
    field(R19LO, DBF_LONG) {
        pp(TRUE)
        prompt("Region 19 low channel")
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R19HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 19 high channel")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R19BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 19 bkgrnd chans")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R19IP, DBF_MENU) {
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 19 is preset")
    }
    field(R20LO, DBF_LONG) {
        prompt("Region 20 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R20HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Region 20 high channel")
        initial("-1")
    }
    field(R20BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 20 bkgrnd chans")
    }
    field(R20IP, DBF_MENU) {
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        prompt("Region 20 is preset")
        pp(TRUE)
    }
    field(R21LO, DBF_LONG) {
        prompt("Region 21 low channel")
        pp(TRUE)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R21HI, DBF_LONG) {
        initial("-1")
        pp(TRUE)
        prompt("Region 21 high channel")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R21BG, DBF_SHORT) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 21 bkgrnd chans")
        pp(TRUE)
    }
    field(R21IP, DBF_MENU) {
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        prompt("Region 21 is preset")
        pp(TRUE)
    }
    field(R22LO, DBF_LONG) {
        initial("-1")
        prompt("Region 22 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R22HI, DBF_LONG) {
        initial("-1")
        prompt("Region 22 high channel")
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R22BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
        prompt("Region 22 bkgrnd chans")
    }
    field(R22IP, DBF_MENU) {
        prompt("Region 22 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R23LO, DBF_LONG) {
        pp(TRUE)
        prompt("Region 23 low channel")
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R23HI, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        prompt("Region 23 high channel")
        pp(TRUE)
    }
    field(R23BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 23 bkgrnd chans")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R23IP, DBF_MENU) {
        prompt("Region 23 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R24LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 24 low channel")
    }
    field(R24HI, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 24 high channel")
    }
    field(R24BG, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        prompt("Region 24 bkgrnd chans")
        pp(TRUE)
    }
    field(R24IP, DBF_MENU) {
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        prompt("Region 24 is preset")
        pp(TRUE)
    }
    field(R25LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 25 low channel")
        pp(TRUE)
        initial("-1")
    }
    field(R25HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 25 high channel")
        pp(TRUE)
        initial("-1")
    }
    field(R25BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 25 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R25IP, DBF_MENU) {
        prompt("Region 25 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R26LO, DBF_LONG) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 26 low channel")
    }
    field(R26HI, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 26 high channel")
    }
    field(R26BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 26 bkgrnd chans")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R26IP, DBF_MENU) {
        prompt("Region 26 is preset")
        pp(TRUE)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R27LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        prompt("Region 27 low channel")
        pp(TRUE)
    }
    field(R27HI, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        prompt("Region 27 high channel")
        pp(TRUE)
        initial("-1")
    }
    field(R27BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 27 bkgrnd chans")
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R27IP, DBF_MENU) {
        special(SPC_MOD)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 27 is preset")
    }
    field(R28LO, DBF_LONG) {
        pp(TRUE)
        prompt("Region 28 low channel")
        initial("-1")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R28HI, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        prompt("Region 28 high channel")
        pp(TRUE)
        initial("-1")
    }
    field(R28BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 28 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R28IP, DBF_MENU) {
        pp(TRUE)
        prompt("Region 28 is preset")
        promptgroup("10 - Common")
        menu(mcaR0IP)
        special(SPC_MOD)
    }
    field(R29LO, DBF_LONG) {
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
        initial("-1")
        pp(TRUE)
        prompt("Region 29 low channel")
    }
    field(R29HI, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 29 high channel")
        initial("-1")
    }
    field(R29BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 29 bkgrnd chans")
        special(SPC_MOD)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R29IP, DBF_MENU) {
        prompt("Region 29 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R30LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 30 low channel")
        pp(TRUE)
        initial("-1")
    }
    field(R30HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 30 high channel")
        pp(TRUE)
        initial("-1")
    }
    field(R30BG, DBF_SHORT) {
        pp(TRUE)
        prompt("Region 30 bkgrnd chans")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R30IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 30 is preset")
    }
    field(R31LO, DBF_LONG) {
        initial("-1")
        prompt("Region 31 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        special(SPC_MOD)
    }
    field(R31HI, DBF_LONG) {
        pp(TRUE)
        prompt("Region 31 high channel")
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R31BG, DBF_SHORT) {
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 31 bkgrnd chans")
    }
    field(R31IP, DBF_MENU) {
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 31 is preset")
        pp(TRUE)
    }
    field(R0, DBF_DOUBLE) {
        prompt("Region 0 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R0N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 0 net counts")
    }
    field(R0P, DBF_DOUBLE) {
        prompt("Region 0 preset count")
        interest(1)
        special(SPC_MOD)
    }
    field(R1, DBF_DOUBLE) {
        prompt("Region 1 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R1N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 1 net counts")
    }
    field(R1P, DBF_DOUBLE) {
        prompt("Region 1 preset count")
        interest(1)
        special(SPC_MOD)
    }
    field(R2, DBF_DOUBLE) {
        prompt("Region 2 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R2N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 2 net counts")
    }
    field(R2P, DBF_DOUBLE) {
        prompt("Region 2 preset count")
        special(SPC_MOD)
        interest(1)
    }
    field(R3, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 3 counts")
    }
    field(R3N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 3 net counts")
    }
    field(R3P, DBF_DOUBLE) {
        prompt("Region 3 preset count")
        special(SPC_MOD)
        interest(1)
    }
    field(R4, DBF_DOUBLE) {
        prompt("Region 4 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R4N, DBF_DOUBLE) {
        prompt("Region 4 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R4P, DBF_DOUBLE) {
        prompt("Region 4 preset count")
        special(SPC_MOD)
        interest(1)
    }
    field(R5, DBF_DOUBLE) {
        prompt("Region 5 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R5N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 5 net counts")
    }
    field(R5P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 5 preset count")
    }
    field(R6, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 6 counts")
    }
    field(R6N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 6 net counts")
    }
    field(R6P, DBF_DOUBLE) {
        prompt("Region 6 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R7, DBF_DOUBLE) {
        prompt("Region 7 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R7N, DBF_DOUBLE) {
        prompt("Region 7 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R7P, DBF_DOUBLE) {
        prompt("Region 7 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R8, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 8 counts")
    }
    field(R8N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 8 net counts")
    }
    field(R8P, DBF_DOUBLE) {
        prompt("Region 8 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R9, DBF_DOUBLE) {
        prompt("Region 9 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R9N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 9 net counts")
    }
    field(R9P, DBF_DOUBLE) {
        prompt("Region 9 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R10, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 10 counts")
    }
    field(R10N, DBF_DOUBLE) {
        prompt("Region 10 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R10P, DBF_DOUBLE) {
        prompt("Region 10 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R11, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 11 counts")
    }
    field(R11N, DBF_DOUBLE) {
        prompt("Region 11 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R11P, DBF_DOUBLE) {
        prompt("Region 11 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R12, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 12 counts")
    }
    field(R12N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 12 net counts")
    }
    field(R12P, DBF_DOUBLE) {
        interest(1)
        special(SPC_MOD)
        prompt("Region 12 preset")
    }
    field(R13, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 13 counts")
    }
    field(R13N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 13 net counts")
    }
    field(R13P, DBF_DOUBLE) {
        prompt("Region 13 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R14, DBF_DOUBLE) {
        prompt("Region 14 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R14N, DBF_DOUBLE) {
        prompt("Region 14 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R14P, DBF_DOUBLE) {
        interest(1)
        special(SPC_MOD)
        prompt("Region 14 preset")
    }
    field(R15, DBF_DOUBLE) {
        prompt("Region 15 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R15N, DBF_DOUBLE) {
        prompt("Region 15 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R15P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 15 preset")
    }
    field(R16, DBF_DOUBLE) {
        prompt("Region 16 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R16N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 16 net counts")
    }
    field(R16P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 16 preset")
    }
    field(R17, DBF_DOUBLE) {
        prompt("Region 17 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R17N, DBF_DOUBLE) {
        prompt("Region 17 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R17P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 17 preset")
    }
    field(R18, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 18 counts")
    }
    field(R18N, DBF_DOUBLE) {
        prompt("Region 18 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R18P, DBF_DOUBLE) {
        prompt("Region 18 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R19, DBF_DOUBLE) {
        prompt("Region 19 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R19N, DBF_DOUBLE) {
        prompt("Region 19 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R19P, DBF_DOUBLE) {
        prompt("Region 19 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R20, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 20 counts")
    }
    field(R20N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 20 net counts")
    }
    field(R20P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 20 preset")
    }
    field(R21, DBF_DOUBLE) {
        prompt("Region 21 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R21N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 21 net counts")
    }
    field(R21P, DBF_DOUBLE) {
        prompt("Region 21 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R22, DBF_DOUBLE) {
        prompt("Region 22 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R22N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 22 net counts")
    }
    field(R22P, DBF_DOUBLE) {
        prompt("Region 22 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R23, DBF_DOUBLE) {
        prompt("Region 23 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R23N, DBF_DOUBLE) {
        prompt("Region 23 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R23P, DBF_DOUBLE) {
        prompt("Region 23 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R24, DBF_DOUBLE) {
        prompt("Region 24 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R24N, DBF_DOUBLE) {
        prompt("Region 24 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R24P, DBF_DOUBLE) {
        prompt("Region 24 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R25, DBF_DOUBLE) {
        prompt("Region 25 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R25N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 25 net counts")
    }
    field(R25P, DBF_DOUBLE) {
        prompt("Region 25 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R26, DBF_DOUBLE) {
        prompt("Region 26 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R26N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 26 net counts")
    }
    field(R26P, DBF_DOUBLE) {
        prompt("Region 26 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R27, DBF_DOUBLE) {
        prompt("Region 27 counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R27N, DBF_DOUBLE) {
        prompt("Region 27 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R27P, DBF_DOUBLE) {
        prompt("Region 27 preset")
        special(SPC_MOD)
        interest(1)
    }
    field(R28, DBF_DOUBLE) {
        prompt("Region 28 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R28N, DBF_DOUBLE) {
        prompt("Region 28 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R28P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 28 preset")
    }
    field(R29, DBF_DOUBLE) {
        prompt("Region 29 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R29N, DBF_DOUBLE) {
        prompt("Region 29 net counts")
        special(SPC_NOMOD)
        interest(1)
    }
    field(R29P, DBF_DOUBLE) {
        prompt("Region 29 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R30, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 30 counts")
    }
    field(R30N, DBF_DOUBLE) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Region 30 net counts")
    }
    field(R30P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 30 preset")
    }
    field(R31, DBF_DOUBLE) {
        prompt("Region 31 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R31N, DBF_DOUBLE) {
        prompt("Region 31 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R31P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 31 preset")
    }
    field(R0NM, DBF_STRING) {
        interest(1)
        size(16)
        promptgroup("10 - Common")
        prompt("Region 0 name")
    }
    field(R1NM, DBF_STRING) {
        prompt("Region 1 name")
        size(16)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R2NM, DBF_STRING) {
        prompt("Region 2 name")
        size(16)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R3NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 3 name")
    }
    field(R4NM, DBF_STRING) {
        prompt("Region 4 name")
        size(16)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R5NM, DBF_STRING) {
        prompt("Region 5 name")
        interest(1)
        size(16)
        promptgroup("10 - Common")
    }
    field(R6NM, DBF_STRING) {
        size(16)
        interest(1)
        promptgroup("10 - Common")
        prompt("Region 6 name")
    }
    field(R7NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 7 name")
    }
    field(R8NM, DBF_STRING) {
        interest(1)
        size(16)
        promptgroup("10 - Common")
        prompt("Region 8 name")
    }
    field(R9NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 9 name")
    }
    field(R10NM, DBF_STRING) {
        prompt("Region 10 name")
        promptgroup("10 - Common")
        size(16)
        interest(1)
    }
    field(R11NM, DBF_STRING) {
        prompt("Region 11 name")
        interest(1)
        size(16)
        promptgroup("10 - Common")
    }
    field(R12NM, DBF_STRING) {
        prompt("Region 12 name")
        size(16)
        promptgroup("10 - Common")
        interest(1)
    }
    field(R13NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 13 name")
    }
    field(R14NM, DBF_STRING) {
        prompt("Region 14 name")
        promptgroup("10 - Common")
        size(16)
        interest(1)
    }
    field(R15NM, DBF_STRING) {
        prompt("Region 15 name")
        interest(1)
        size(16)
        promptgroup("10 - Common")
    }
    field(R16NM, DBF_STRING) {
        prompt("Region 16 name")
        interest(1)
        size(16)
        promptgroup("10 - Common")
    }
    field(R17NM, DBF_STRING) {
        prompt("Region 17 name")
        size(16)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R18NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 18 name")
    }
    field(R19NM, DBF_STRING) {
        size(16)
        interest(1)
        promptgroup("10 - Common")
        prompt("Region 19 name")
    }
    field(R20NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 20 name")
    }
    field(R21NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 21 name")
    }
    field(R22NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 22 name")
    }
    field(R23NM, DBF_STRING) {
        prompt("Region 23 name")
        promptgroup("10 - Common")
        size(16)
        interest(1)
    }
    field(R24NM, DBF_STRING) {
        interest(1)
        size(16)
        promptgroup("10 - Common")
        prompt("Region 24 name")
    }
    field(R25NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 25 name")
    }
    field(R26NM, DBF_STRING) {
        prompt("Region 26 name")
        size(16)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R27NM, DBF_STRING) {
        prompt("Region 27 name")
        interest(1)
        size(16)
        promptgroup("10 - Common")
    }
    field(R28NM, DBF_STRING) {
        prompt("Region 28 name")
        size(16)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R29NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        interest(1)
        prompt("Region 29 name")
    }
    field(R30NM, DBF_STRING) {
        prompt("Region 30 name")
        size(16)
        interest(1)
        promptgroup("10 - Common")
    }
    field(R31NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 31 name")
    }
}
device(mca, CONSTANT, devMCA_soft, "Soft Channel")
device(mca, INST_IO, devMcaAsyn, "asynMCA")
recordtype(longin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct longinRecord;
    %typedef struct longindset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*read_longin)(struct longinRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} longindset;
    %#define HAS_longindset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        promptgroup("40 - Input")
        prompt("Current value")
        asl(ASL0)
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_LONG) {
        prompt("High Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_LONG) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_LONG) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(LOLO, DBF_LONG) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Alarm Limit")
        pp(TRUE)
    }
    field(HIGH, DBF_LONG) {
        prompt("High Alarm Limit")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_LONG) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        pp(TRUE)
    }
    field(LLSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Low Severity")
    }
    field(HYST, DBF_LONG) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ADEL, DBF_LONG) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_LONG) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LALM, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Input Specifctn")
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
}
device(longin, CONSTANT, devLiSoft, "Soft Channel")
device(longin, CONSTANT, devLiSoftCallback, "Async Soft Channel")
device(longin, INST_IO, devLiGeneralTime, "General Time")
device(longin, INST_IO, asynLiInt32, "asynInt32")
device(longin, INST_IO, asynLiUInt32Digital, "asynUInt32Digital")
device(longin, INST_IO, asynLiInt64, "asynInt64")
recordtype(ai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aiRecord;
    %typedef struct aidset {
    %    dset common;
    %    long (*read_ai)(struct aiRecord *prec);
    %    long (*special_linconv)(struct aiRecord *prec, int after);
    %} aidset;
    %#define HAS_aidset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             bklnk")
        interest(4)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        asl(ASL0)
        prompt("Current EGU Value")
        promptgroup("40 - Input")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Display Precision")
    }
    field(LINR, DBF_MENU) {
        prompt("Linearization")
        pp(TRUE)
        menu(menuConvert)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        interest(1)
    }
    field(EGUF, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        special(SPC_LINCONV)
        pp(TRUE)
        prompt("Engineer Units Full")
    }
    field(EGUL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Engineer Units Low")
        promptgroup("60 - Convert")
        interest(1)
        special(SPC_LINCONV)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(AOFF, DBF_DOUBLE) {
        prompt("Adjustment Offset")
        pp(TRUE)
        promptgroup("60 - Convert")
        interest(1)
    }
    field(ASLO, DBF_DOUBLE) {
        initial("1")
        prompt("Adjustment Slope")
        pp(TRUE)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(SMOO, DBF_DOUBLE) {
        prompt("Smoothing")
        promptgroup("60 - Convert")
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(AFVL, DBF_DOUBLE) {
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(ESLO, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(2)
        initial("1")
        prompt("Raw to EGU Slope")
        pp(TRUE)
    }
    field(EOFF, DBF_DOUBLE) {
        prompt("Raw to EGU Offset")
        pp(TRUE)
        promptgroup("60 - Convert")
        interest(2)
    }
    field(ROFF, DBF_ULONG) {
        interest(2)
        pp(TRUE)
        prompt("Raw Offset")
    }
    field(PBRK, DBF_NOACCESS) {
        extra("void *   pbrk")
        interest(4)
        special(SPC_NOMOD)
        prompt("Ptrto brkTable")
    }
    field(INIT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Initialized?")
    }
    field(LBRK, DBF_SHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("LastBreak Point")
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Previous Raw Value")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        menu(menuSimm)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
    }
    field(SIMPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
        prompt("Sim. Mode Private")
    }
}
device(ai, CONSTANT, devAiSoft, "Soft Channel")
device(ai, CONSTANT, devAiSoftRaw, "Raw Soft Channel")
device(ai, CONSTANT, devAiSoftCallback, "Async Soft Channel")
device(ai, INST_IO, devTimestampAI, "Soft Timestamp")
device(ai, INST_IO, devAiGeneralTime, "General Time")
device(ai, INST_IO, asynAiInt32, "asynInt32")
device(ai, INST_IO, asynAiInt32Average, "asynInt32Average")
device(ai, INST_IO, asynAiFloat64, "asynFloat64")
device(ai, INST_IO, asynAiFloat64Average, "asynFloat64Average")
device(ai, INST_IO, asynAiInt64, "asynInt64")
recordtype(int64out) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct int64outRecord;
    %typedef struct int64outdset {
    %    dset common;
    %    long (*write_int64out)(struct int64outRecord *prec);
    %} int64outdset;
    %#define HAS_int64outdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_INT64) {
        promptgroup("50 - Output")
        pp(TRUE)
        prompt("Desired Output")
        asl(ASL0)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Units name")
    }
    field(DRVH, DBF_INT64) {
        interest(1)
        promptgroup("30 - Action")
        prop(YES)
        pp(TRUE)
        prompt("Drive High Limit")
    }
    field(DRVL, DBF_INT64) {
        prompt("Drive Low Limit")
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("30 - Action")
    }
    field(HOPR, DBF_INT64) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_INT64) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_INT64) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
        pp(TRUE)
    }
    field(LOLO, DBF_INT64) {
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HIGH, DBF_INT64) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_INT64) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        prompt("Hihi Severity")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        prompt("Lolo Severity")
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        pp(TRUE)
    }
    field(HYST, DBF_INT64) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_INT64) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_INT64) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_INT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_MOD)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
        prompt("Sim. Mode Private")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
    }
    field(IVOV, DBF_INT64) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output value")
    }
}
device(int64out, CONSTANT, devI64outSoft, "Soft Channel")
device(int64out, CONSTANT, devI64outSoftCallback, "Async Soft Channel")
device(int64out, INST_IO, asynInt64Out, "asynInt64")
recordtype(bo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct boRecord;
    %typedef struct bodset {
    %    dset common; /*init_record returns:(0,2)=>(success,success no convert*/
    %    long (*write_bo)(struct boRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} bodset;
    %#define HAS_bodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(2)
        menu(menuYesNo)
        special(SPC_NOMOD)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        special(SPC_NOMOD)
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        prompt("Current Value")
        asl(ASL0)
        pp(TRUE)
        promptgroup("50 - Output")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Seconds to Hold High")
    }
    field(ZNAM, DBF_STRING) {
        prompt("Zero Name")
        pp(TRUE)
        prop(YES)
        interest(1)
        size(26)
        promptgroup("80 - Display")
    }
    field(ONAM, DBF_STRING) {
        interest(1)
        size(26)
        promptgroup("80 - Display")
        prop(YES)
        pp(TRUE)
        prompt("One Name")
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        prompt("prev Raw Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Hardware Mask")
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *  rpvt")
        interest(4)
        prompt("Record Private")
    }
    field(WDPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *	wdpt")
        prompt("Watch Dog Timer ID")
    }
    field(ZSV, DBF_MENU) {
        pp(TRUE)
        prompt("Zero Error Severity")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(OSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("One Error Severity")
    }
    field(COSV, DBF_MENU) {
        pp(TRUE)
        prompt("Change of State Sevr")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(RBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Monitored")
    }
    field(LALM, DBF_USHORT) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Simulation Output Link")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID outpt action")
    }
    field(IVOV, DBF_USHORT) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
}
device(bo, CONSTANT, devBoSoft, "Soft Channel")
device(bo, CONSTANT, devBoSoftRaw, "Raw Soft Channel")
device(bo, CONSTANT, devBoSoftCallback, "Async Soft Channel")
device(bo, INST_IO, devBoGeneralTime, "General Time")
device(bo, INST_IO, devBoDbState, "Db State")
device(bo, INST_IO, asynBoInt32, "asynInt32")
device(bo, INST_IO, asynBoUInt32Digital, "asynUInt32Digital")
recordtype(int64in) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct int64inRecord;
    %typedef struct int64indset {
    %    dset common;
    %    long (*read_int64in)(struct int64inRecord *prec);
    %} int64indset;
    %#define HAS_int64indset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("unambiguous_dset    *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_INT64) {
        promptgroup("40 - Input")
        pp(TRUE)
        prompt("Current value")
        asl(ASL0)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(EGU, DBF_STRING) {
        prompt("Units name")
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_INT64) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_INT64) {
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_INT64) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_INT64) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_INT64) {
        prompt("High Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOW, DBF_INT64) {
        prompt("Low Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_INT64) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Filter Time Constant")
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Alarm Filter Value")
    }
    field(ADEL, DBF_INT64) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_INT64) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_INT64) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_INT64) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_INT64) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_INT64) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        special(SPC_MOD)
        menu(menuYesNo)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        interest(4)
        special(SPC_NOMOD)
        menu(menuSimm)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        menu(menuScan)
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Sim. Mode Private")
    }
}
device(int64in, CONSTANT, devI64inSoft, "Soft Channel")
device(int64in, CONSTANT, devI64inSoftCallback, "Async Soft Channel")
device(int64in, INST_IO, asynInt64In, "asynInt64")
recordtype(aSub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %struct aSubRecord;
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        special(SPC_NOMOD)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        special(SPC_NOMOD)
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        prompt("Subr. return value")
        asl(ASL0)
    }
    field(OVAL, DBF_LONG) {
        prompt("Old return value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(INAM, DBF_STRING) {
        prompt("Initialize Subr. Name")
        special(SPC_NOMOD)
        size(41)
        promptgroup("30 - Action")
        interest(1)
    }
    field(LFLG, DBF_MENU) {
        prompt("Subr. Input Enable")
        menu(aSubLFLG)
        promptgroup("30 - Action")
        interest(1)
    }
    field(SUBL, DBF_INLINK) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Subroutine Name Link")
    }
    field(SNAM, DBF_STRING) {
        size(41)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Process Subr. Name")
    }
    field(ONAM, DBF_STRING) {
        size(41)
        interest(3)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        prompt("Old Subr. Name")
    }
    field(SADR, DBF_NOACCESS) {
        interest(2)
        extra("long (*sadr)(struct aSubRecord *)")
        special(SPC_NOMOD)
        prompt("Subroutine Address")
    }
    field(CADR, DBF_NOACCESS) {
        prompt("Subroutine Cleanup Address")
        special(SPC_NOMOD)
        interest(2)
        extra("void (*cadr)(struct aSubRecord *)")
    }
    field(BRSV, DBF_MENU) {
        pp(TRUE)
        prompt("Bad Return Severity")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        prompt("Display Precision")
    }
    field(EFLG, DBF_MENU) {
        promptgroup("50 - Output")
        interest(1)
        menu(aSubEFLG)
        initial("1")
        prompt("Output Event Flag")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input Link A")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input Link B")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link C")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input Link D")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input Link E")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input Link F")
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        prompt("Input Link G")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Input Link H")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input Link I")
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link J")
    }
    field(INPK, DBF_INLINK) {
        prompt("Input Link K")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link L")
    }
    field(INPM, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Input Link M")
    }
    field(INPN, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link N")
    }
    field(INPO, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        interest(1)
        prompt("Input Link O")
    }
    field(INPP, DBF_INLINK) {
        prompt("Input Link P")
        interest(1)
        promptgroup("43 - Input O-U")
    }
    field(INPQ, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        interest(1)
        prompt("Input Link Q")
    }
    field(INPR, DBF_INLINK) {
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Input Link R")
    }
    field(INPS, DBF_INLINK) {
        prompt("Input Link S")
        interest(1)
        promptgroup("43 - Input O-U")
    }
    field(INPT, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        interest(1)
        prompt("Input Link T")
    }
    field(INPU, DBF_INLINK) {
        prompt("Input Link U")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(A, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value A")
        special(SPC_DBADDR)
        interest(2)
        extra("void *a")
    }
    field(B, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value B")
        interest(2)
        extra("void *b")
        special(SPC_DBADDR)
    }
    field(C, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value C")
        interest(2)
        extra("void *c")
        special(SPC_DBADDR)
    }
    field(D, DBF_NOACCESS) {
        interest(2)
        extra("void *d")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Input value D")
    }
    field(E, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *e")
        interest(2)
        prompt("Input value E")
        asl(ASL0)
    }
    field(F, DBF_NOACCESS) {
        extra("void *f")
        interest(2)
        special(SPC_DBADDR)
        prompt("Input value F")
        asl(ASL0)
    }
    field(G, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value G")
        extra("void *g")
        interest(2)
        special(SPC_DBADDR)
    }
    field(H, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value H")
        special(SPC_DBADDR)
        interest(2)
        extra("void *h")
    }
    field(I, DBF_NOACCESS) {
        interest(2)
        extra("void *i")
        special(SPC_DBADDR)
        prompt("Input value I")
        asl(ASL0)
    }
    field(J, DBF_NOACCESS) {
        extra("void *j")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Input value J")
    }
    field(K, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        extra("void *k")
        prompt("Input value K")
        asl(ASL0)
    }
    field(L, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value L")
        special(SPC_DBADDR)
        interest(2)
        extra("void *l")
    }
    field(M, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value M")
        special(SPC_DBADDR)
        interest(2)
        extra("void *m")
    }
    field(N, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *n")
        interest(2)
        prompt("Input value N")
        asl(ASL0)
    }
    field(O, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value O")
        special(SPC_DBADDR)
        extra("void *o")
        interest(2)
    }
    field(P, DBF_NOACCESS) {
        prompt("Input value P")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("void *p")
        interest(2)
    }
    field(Q, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Input value Q")
        special(SPC_DBADDR)
        extra("void *q")
        interest(2)
    }
    field(R, DBF_NOACCESS) {
        interest(2)
        extra("void *r")
        special(SPC_DBADDR)
        prompt("Input value R")
        asl(ASL0)
    }
    field(S, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *s")
        interest(2)
        asl(ASL0)
        prompt("Input value S")
    }
    field(T, DBF_NOACCESS) {
        prompt("Input value T")
        asl(ASL0)
        special(SPC_DBADDR)
        interest(2)
        extra("void *t")
    }
    field(U, DBF_NOACCESS) {
        prompt("Input value U")
        asl(ASL0)
        interest(2)
        extra("void *u")
        special(SPC_DBADDR)
    }
    field(FTA, DBF_MENU) {
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of A")
    }
    field(FTB, DBF_MENU) {
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of B")
    }
    field(FTC, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Type of C")
        initial("DOUBLE")
    }
    field(FTD, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Type of D")
        initial("DOUBLE")
    }
    field(FTE, DBF_MENU) {
        interest(1)
        promptgroup("41 - Input A-G")
        menu(menuFtype)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of E")
    }
    field(FTF, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Type of F")
        initial("DOUBLE")
    }
    field(FTG, DBF_MENU) {
        prompt("Type of G")
        initial("DOUBLE")
        special(SPC_NOMOD)
        menu(menuFtype)
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(FTH, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of H")
        interest(1)
        promptgroup("42 - Input H-N")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTI, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of I")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTJ, DBF_MENU) {
        prompt("Type of J")
        initial("DOUBLE")
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(FTK, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of K")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTL, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of L")
        interest(1)
        promptgroup("42 - Input H-N")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTM, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of M")
        interest(1)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTN, DBF_MENU) {
        prompt("Type of N")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(FTO, DBF_MENU) {
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of O")
    }
    field(FTP, DBF_MENU) {
        prompt("Type of P")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(FTQ, DBF_MENU) {
        prompt("Type of Q")
        initial("DOUBLE")
        special(SPC_NOMOD)
        menu(menuFtype)
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(FTR, DBF_MENU) {
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of R")
    }
    field(FTS, DBF_MENU) {
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of S")
    }
    field(FTT, DBF_MENU) {
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of T")
    }
    field(FTU, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of U")
        interest(1)
        promptgroup("43 - Input O-U")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(NOA, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Max. elements in A")
        initial("1")
    }
    field(NOB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in B")
        initial("1")
    }
    field(NOC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in C")
        initial("1")
    }
    field(NOD, DBF_ULONG) {
        interest(1)
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in D")
    }
    field(NOE, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Max. elements in E")
        initial("1")
    }
    field(NOF, DBF_ULONG) {
        prompt("Max. elements in F")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(NOG, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Max. elements in G")
        initial("1")
    }
    field(NOH, DBF_ULONG) {
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in H")
    }
    field(NOI, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Max. elements in I")
        initial("1")
    }
    field(NOJ, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Max. elements in J")
        initial("1")
    }
    field(NOK, DBF_ULONG) {
        prompt("Max. elements in K")
        initial("1")
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(NOL, DBF_ULONG) {
        prompt("Max. elements in L")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(NOM, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Max. elements in M")
        initial("1")
    }
    field(NON, DBF_ULONG) {
        prompt("Max. elements in N")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(NOO, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Max. elements in O")
        initial("1")
    }
    field(NOP, DBF_ULONG) {
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in P")
    }
    field(NOQ, DBF_ULONG) {
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in Q")
    }
    field(NOR, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Max. elements in R")
        initial("1")
    }
    field(NOS, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in S")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOT, DBF_ULONG) {
        prompt("Max. elements in T")
        initial("1")
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(NOU, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in U")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
    }
    field(NEA, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in A")
    }
    field(NEB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in B")
        initial("1")
    }
    field(NEC, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in C")
    }
    field(NED, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in D")
    }
    field(NEE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in E")
        initial("1")
    }
    field(NEF, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in F")
        initial("1")
    }
    field(NEG, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in G")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEH, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in H")
    }
    field(NEI, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in I")
    }
    field(NEJ, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEK, DBF_ULONG) {
        prompt("Num. elements in K")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEL, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in L")
    }
    field(NEM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in M")
        initial("1")
    }
    field(NEN, DBF_ULONG) {
        prompt("Num. elements in N")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEO, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in O")
        initial("1")
    }
    field(NEP, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in P")
        initial("1")
    }
    field(NEQ, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in Q")
    }
    field(NER, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in R")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NES, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in S")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NET, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in T")
    }
    field(NEU, DBF_ULONG) {
        prompt("Num. elements in U")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Link A")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTB, DBF_OUTLINK) {
        prompt("Output Link B")
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(OUTC, DBF_OUTLINK) {
        prompt("Output Link C")
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(OUTD, DBF_OUTLINK) {
        prompt("Output Link D")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTE, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Output Link E")
    }
    field(OUTF, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link F")
    }
    field(OUTG, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link G")
    }
    field(OUTH, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link H")
    }
    field(OUTI, DBF_OUTLINK) {
        prompt("Output Link I")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTJ, DBF_OUTLINK) {
        prompt("Output Link J")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTK, DBF_OUTLINK) {
        prompt("Output Link K")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTL, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link L")
    }
    field(OUTM, DBF_OUTLINK) {
        promptgroup("52 - Output H-N")
        interest(1)
        prompt("Output Link M")
    }
    field(OUTN, DBF_OUTLINK) {
        prompt("Output Link N")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTO, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link O")
    }
    field(OUTP, DBF_OUTLINK) {
        prompt("Output Link P")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(OUTQ, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link Q")
    }
    field(OUTR, DBF_OUTLINK) {
        prompt("Output Link R")
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(OUTS, DBF_OUTLINK) {
        prompt("Output Link S")
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(OUTT, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link T")
    }
    field(OUTU, DBF_OUTLINK) {
        prompt("Output Link U")
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(VALA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *vala")
        interest(2)
        asl(ASL0)
        prompt("Output value A")
    }
    field(VALB, DBF_NOACCESS) {
        interest(2)
        extra("void *valb")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value B")
    }
    field(VALC, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value C")
        extra("void *valc")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALD, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *vald")
        interest(2)
        asl(ASL0)
        prompt("Output value D")
    }
    field(VALE, DBF_NOACCESS) {
        prompt("Output value E")
        asl(ASL0)
        interest(2)
        extra("void *vale")
        special(SPC_DBADDR)
    }
    field(VALF, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value F")
        special(SPC_DBADDR)
        extra("void *valf")
        interest(2)
    }
    field(VALG, DBF_NOACCESS) {
        prompt("Output value G")
        asl(ASL0)
        interest(2)
        extra("void *valg")
        special(SPC_DBADDR)
    }
    field(VALH, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value H")
        interest(2)
        extra("void *valh")
        special(SPC_DBADDR)
    }
    field(VALI, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *vali")
        interest(2)
        asl(ASL0)
        prompt("Output value I")
    }
    field(VALJ, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value J")
        extra("void *valj")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALK, DBF_NOACCESS) {
        interest(2)
        extra("void *valk")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value K")
    }
    field(VALL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value L")
        interest(2)
        extra("void *vall")
        special(SPC_DBADDR)
    }
    field(VALM, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value M")
        special(SPC_DBADDR)
        extra("void *valm")
        interest(2)
    }
    field(VALN, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        extra("void *valn")
        prompt("Output value N")
        asl(ASL0)
    }
    field(VALO, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        extra("void *valo")
        asl(ASL0)
        prompt("Output value O")
    }
    field(VALP, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value P")
        special(SPC_DBADDR)
        extra("void *valp")
        interest(2)
    }
    field(VALQ, DBF_NOACCESS) {
        extra("void *valq")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value Q")
    }
    field(VALR, DBF_NOACCESS) {
        extra("void *valr")
        interest(2)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Output value R")
    }
    field(VALS, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        extra("void *vals")
        asl(ASL0)
        prompt("Output value S")
    }
    field(VALT, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output value T")
        extra("void *valt")
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALU, DBF_NOACCESS) {
        prompt("Output value U")
        asl(ASL0)
        extra("void *valu")
        interest(2)
        special(SPC_DBADDR)
    }
    field(OVLA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output A")
        interest(4)
        extra("void *ovla")
        special(SPC_NOMOD)
    }
    field(OVLB, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *ovlb")
        prompt("Old Output B")
        asl(ASL0)
    }
    field(OVLC, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output C")
        special(SPC_NOMOD)
        extra("void *ovlc")
        interest(4)
    }
    field(OVLD, DBF_NOACCESS) {
        interest(4)
        extra("void *ovld")
        special(SPC_NOMOD)
        prompt("Old Output D")
        asl(ASL0)
    }
    field(OVLE, DBF_NOACCESS) {
        interest(4)
        extra("void *ovle")
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Old Output E")
    }
    field(OVLF, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output F")
        extra("void *ovlf")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLG, DBF_NOACCESS) {
        prompt("Old Output G")
        asl(ASL0)
        special(SPC_NOMOD)
        extra("void *ovlg")
        interest(4)
    }
    field(OVLH, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlh")
        interest(4)
        prompt("Old Output H")
        asl(ASL0)
    }
    field(OVLI, DBF_NOACCESS) {
        prompt("Old Output I")
        asl(ASL0)
        special(SPC_NOMOD)
        interest(4)
        extra("void *ovli")
    }
    field(OVLJ, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlj")
        interest(4)
        prompt("Old Output J")
        asl(ASL0)
    }
    field(OVLK, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output K")
        extra("void *ovlk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLL, DBF_NOACCESS) {
        prompt("Old Output L")
        asl(ASL0)
        interest(4)
        extra("void *ovll")
        special(SPC_NOMOD)
    }
    field(OVLM, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlm")
        interest(4)
        prompt("Old Output M")
        asl(ASL0)
    }
    field(OVLN, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output N")
        extra("void *ovln")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLO, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output O")
        extra("void *ovlo")
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlp")
        interest(4)
        asl(ASL0)
        prompt("Old Output P")
    }
    field(OVLQ, DBF_NOACCESS) {
        extra("void *ovlq")
        interest(4)
        special(SPC_NOMOD)
        prompt("Old Output Q")
        asl(ASL0)
    }
    field(OVLR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlr")
        interest(4)
        prompt("Old Output R")
        asl(ASL0)
    }
    field(OVLS, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Old Output S")
        special(SPC_NOMOD)
        interest(4)
        extra("void *ovls")
    }
    field(OVLT, DBF_NOACCESS) {
        extra("void *ovlt")
        interest(4)
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Old Output T")
    }
    field(OVLU, DBF_NOACCESS) {
        interest(4)
        extra("void *ovlu")
        special(SPC_NOMOD)
        prompt("Old Output U")
        asl(ASL0)
    }
    field(FTVA, DBF_MENU) {
        prompt("Type of VALA")
        initial("DOUBLE")
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(FTVB, DBF_MENU) {
        prompt("Type of VALB")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(FTVC, DBF_MENU) {
        prompt("Type of VALC")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(FTVD, DBF_MENU) {
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of VALD")
    }
    field(FTVE, DBF_MENU) {
        prompt("Type of VALE")
        initial("DOUBLE")
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(FTVF, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALF")
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVG, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALG")
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVH, DBF_MENU) {
        prompt("Type of VALH")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(FTVI, DBF_MENU) {
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of VALI")
    }
    field(FTVJ, DBF_MENU) {
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of VALJ")
    }
    field(FTVK, DBF_MENU) {
        prompt("Type of VALK")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(FTVL, DBF_MENU) {
        interest(1)
        promptgroup("52 - Output H-N")
        menu(menuFtype)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of VALL")
    }
    field(FTVM, DBF_MENU) {
        prompt("Type of VALM")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(FTVN, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Type of VALN")
        initial("DOUBLE")
    }
    field(FTVO, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALO")
        interest(1)
        promptgroup("53 - Output O-U")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVP, DBF_MENU) {
        interest(1)
        promptgroup("53 - Output O-U")
        menu(menuFtype)
        special(SPC_NOMOD)
        initial("DOUBLE")
        prompt("Type of VALP")
    }
    field(FTVQ, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALQ")
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVR, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Type of VALR")
        initial("DOUBLE")
    }
    field(FTVS, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALS")
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVT, DBF_MENU) {
        prompt("Type of VALT")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(FTVU, DBF_MENU) {
        prompt("Type of VALU")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
    }
    field(NOVA, DBF_ULONG) {
        prompt("Max. elements in VALA")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(NOVB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALB")
        initial("1")
    }
    field(NOVC, DBF_ULONG) {
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALC")
    }
    field(NOVD, DBF_ULONG) {
        prompt("Max. elements in VALD")
        initial("1")
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(NOVE, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Max. elements in VALE")
        initial("1")
    }
    field(NOVF, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALF")
        initial("1")
    }
    field(NOVG, DBF_ULONG) {
        prompt("Max. elements in VALG")
        initial("1")
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(NOVH, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        interest(1)
        prompt("Max. elements in VAlH")
        initial("1")
    }
    field(NOVI, DBF_ULONG) {
        prompt("Max. elements in VALI")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(NOVJ, DBF_ULONG) {
        prompt("Max. elements in VALJ")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(NOVK, DBF_ULONG) {
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALK")
    }
    field(NOVL, DBF_ULONG) {
        prompt("Max. elements in VALL")
        initial("1")
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(NOVM, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in VALM")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVN, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in VALN")
        interest(1)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
    }
    field(NOVO, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        interest(1)
        prompt("Max. elements in VALO")
        initial("1")
    }
    field(NOVP, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        interest(1)
        prompt("Max. elements in VALP")
        initial("1")
    }
    field(NOVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Max. elements in VALQ")
        initial("1")
    }
    field(NOVR, DBF_ULONG) {
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALR")
    }
    field(NOVS, DBF_ULONG) {
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALS")
    }
    field(NOVT, DBF_ULONG) {
        prompt("Max. elements in VALT")
        initial("1")
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(NOVU, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in VALU")
        interest(1)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
    }
    field(NEVA, DBF_ULONG) {
        prompt("Num. elements in VALA")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVB, DBF_ULONG) {
        prompt("Num. elements in VALB")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALC")
        initial("1")
    }
    field(NEVD, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALD")
    }
    field(NEVE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALE")
        initial("1")
    }
    field(NEVF, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALF")
        initial("1")
    }
    field(NEVG, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in VALG")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVH, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VAlH")
    }
    field(NEVI, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALI")
    }
    field(NEVJ, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALJ")
    }
    field(NEVK, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALK")
    }
    field(NEVL, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in VALL")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVM, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALM")
    }
    field(NEVN, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALN")
        initial("1")
    }
    field(NEVO, DBF_ULONG) {
        prompt("Num. elements in VALO")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVP, DBF_ULONG) {
        prompt("Num. elements in VALP")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVQ, DBF_ULONG) {
        prompt("Num. elements in VALQ")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVR, DBF_ULONG) {
        prompt("Num. elements in VALR")
        initial("1")
        special(SPC_NOMOD)
        interest(3)
    }
    field(NEVS, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALS")
        initial("1")
    }
    field(NEVT, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in VALT")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVU, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALU")
        initial("1")
    }
    field(ONVA, DBF_ULONG) {
        prompt("Num. elements in OVLA")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLB")
        initial("1")
    }
    field(ONVC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLC")
        initial("1")
    }
    field(ONVD, DBF_ULONG) {
        prompt("Num. elements in OVLD")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVE, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in OVLE")
    }
    field(ONVF, DBF_ULONG) {
        prompt("Num. elements in OVLF")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVG, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLG")
        initial("1")
    }
    field(ONVH, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in VAlH")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVI, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLI")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVJ, DBF_ULONG) {
        prompt("Num. elements in OVLJ")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLK")
        initial("1")
    }
    field(ONVL, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLL")
        initial("1")
    }
    field(ONVM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLM")
        initial("1")
    }
    field(ONVN, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLN")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVO, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLO")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVP, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLP")
        initial("1")
    }
    field(ONVQ, DBF_ULONG) {
        prompt("Num. elements in OVLQ")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVR, DBF_ULONG) {
        prompt("Num. elements in OVLR")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
    field(ONVS, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLS")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVT, DBF_ULONG) {
        interest(4)
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in OVLT")
    }
    field(ONVU, DBF_ULONG) {
        prompt("Num. elements in OVLU")
        initial("1")
        special(SPC_NOMOD)
        interest(4)
    }
}
recordtype(ao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aoRecord;
    %typedef struct aodset {
    %    dset common; /*init_record returns: (0,2)=>(success,success no convert)*/
    %    long (*write_ao)(struct aoRecord *prec); /*(0)=>(success ) */
    %    long (*special_linconv)(struct aoRecord *prec, int after);
    %} aodset;
    %#define HAS_aodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct typed_rset   *rset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        special(SPC_SCAN)
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("epicsUInt8          bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        pp(TRUE)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        asl(ASL0)
        prompt("Desired Output")
        promptgroup("50 - Output")
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OROC, DBF_DOUBLE) {
        prompt("Output Rate of Change")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
    }
    field(OIF, DBF_MENU) {
        menu(aoOIF)
        promptgroup("50 - Output")
        interest(1)
        prompt("Out Full/Incremental")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LINR, DBF_MENU) {
        interest(1)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        menu(menuConvert)
        pp(TRUE)
        prompt("Linearization")
    }
    field(EGUF, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        special(SPC_LINCONV)
        pp(TRUE)
        prompt("Eng Units Full")
    }
    field(EGUL, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        pp(TRUE)
        prompt("Eng Units Low")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(ROFF, DBF_ULONG) {
        interest(2)
        prompt("Raw Offset")
        pp(TRUE)
    }
    field(EOFF, DBF_DOUBLE) {
        pp(TRUE)
        prompt("EGU to Raw Offset")
        interest(2)
        promptgroup("60 - Convert")
    }
    field(ESLO, DBF_DOUBLE) {
        interest(2)
        promptgroup("60 - Convert")
        pp(TRUE)
        prompt("EGU to Raw Slope")
        initial("1")
    }
    field(DRVH, DBF_DOUBLE) {
        interest(1)
        promptgroup("30 - Action")
        prop(YES)
        pp(TRUE)
        prompt("Drive High Limit")
    }
    field(DRVL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Drive Low Limit")
        interest(1)
        promptgroup("30 - Action")
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(AOFF, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Adjustment Offset")
        interest(1)
        promptgroup("60 - Convert")
    }
    field(ASLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        pp(TRUE)
        prompt("Adjustment Slope")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prompt("High Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        menu(menuAlarmSevr)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("Low Severity")
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(RVAL, DBF_LONG) {
        prompt("Current Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_LONG) {
        prompt("Previous Raw Value")
        special(SPC_NOMOD)
        interest(3)
    }
    field(RBV, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_LONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Readback Value")
    }
    field(PVAL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous value")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        special(SPC_NOMOD)
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PBRK, DBF_NOACCESS) {
        prompt("Ptrto brkTable")
        interest(4)
        extra("void *   pbrk")
        special(SPC_NOMOD)
    }
    field(INIT, DBF_SHORT) {
        prompt("Initialized?")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LBRK, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("LastBreak Point")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        special(SPC_MOD)
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        promptgroup("50 - Output")
        interest(2)
        menu(menuIvoa)
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
    field(OMOD, DBF_UCHAR) {
        prompt("Was OVAL modified?")
        special(SPC_NOMOD)
    }
}
device(ao, CONSTANT, devAoSoft, "Soft Channel")
device(ao, CONSTANT, devAoSoftRaw, "Raw Soft Channel")
device(ao, CONSTANT, devAoSoftCallback, "Async Soft Channel")
device(ao, INST_IO, asynAoInt32, "asynInt32")
device(ao, INST_IO, asynAoFloat64, "asynFloat64")
device(ao, INST_IO, asynAoInt64, "asynInt64")
recordtype(longout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct longoutRecord;
    %typedef struct longoutdset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_longout)(struct longoutRecord *prec); /*(-1,0)=>(failure,success*/
    %} longoutdset;
    %#define HAS_longoutdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
        prompt("Monitor List")
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("epicsUInt8          bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        pp(TRUE)
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Desired Output")
        pp(TRUE)
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        interest(1)
        menu(menuOmsl)
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(DRVH, DBF_LONG) {
        prompt("Drive High Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("30 - Action")
        interest(1)
    }
    field(DRVL, DBF_LONG) {
        prompt("Drive Low Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("30 - Action")
        interest(1)
    }
    field(HOPR, DBF_LONG) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_LONG) {
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_LONG) {
        prompt("Hihi Alarm Limit")
        pp(TRUE)
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LOLO, DBF_LONG) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Alarm Limit")
        pp(TRUE)
    }
    field(HIGH, DBF_LONG) {
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_LONG) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        pp(TRUE)
        prompt("Low Severity")
    }
    field(HYST, DBF_LONG) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_LONG) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_LONG) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Sim Output Specifctn")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        menu(menuYesNo)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        promptgroup("90 - Simulate")
        interest(1)
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        interest(2)
        promptgroup("90 - Simulate")
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        extra("epicsCallback            *simpvt")
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID output action")
    }
    field(IVOV, DBF_LONG) {
        prompt("INVALID output value")
        interest(2)
        promptgroup("50 - Output")
    }
}
device(longout, CONSTANT, devLoSoft, "Soft Channel")
device(longout, CONSTANT, devLoSoftCallback, "Async Soft Channel")
device(longout, INST_IO, asynLoInt32, "asynInt32")
device(longout, INST_IO, asynLoUInt32Digital, "asynUInt32Digital")
device(longout, INST_IO, asynLoInt64, "asynInt64")
recordtype(sub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %struct subRecord;
    %typedef long (*SUBFUNCPTR)(struct subRecord *);
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct typed_rset   *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("unambiguous_dset    *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
        asl(ASL0)
        pp(TRUE)
    }
    field(INAM, DBF_STRING) {
        prompt("Init Routine Name")
        size(40)
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
    }
    field(SNAM, DBF_STRING) {
        prompt("Subroutine Name")
        size(40)
        promptgroup("30 - Action")
        interest(1)
        special(SPC_MOD)
    }
    field(SADR, DBF_NOACCESS) {
        interest(4)
        extra("SUBFUNCPTR sadr")
        special(SPC_NOMOD)
        prompt("Subroutine Address")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input L")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        pp(TRUE)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        promptgroup("80 - Display")
        interest(1)
    }
    field(BRSV, DBF_MENU) {
        prompt("Bad Return Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        prompt("Lolo Severity")
        interest(1)
        promptgroup("70 - Alarm")
        prop(YES)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        prompt("High Severity")
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        prompt("Prev Value of A")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        special(SPC_NOMOD)
        interest(3)
    }
    field(LK, DBF_DOUBLE) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Value of K")
    }
    field(LL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of L")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
}
recordtype(mbbiDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %/* Declare Device Support Entry Table */
    %struct mbbiDirectRecord;
    %typedef struct mbbidirectdset {
    %    dset common; /* init_record returns: (-1,0) => (failure, success)*/
    %    long (*read_mbbi)(struct mbbiDirectRecord *prec); /* (0, 2) => (success, success no convert)*/
    %} mbbidirectdset;
    %#define HAS_mbbidirectdset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        size(40)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             bklnk")
        prompt("Backwards link tracking")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        pp(TRUE)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        special(SPC_NOMOD)
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        special(SPC_NOMOD)
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct typed_rset   *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("unambiguous_dset    *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        special(SPC_NOMOD)
        interest(1)
        extra("epicsUInt8          bkpt")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        promptgroup("40 - Input")
        pp(TRUE)
        prompt("Current Value")
        asl(ASL0)
    }
    field(NOBT, DBF_SHORT) {
        promptgroup("40 - Input")
        interest(1)
        special(SPC_NOMOD)
        prompt("Number of Bits")
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        interest(3)
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_LONG) {
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
        interest(3)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        interest(1)
        promptgroup("40 - Input")
    }
    field(SIOL, DBF_INLINK) {
        prompt("Simulation Input Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuSimm)
        special(SPC_MOD)
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
    }
    field(OLDSIMM, DBF_MENU) {
        prompt("Prev. Simulation Mode")
        interest(4)
        menu(menuSimm)
        special(SPC_NOMOD)
    }
    field(SSCN, DBF_MENU) {
        prompt("Sim. Mode Scan")
        initial("65535")
        menu(menuScan)
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SDLY, DBF_DOUBLE) {
        initial("-1.0")
        prompt("Sim. Mode Async Delay")
        interest(2)
        promptgroup("90 - Simulate")
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        extra("epicsCallback            *simpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(B0, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 0")
    }
    field(B1, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 1")
        interest(1)
    }
    field(B2, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 2")
        interest(1)
    }
    field(B3, DBF_UCHAR) {
        prompt("Bit 3")
        pp(TRUE)
        interest(1)
    }
    field(B4, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 4")
    }
    field(B5, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 5")
    }
    field(B6, DBF_UCHAR) {
        interest(1)
        prompt("Bit 6")
        pp(TRUE)
    }
    field(B7, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 7")
    }
    field(B8, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 8")
    }
    field(B9, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 9")
    }
    field(BA, DBF_UCHAR) {
        prompt("Bit 10")
        pp(TRUE)
        interest(1)
    }
    field(BB, DBF_UCHAR) {
        prompt("Bit 11")
        pp(TRUE)
        interest(1)
    }
    field(BC, DBF_UCHAR) {
        prompt("Bit 12")
        pp(TRUE)
        interest(1)
    }
    field(BD, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 13")
        interest(1)
    }
    field(BE, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 14")
        interest(1)
    }
    field(BF, DBF_UCHAR) {
        interest(1)
        prompt("Bit 15")
        pp(TRUE)
    }
    field(B10, DBF_UCHAR) {
        prompt("Bit 16")
        pp(TRUE)
        interest(1)
    }
    field(B11, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 17")
    }
    field(B12, DBF_UCHAR) {
        interest(1)
        prompt("Bit 18")
        pp(TRUE)
    }
    field(B13, DBF_UCHAR) {
        prompt("Bit 19")
        pp(TRUE)
        interest(1)
    }
    field(B14, DBF_UCHAR) {
        interest(1)
        prompt("Bit 20")
        pp(TRUE)
    }
    field(B15, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 21")
        interest(1)
    }
    field(B16, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 22")
        interest(1)
    }
    field(B17, DBF_UCHAR) {
        prompt("Bit 23")
        pp(TRUE)
        interest(1)
    }
    field(B18, DBF_UCHAR) {
        interest(1)
        prompt("Bit 24")
        pp(TRUE)
    }
    field(B19, DBF_UCHAR) {
        prompt("Bit 25")
        pp(TRUE)
        interest(1)
    }
    field(B1A, DBF_UCHAR) {
        prompt("Bit 26")
        pp(TRUE)
        interest(1)
    }
    field(B1B, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 27")
        interest(1)
    }
    field(B1C, DBF_UCHAR) {
        prompt("Bit 28")
        pp(TRUE)
        interest(1)
    }
    field(B1D, DBF_UCHAR) {
        prompt("Bit 29")
        pp(TRUE)
        interest(1)
    }
    field(B1E, DBF_UCHAR) {
        prompt("Bit 30")
        pp(TRUE)
        interest(1)
    }
    field(B1F, DBF_UCHAR) {
        interest(1)
        pp(TRUE)
        prompt("Bit 31")
    }
}
device(mbbiDirect, CONSTANT, devMbbiDirectSoft, "Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftRaw, "Raw Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftCallback, "Async Soft Channel")
device(mbbiDirect, INST_IO, asynMbbiDirectUInt32Digital, "asynUInt32Digital")
recordtype(aao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "devSup.h"
    %#include "epicsTime.h"
    %
    %/* Declare Device Support Entry Table */
    %struct aaoRecord;
    %typedef struct aaodset {
    %    dset common; /*init_record returns: (-1,0)=>(failure,success)*/
    %    long (*write_aao)(struct aaoRecord *prec); /*returns: (-1,0)=>(failure,success)*/
    %} aaodset;
    %#define HAS_aaodset
    %
    %#include "callback.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        special(SPC_SCAN)
        menu(menuScan)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(BKLNK, DBF_NOACCESS) {
        prompt("Backwards link tracking")
        interest(4)
        extra("ELLLIST             bklnk")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        pp(TRUE)
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        special(SPC_NOMOD)
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        special(SPC_NOMOD)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        special(SPC_NOMOD)
        interest(4)
        extra("struct typed_rset   *rset")
    }
    field(DSET, DBF_NOACCESS) {
        extra("unambiguous_dset    *dset")
        interest(4)
        special(SPC_NOMOD)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("epicsUInt8          bkpt")
        interest(1)
        special(SPC_NOMOD)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        extra("void *		val")
        special(SPC_DBADDR)
        pp(TRUE)
        asl(ASL0)
        prompt("Value")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        size(16)
        promptgroup("80 - Display")
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prop(YES)
        prompt("Low Operating Range")
    }
    field(NELM, DBF_ULONG) {
        initial("1")
        prompt("Number of Elements")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Field Type of Value")
    }
    field(NORD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        extra("void *		bptr")
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        menu(menuYesNo)
        special(SPC_MOD)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Simulation Output Link")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(OLDSIMM, DBF_MENU) {
        menu(menuSimm)
        special(SPC_NOMOD)
        interest(4)
        prompt("Prev. Simulation Mode")
    }
    field(SSCN, DBF_MENU) {
        initial("65535")
        prompt("Sim. Mode Scan")
        interest(1)
        promptgroup("90 - Simulate")
        menu(menuScan)
    }
    field(SDLY, DBF_DOUBLE) {
        prompt("Sim. Mode Async Delay")
        initial("-1.0")
        promptgroup("90 - Simulate")
        interest(2)
    }
    field(SIMPVT, DBF_NOACCESS) {
        prompt("Sim. Mode Private")
        special(SPC_NOMOD)
        interest(4)
        extra("epicsCallback            *simpvt")
    }
    field(MPST, DBF_MENU) {
        menu(aaoPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        menu(aaoPOST)
        prompt("Post Archive Monitors")
    }
    field(HASH, DBF_ULONG) {
        interest(3)
        prompt("Hash of OnChange data.")
    }
}
device(aao, CONSTANT, devAaoSoft, "Soft Channel")
driver(drvAsyn)
link(calc, lnkCalcIf)
link(debug, lnkDebugIf)
link(state, lnkStateIf)
link(const, lnkConstIf)
link(trace, lnkTraceIf)
registrar(drvAsynSerialPortRegisterCommands)
registrar(fastSweepRegister)
registrar(asSub)
registrar(acalcTotalAllocatedMemoryRegister)
registrar(asynRegister)
registrar(asynInterposeEosRegister)
registrar(subAveRegister)
registrar(mcaRontecRegister)
registrar(asynInterposeFlushRegister)
registrar(interpRegister)
registrar(dbndInitialize)
registrar(rsrvRegistrar)
registrar(syncInitialize)
registrar(arrInitialize)
registrar(asInitHooksRegister)
registrar(decInitialize)
registrar(asynInterposeEchoRegister)
registrar(configMenuRegistrar)
registrar(dbrestoreRegister)
registrar(asynInterposeDelayRegister)
registrar(save_restoreRegister)
registrar(arrayTestRegister)
registrar(editSseqRegistrar)
registrar(aCalcMonitorMemRegister)
registrar(tsInitialize)
variable(interpDebug, int)
variable(calcoutODLYprecision, int)
variable(aCalcPostfixDebug, int)
variable(aCalcMonitorMem_debug, int)
variable(sCalcStackHW, int)
variable(dbAccessDebugPUTF, int)
variable(lnkDebug_debug, int)
variable(asCaDebug, int)
variable(save_restoreDebug, int)
variable(CASDEBUG, int)
variable(aCalcLoopMax, int)
variable(dbThreadRealtimeLock, int)
variable(dbQuietMacroWarnings, int)
variable(dbTemplateMaxVars, int)
variable(dbConvertStrict, int)
variable(boHIGHlimit, double)
variable(save_restoreIncompleteSetsOk, int)
variable(sCalcStackLW, int)
variable(save_restoreSeqPeriodInSeconds, int)
variable(logClientDebug, int)
variable(dbJLinkDebug, int)
variable(dbBptNotMonotonic, int)
variable(transformRecordDebug, int)
variable(devsCalcoutSoftDebug, int)
variable(dbRecordsAbcSorted, int)
variable(sCalcoutRecordDebug, int)
variable(histogramSDELprecision, int)
variable(dbRecordsOnceOnly, int)
variable(atExitDebug, int)
variable(sCalcLoopMax, int)
variable(save_restoreRemountThreshold, int)
variable(callbackParallelThreadsDefault, int)
variable(configMenuDebug, int)
variable(seqDLYlimit, double)
variable(arrayTestDebug, int)
variable(calcoutODLYlimit, double)
variable(aCalcAsyncThreshold, int)
variable(sCalcPerformDebug, int)
variable(aCalcoutRecordDebug, int)
variable(save_restoreDatedBackupFiles, int)
variable(save_restoreNumSeqFiles, int)
variable(seqDLYprecision, int)
variable(swaitRecordDebug, int)
variable(sseqRecDebug, int)
variable(aCalcPerformDebug, int)
variable(mcaRecordDebug, int)
variable(sCalcPostfixDebug, int)
variable(debugSubAve, int)
variable(devaCalcoutSoftDebug, int)
variable(boHIGHprecision, int)
