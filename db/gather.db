#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/pmacUtil.dbd")
#! DBDEND

# % macro, __doc__, Flexible template for doing a gather on a PMAC or geoBrick 
# via an asyn record. 
# % macro, P, Pv Prefix
# % macro, M, Pv Suffix

record(waveform, "$(P)$(M):VELO") {
  field(DESC, "sampled velocity")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):FERR") {
  field(DESC, "sampled following error")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):POSN") {
  field(DESC, "sampled actual position")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):DEMANDPOSN") {
  field(DESC, "Demand position")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

record(waveform, "$(P)$(M):DEMANDVELO") {
  field(DESC, "Demand velo")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

# Kept updated with the current state of the SNL application.
# Not intended for end user display.
record(state, "$(P)$(M):STATE") {
  field(DESC, "current SNL state")
  field(PINI, "YES")
  field(VAL, "not initialised")
}

# Holds a user message about the state of the application: errors, warnings and so on.
record(stringin, "$(P)$(M):MSG") {
  field(DESC, "user message")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "not initialised")
}

# The sample period (or sample time) in PMAC servo cycles.
record(ao, "$(P)$(M):SPERIOD") {
  field(DESC, "sample period [servo cycles]")
  field(DTYP, "Soft Channel")
  field(PREC, "0")
  field(LINR, "NO CONVERSION")
  field(HOPR, "10000")
  field(LOPR, "1")
  field(FLNK, "$(P)$(M):TSAMPLE")
  field(OUT, "$(P)$(M):TSAMPLE.A PP")
  field(PINI, "YES")
}

# SNL will set this to 1 (parsing) when parsing the data from PMAC.
record(bi, "$(P)$(M):PARSING") {
  field(DESC, "set when parsing data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

# set to 1 (busy) when collecting data from the PMAC.
record(bi, "$(P)$(M):COLLECTING") {
  field(DESC, "set when collecting data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

# Start executing gather function when user writes to this record.
# Will go back to 0 (done) when gather scan is over and parsed.
record(busy, "$(P)$(M):EXECUTE") {
  field(DESC, "Start gather function")
  field(SCAN, "Passive")
  field(VAL, "0")
}

record(stringout, "$(P)$(M):MOTOR") {
  field(DESC, "motor record name")
  field(DTYP, "Soft Channel")
}

record(ao, "$(P)$(M):DEMAND") {
  field(DESC, "set demand position")
  field(DTYP, "Soft Channel")
  field(LINR, "NO CONVERSION")
  field(FLNK, "$(P)$(M):MOVETIME")
  field(PINI, "YES")
  field(PREC, "3")
}

record(calcout, "$(P)$(M):MRBV") {
  field(DESC, "Motor RBV")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P)$(M):MOVETIME")
  field(CALC, "A")
  field(OUT, "$(P)$(M):MOVETIME.A PP")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(PREC, "3")
}

record(ai, "$(P)$(M):AXISNO") {
  field(DESC, "get axis no from motor")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
}

record(calcout, "$(P)$(M):TSAMPLE") {
  field(DESC, "time per sample")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P)$(M):FSAMPLE")
  field(CALC, "A*B")
  field(OUT, "$(P)$(M):FSAMPLE.A PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "ms")
  field(PREC, "3")
}

record(calcout, "$(P)$(M):TGATHER") {
  field(DESC, "entire gather time")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(CALC, "1024/A/1000.0")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "s")
  field(PREC, "3")
}

record(calcout, "$(P)$(M):FSAMPLE") {
  field(DESC, "sample frequency")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P)$(M):TGATHER")
  field(CALC, "1.0/A")
  field(OUT, "$(P)$(M):TGATHER.A PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "kHz")
  field(PREC, "3")
}

record(bi, "$(P)$(M):GATHERING") {
  field(DESC, "set when gathering data")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(ZNAM, "done")
  field(ONAM, "busy")
}

record(stringout, "$(P)$(M):ASYNREC") {
  field(DESC, "asyn record name")
  field(DTYP, "Soft Channel")
  field(VAL, "$(P)$(M):ASYN")
}

record(waveform, "$(P)$(M):TIME") {
  field(DESC, "sampling time")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(NELM, "1024")
  field(FTVL, "DOUBLE")
}

# Contains the asyn port name $(PORT)
# which is directly related to the PMAC.
record(stringout, "$(P)$(M):PORT") {
  field(DESC, "asyn port name")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
}

# SNL will use this record to communicate with the PMAC.
# This record can be used as a default asyn record although
# the SNL application allows for another asyn record (possibly
# on another IOC) to be used instead if so desired.
record(asyn, "$(P)$(M):ASYN") {
  field(DESC, "communicate with PMAC")
  field(DTYP, "asynRecordDevice")
  field(TMOT, "5")
  field(IMAX, "67584")
  field(OMAX, "1024")
  field(IFMT, "ASCII")
}

record(calcout, "$(P)$(M):MOVETIME") {
  field(DESC, "calculate move time")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(CALC, "abs(A-D)>0.01?(((abs(A-D))/B)+C)*2+E:0")
  field(INPD, "$(P)$(M):DEMAND CP")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(EGU, "s")
  field(PREC, "3")
  field(SCAN, "Passive")
  field(INPE, "$(P)$(M):DELAY CP")
}

record(ai, "$(P)$(M):PMACNO") {
  field(DESC, "get PMAC no from motor")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
}

record(calcout, "$(P)$(M):MOVING") {
  field(DESC, "set when motor moving")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(UDF, "0")
  field(VAL, "0")
  field(CALC, "A")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(PREC, "0")
}

record(ao, "$(P)$(M):DELAY") {
  field(DESC, "set delay time")
  field(DTYP, "Soft Channel")
  field(LINR, "NO CONVERSION")
  field(PINI, "YES")
  field(PREC, "3")
}

#! Further lines contain data used by VisualDCT
#! View(1199,497,1.1)
#! Record("$(P)$(M):VELO",520,314,0,1,"$(P)$(M):VELO")
#! Record("$(P)$(M):FERR",920,314,0,1,"$(P)$(M):FERR")
#! Record("$(P)$(M):POSN",720,314,0,1,"$(P)$(M):POSN")
#! Record("$(P)$(M):DEMANDPOSN",1280,314,0,0,"$(P)$(M):DEMANDPOSN")
#! Record("$(P)$(M):DEMANDVELO",1460,314,0,0,"$(P)$(M):DEMANDVELO")
#! Record("$(P)$(M):STATE",240,381,0,1,"$(P)$(M):STATE")
#! Record("$(P)$(M):MSG",40,388,0,1,"$(P)$(M):MSG")
#! Record("$(P)$(M):SPERIOD",520,838,0,1,"$(P)$(M):SPERIOD")
#! Field("$(P)$(M):SPERIOD.FLNK",16777215,1,"$(P)$(M):SPERIOD.FLNK")
#! Link("$(P)$(M):SPERIOD.FLNK","$(P)$(M):TSAMPLE")
#! Field("$(P)$(M):SPERIOD.OUT",16777215,1,"$(P)$(M):SPERIOD.OUT")
#! Link("$(P)$(M):SPERIOD.OUT","$(P)$(M):TSAMPLE.A")
#! Record("$(P)$(M):PARSING",40,680,0,1,"$(P)$(M):PARSING")
#! Record("$(P)$(M):COLLECTING",240,520,0,1,"$(P)$(M):COLLECTING")
#! Record("$(P)$(M):EXECUTE",100,161,0,1,"$(P)$(M):EXECUTE")
#! Record("$(P)$(M):MOTOR",520,636,0,1,"$(P)$(M):MOTOR")
#! Record("$(P)$(M):DEMAND",760,660,0,1,"$(P)$(M):DEMAND")
#! Field("$(P)$(M):DEMAND.FLNK",16777215,1,"$(P)$(M):DEMAND.FLNK")
#! Link("$(P)$(M):DEMAND.FLNK","$(P)$(M):MOVETIME")
#! Field("$(P)$(M):DEMAND.VAL",16777215,1,"$(P)$(M):DEMAND.VAL")
#! Record("$(P)$(M):MRBV",1760,384,0,1,"$(P)$(M):MRBV")
#! Field("$(P)$(M):MRBV.OUT",16777215,0,"$(P)$(M):MRBV.OUT")
#! Link("$(P)$(M):MRBV.OUT","$(P)$(M):MOVETIME.A")
#! Field("$(P)$(M):MRBV.FLNK",16777215,0,"$(P)$(M):MRBV.FLNK")
#! Link("$(P)$(M):MRBV.FLNK","$(P)$(M):MOVETIME")
#! Record("$(P)$(M):AXISNO",1300,548,0,0,"$(P)$(M):AXISNO")
#! Record("$(P)$(M):TSAMPLE",800,1090,0,0,"$(P)$(M):TSAMPLE")
#! Field("$(P)$(M):TSAMPLE.A",16777215,0,"$(P)$(M):TSAMPLE.A")
#! Field("$(P)$(M):TSAMPLE.FLNK",16777215,1,"$(P)$(M):TSAMPLE.FLNK")
#! Link("$(P)$(M):TSAMPLE.FLNK","$(P)$(M):FSAMPLE")
#! Field("$(P)$(M):TSAMPLE.OUT",16777215,1,"$(P)$(M):TSAMPLE.OUT")
#! Link("$(P)$(M):TSAMPLE.OUT","$(P)$(M):FSAMPLE.A")
#! Record("$(P)$(M):TGATHER",1360,1198,0,0,"$(P)$(M):TGATHER")
#! Field("$(P)$(M):TGATHER.A",16777215,0,"$(P)$(M):TGATHER.A")
#! Record("$(P)$(M):FSAMPLE",1080,1130,0,0,"$(P)$(M):FSAMPLE")
#! Field("$(P)$(M):FSAMPLE.A",16777215,0,"$(P)$(M):FSAMPLE.A")
#! Field("$(P)$(M):FSAMPLE.FLNK",16777215,1,"$(P)$(M):FSAMPLE.FLNK")
#! Link("$(P)$(M):FSAMPLE.FLNK","$(P)$(M):TGATHER")
#! Field("$(P)$(M):FSAMPLE.OUT",16777215,1,"$(P)$(M):FSAMPLE.OUT")
#! Link("$(P)$(M):FSAMPLE.OUT","$(P)$(M):TGATHER.A")
#! Record("$(P)$(M):GATHERING",40,520,0,1,"$(P)$(M):GATHERING")
#! Record("$(P)$(M):ASYNREC",620,61,0,1,"$(P)$(M):ASYNREC")
#! Record("$(P)$(M):TIME",1100,314,0,1,"$(P)$(M):TIME")
#! Record("$(P)$(M):PORT",840,81,0,1,"$(P)$(M):PORT")
#! Record("$(P)$(M):ASYN",420,60,0,1,"$(P)$(M):ASYN")
#! Record("$(P)$(M):MOVETIME",1500,630,0,0,"$(P)$(M):MOVETIME")
#! Field("$(P)$(M):MOVETIME.INPD",16777215,0,"$(P)$(M):MOVETIME.INPD")
#! Link("$(P)$(M):MOVETIME.INPD","$(P)$(M):DEMAND.VAL")
#! Field("$(P)$(M):MOVETIME.A",16777215,0,"$(P)$(M):MOVETIME.A")
#! Field("$(P)$(M):MOVETIME.INPE",16777215,0,"$(P)$(M):MOVETIME.INPE")
#! Link("$(P)$(M):MOVETIME.INPE","$(P)$(M):DELAY.VAL")
#! Record("$(P)$(M):PMACNO",1120,548,0,1,"$(P)$(M):PMACNO")
#! Record("$(P)$(M):MOVING",240,678,0,1,"$(P)$(M):MOVING")
#! Record("$(P)$(M):DELAY",760,894,0,1,"$(P)$(M):DELAY")
#! Field("$(P)$(M):DELAY.VAL",16777215,1,"$(P)$(M):DELAY.VAL")
#! Box(Box0,40,40,320,280,1,16711731,null)
#! Box(Box4,500,540,1100,1080,1,16711731,null)
#! Box(Box3,500,300,1640,500,1,16711731,null)
#! Box(Box2,360,40,1020,260,1,16711731,null)
#! Box(Box1,20,320,440,900,1,16711731,null)
#! TextBox(TB0,60,60,320,140,0,"Dialog",12,1,16777215,"Start the gather function\nfrom this record.\nThis record returns when the whole\nprocess is complete (or failed).",null)
#! TextBox(TB4,520,620,800,560,0,"Dialog",12,1,16777215,"User selectable settings: all the settings the user need to\ncontrol to configure a specific gather setup.",null)
#! TextBox(TB3,520,460,840,500,0,"Dialog",12,1,16777215,"The waveform records will contain the sampled\ndata when the gather is successfully completed.",null)
#! TextBox(TB2,400,220,760,260,0,"Dialog",12,1,16777215,"The ASYN records do the direct communication with \nthe PMAC through the 'serial' port $(PORT)",null)
#! TextBox(TB1,40,320,420,380,0,"Dialog",12,1,16777215,"These records are used for keeping\ntrack of the current state and status\nof the gather application",null)
